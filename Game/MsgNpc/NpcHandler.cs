using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using TheChosenProject.Game.MsgServer;
//using TheChosenProject.MsgInterServer.Packets;
using TheChosenProject.Game.MsgFloorItem;
using TheChosenProject.Game.MsgTournaments;
using TheChosenProject.Client;
using TheChosenProject.Database;
using TheChosenProject.ServerSockets;
using TheChosenProject.Website;
using TheChosenProject.Role;
using TheChosenProject.Game.MsgMonster;
using TheChosenProject.Role.Instance;
using TheChosenProject.Game.ConquerStructures.AI;
using TheChosenProject.Game.Ai;
using TheChosenProject.ServerCore;
using static TheChosenProject.Game.MsgServer.MsgMessage;
using DevExpress.ClipboardSource.SpreadsheetML;
using DevExpress.XtraEditors.Filtering.Templates;
using static TheChosenProject.Role.KOBoard;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.Window;
using DevExpress.XtraPrinting.Native;
using DevExpress.Utils.Html.Internal;
using TheChosenProject.Game.MsgServer.AttackHandler.ReceiveAttack;

namespace TheChosenProject.Game.MsgNpc
{
    public class NpcHandler
    {

        [NpcAttribute(NpcID.ExitTeleport)]
        public static void ExitTeleport(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 100:
                case 0:
                    {
                        data.AddText($"Hello {client.Player.Name}")
                        .AddText($"Do you want to leave {client.Map.Name}?\n")
                        .AddOption("Yes, Teleport me to Twin City!", 2)
                        .AddOption("Leave", 255)
                        .AddAvatar(9).FinalizeDialog();
                        break;
                    }
                case 2: // Exchange Commoners Token -> Lords Token
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.DivineGoal)]
        public static void DivineGoal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 100:
                case 0:
                    {
                        data.AddText("Welcome, adventurer!")
                        .AddText("Here, you can craft the legendary [Divine Grail]!\n")
                        .AddText("Collect and exchange tokens through the following steps:\n")
                        .AddText(" 3x Commoners Token -> 1x Lords Token\n")
                        .AddText(" 3x Lords Token -> 1x Gold Cup\n")
                        .AddText(" 3x Gold Cup -> 1x DIVINE GRAIL\n")
                        .AddOption("Exchange Commoners Token for Lords Token", 2)
                        .AddOption("Exchange Lords Token for Gold Cup", 3)
                        .AddOption("Exchange Gold Cup for DIVINE GRAIL\r", 4)
                        .AddOption("Leave", 255)
                        .AddAvatar(9).FinalizeDialog();
                        break;
                    }
                case 2: // Exchange Commoners Token -> Lords Token
                    {
                        if (client.Inventory.Contain(722078, 3)) // Commoners Token ID
                        {
                            client.Inventory.Remove(722078, 3, stream);
                            client.Inventory.Add(stream, 723467, 1); // Lords Token ID
                            data.AddText("You have successfully exchanged 3x Commoners Token for 1x Lords Token!").
                            AddOption("Back", 100)
                            .AddOption("Leave", 255).AddAvatar(9).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have enough Commoners Tokens.")
                            .AddOption("Back", 100)
                            .AddOption("Leave", 255).AddAvatar(9).FinalizeDialog();
                        }
                        break;
                    }
                case 3: // Exchange Commoners Token -> Lords Token
                    {
                        if (client.Inventory.Contain(723467, 3)) //
                        {
                            client.Inventory.Remove(723467, 3, stream);
                            client.Inventory.Add(stream, 2100095, 1); //
                            data.AddText("You have successfully exchanged 7x Lord Token for 1x GoldCup!").
                            AddOption("Back", 100)
                            .AddOption("Leave", 255).AddAvatar(9).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have enough Lord Tokens.")
                            .AddOption("Back", 100)
                            .AddOption("Leave", 255).AddAvatar(9).FinalizeDialog();
                        }
                        break;
                    }
                case 4: // Exchange Commoners Token -> Lords Token
                    {
                        if (client.Inventory.Contain(2100095, 3)) // Replace 900001 with Commoners Token ID
                        {
                            Game.MsgFloorItem.MsgItemPacket effect = Game.MsgFloorItem.MsgItemPacket.Create();
                            effect.m_UID = (uint)Game.MsgFloorItem.MsgItemPacket.EffectMonsters.Night;
                            effect.DropType = MsgDropID.Earth;
                            Program.SendGlobalPackets.Enqueue(stream.ItemPacketCreate(effect));
                            client.Inventory.Remove(2100095, 3, stream);
                            client.Inventory.Add(stream, 2100245, 1); // Replace 900002 with Lords Token ID
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage($"#05 {client.Player.Name} has claimed the [DIVINE GRAIL]! A new legend rises! #05", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage($"#05 {client.Player.Name} has claimed the [DIVINE GRAIL]! A new legend rises! #05", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "fire1" });
                            data.AddText("You have successfully exchanged 7x GoldCup for 1x DIVINE GRAIL!").
                            AddOption("Back", 100)
                            .AddOption("Leave", 255).AddAvatar(9).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have enough GoldCup.")
                            .AddOption("Back", 100)
                            .AddOption("Leave", 255).AddAvatar(9).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.IronMineAssistant)]
        public static void IronMineAssistant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry~you~need~to~power~up~little~more. Only level 40 and more can enter the divine cave!")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                            break;
                        }
                        data.AddText("Dear~friend,~a~good~beginning~makes~a~good~ending.~Hello,~I~am~the~assistant~of~the~mine~union.")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(155, 93, 1028);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GoldMineAssistant)]
        public static void GoldMineAssistant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 70)
                        {
                            data.AddText("Sorry~you~need~to~power~up~little~more, only level 70 or more are.")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                            break;
                        }
                        data.AddText("Hello traveler. Want to go Desert City mine?")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(140, 104, 1027);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.SilverMineAssistant)]
        public static void SilverMineAssistant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry~you~need~to~power~up~little~more, only level 40 or more.")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                            break;
                        }
                        data.AddText("Hello traveler. Want to go Phoenix City mine?")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(029, 069, 1025);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.CooperMineAssistant)]
        public static void CooperMineAssistant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry~you~need~to~power~up~little~more, only level 40 or more.")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                            break;
                        }
                        data.AddText("Hello traveler. Want to go Phoenix City mine?")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(137, 103, 1026);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.DoveMineAssistant)]
        public static void DoveMineAssistant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level < 100)
                        {
                            data.AddText("Sorry~you~need~to~power~up~little~more, only level 100 or more.")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                            break;
                        }
                        data.AddText("Hello traveler. Want to go Adventure Map mine?")
                            .AddOption("Can~you~teleport~me.", 1)
                            .AddOption("Not~interested.", 255)
                            .AddAvatar(9).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(29, 69, 1029);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Level137Map)]
        public static void Level137Map(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level >= 110)
                        {
                            dialog.Text("Hello there ! i will teleport you to leveling map up to 120 but i need 1 HealingWine first you can bring me one from RedDevils");
                            dialog.Option("Here you are", 1);
                            dialog.Option("i~will~leave", 255);
                            dialog.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("Come back when you reach level 120 and higher").AddOption("i~see", 255).FinalizeDialog();

                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(723030, 1))
                        {
                            client.Inventory.Remove(723030, 1, stream);
                            client.Teleport(157, 463, 1300);
                        }
                        else
                        {
                            dialog.Text("sorry you don't have HealingWine bring one to me and comeback").AddOption("i~see", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DuelBot)]
        public static void DuelBot(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Choose your desired Bot difficulty:")
                            .AddOption("EasyBOT", 1)
                            .AddOption("MidBOT", 2)
                            .AddOption("HardBOT", 3)
                            .AddOption("InsaneBOT", 4)
                            .AddOption("DivineBOT ", 5)
                            .AddAvatar(102)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    {
                        client.Player.BotType = (byte)Option;
                        data.AddText("What skill would you like the bot to use?").AddOption("FastBlade", 6).AddOption("ScentSword", 7).AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 6:
                case 7:
                    {
                        client.Player.SkillType = (byte)(Option - 5);
                        data.AddText("choose your limit?").AddOption("10", 8).AddOption("50", 9).AddOption("100", 10).AddOption("Unlimited", 11).AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 8:
                case 9:
                case 10:
                case 11:
                    {
                        if (Option == 8)
                            client.Player.LimitHits = 10;
                        else if (Option == 9)
                            client.Player.LimitHits = 50;
                        else if (Option == 10)
                            client.Player.LimitHits = 100;
                        else if (Option == 11)
                            client.Player.LimitHits = -1;

                        var map = Database.Server.ServerMaps[700];
                        var dyn = map.GenerateDynamicID();
                        UnlimitedArenaRooms.Maps.Add(dyn, dyn);
                        ushort x = 0, y = 0;
                        map.GetRandCoord(ref x, ref y);
                        client.Teleport(x, y, 700, dyn);
                        client.Player.Hits = 0;
                        client.Player.TotalHits = 0;
                        client.Player.MaxChains = 0;

                        var ai = new Role.Bot.AI();
                        ai.SetLevel((Role.Bot.BotLevel)client.Player.BotType);
                        ai.LoadBot(Role.Bot.BotType.DuelBot, client, (Role.Bot.SkillType)client.Player.SkillType);

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.HourlyEvent)]
        public static void HourlyEvent(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText(" HourlyEvent is about to start! Do you want to join the fight?\nNote: If you want to join these command type @joinpvp")
                         .AddOption("Count me in", 1)
                         .AddOption("Nevermind", 255)
                         .AddAvatar(10)
                         .FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        if (Program.Events.Count > 0)
                        {
                            if (Program.Events.Count == 1)
                            {
                                if (Program.Events[0].AddPlayer(client))
                                    client.EventBase = Program.Events[0];
                            }
                        }
                        else
                        {
                            data.AddText("What a shame! It seems like you're too late! Make sure you join next time!")
                            .AddOption("I see", 255)
                             .AddAvatar(10)
                            .FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        #region World Boss Event
        #region teleport
        [NpcAttribute(NpcID.WorldBossTeleport)]
        public static void WorldBossTeleport(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're about to left map?")
                            .AddOption("Teleport~to~Twin~City.", 3)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }

                case 3:
                    {
                        client.Teleport(301, 279, 1002, 0);
                        //if (Program.MacJoin.ContainsKey(client.OnLogin.MacAddress))
                        //{
                        //    Program.MacJoin.Remove(client.OnLogin.MacAddress);
                        //}
                        break;
                    }
            }
        }
        #endregion
        [NpcAttribute(NpcID.EmbersMining)]
        public static void EmberMining(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Ah, a brave miner approaches! Deep within these caverns, you can uncover CPs or Mafic Rock—but fortune decides what you find. Every swing of your pickaxe is a gamble!\n")
                            .AddText("Which floor will you descend to?")
                        .AddOption("[Floor 1] Level 70 above ", 1)
                        .AddOption("[Floor 2] Level 100 above", 2)
                        .AddOption("[Floor 3] Level 111 above", 3)
                        .AddOption("[Floor 4] Level 120 above", 4)
                        .AddOption("Ok,~I~see.", 255)
                        .AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level > 69)
                        {
                            client.Teleport(231, 265, 1836);
                        }
                        else
                        {
                            data.AddText("I think you're sleeping, you can't join because you're low level!")
                                .AddOption("Oh!, forgive me sorry.", 0)
                                .AddOption("Ok,~I~see.", 255)
                                .AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.Level > 99)
                        {
                            client.Teleport(379, 149, 1836);
                        }
                        else
                        {
                            data.AddText("I think you're sleeping, you can't join because you're low level!")
                            .AddOption("Oh!, forgive me sorry.", 0)
                            .AddOption("Ok,~I~see.", 255)
                            .AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Player.Level > 110)
                        {
                            client.Teleport(319, 497, 1836);
                        }
                        else
                        {
                            data.AddText("I think you're sleeping, you can't join because you're low level!")
                            .AddOption("Oh!, forgive me sorry.", 0)
                            .AddOption("Ok,~I~see.", 255)
                            .AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.Level > 119)
                        {
                            client.Teleport(449, 356, 1836);
                        }
                        else
                        {
                            data.AddText("I think you're sleeping, you can't join because you're low level!")
                            .AddOption("Oh!, forgive me sorry.", 0)
                            .AddOption("Ok,~I~see.", 255)
                            .AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.EmberExit)]
        public static void EmberExit(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you want to leave the Ember Mining?")
                        .AddOption("Yes, Please I'm Done here!", 1)
                        .AddOption("Ok,~I~see.", 255)
                        .AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        client.Teleport(215, 179, 1036);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.EmberExit2)]
        public static void EmberExit2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you want to leave the Ember Mining?")
                        .AddOption("Yes, Please I'm Done here!", 1)
                        .AddOption("Ok,~I~see.", 255)
                        .AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        client.Teleport(215, 179, 1036);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.EmberExit3)]
        public static void EmberExit3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you want to leave the Ember Mining?")
                        .AddOption("Yes, Please I'm Done here!", 1)
                        .AddOption("Ok,~I~see.", 255)
                        .AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        client.Teleport(215, 179, 1036);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.EmberExit4)]
        public static void EmberExit4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you want to leave the Ember Mining?")
                        .AddOption("Yes, Please I'm Done here!", 1)
                        .AddOption("Ok,~I~see.", 255)
                        .AddAvatar(110).FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        client.Teleport(215, 179, 1036);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.WorldBoss)]
        public static void WorldBoss(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {

                        var GMap = Database.Server.ServerMaps[3082];
                        var mobs = GMap.View.GetAllMapRoles(MapObjectType.Monster).Where(p => (p as MonsterRole).Family.SpawnCount <= 0 && p.Alive);
                        if (mobs.Count() == 0)
                        {
                            data.Text("Hi Boss! If you are interested in world Boss\n");
                            data.Text("Respawned to continue the grind,");
                            data.Text("Then you have to kill them all:\n");
                            data.Text("========================================================\n");
                            data.Text("spawn schedule : <tip color=0xfff05050 >Everyday at (06:32, 16:32)</tip>\n");
                            data.Text("========================================================\n");
                            data.Text("<tip color=0xfff05050 ># Boss Drop:</tip>\n");
                            data.Text("<tip color=0x33FF33 >(4x(+3)Stone 4xSuperGem and 20xDbs, 3x1H-VIP, 1x1D-VIP)</tip>\n");
                            data.Text("========================================================\n");
                            data.AddOption("Statue: No Bosses.", 255);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.Text("Hi Boss! If you are interested in world Boss\n");
                            data.Text("Respawned to continue the grind,");
                            data.Text("Then you have to kill them all:\n");
                            data.Text("========================================================\n");
                            data.Text("spawn schedule : <tip color=0xfff05050 >Everyday at (06:32, 16:32)</tip>\n");
                            data.Text("========================================================\n");
                            data.Text("<tip color=0xfff05050 ># Boss Drop:</tip>\n");
                            data.Text("<tip color=0x33FF33 >(4x(+3)Stone 4xSuperGem and 20xDbs, 3x1H-VIP, 1x1D-VIP)</tip>\n");
                            data.Text("========================================================\n");
                            data.AddOption("Statue: Bosses Live.", 1);
                            data.FinalizeDialog();

                        }
                        break;
                    }
                case 1:
                    {
                        client.Teleport(112, 73, 3082);
                        break;
                    }
            }
        }
        #endregion
        [Npc(NpcID.CostumerChen2)]
        public unsafe static void CostumerChen2(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.AddText("Hello " + client.Player.Name + ", feel free ro choose the costume you prefer, taste to totally free.");
                    dialog.AddOption("New rare Garments.", 1);
                    dialog.AddOption("Close.", 225);
                    dialog.AddAvatar(30);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    {
                        client.ActiveNpc = 999998;
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 32;
                        actionQuery.Type = ActionType.OpenGuiNpc;
                        actionQuery.Timestamp = (int)client.ActiveNpc;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        actionQuery.wParam5 = (ushort)client.Player.Map;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.CouplesPK)]
        public static void CouplesPK(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello lovers! I'm the CouplePk manager,this event is held on every day. You'll have 5 minutes to sign up with your loved one in a team. You may sign up from 13:45 to 13:50 and the event will take place at 13:50 and you may sign up from 07:45 AM to 07:50 AM and the event will take place at 7:50.")

                            .AddOption("Sign~me~up", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CouplesPKWar.Process == ProcesType.Idle)
                        {
                            Game.MsgTournaments.MsgSchedules.CouplesPKWar.Join(client, stream);
                        }
                        else
                        {
                            data.AddText("The signup starts at 15:00 PM.\n-on every[Saturday, Sunday, Monday, Wednesday, Friday].")
           .AddOption("I see. ", 255)
           .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        #region 2nd reborn

        [Npc(NpcID.Reincarnation)]
        public unsafe static void Reincarnation(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I devote all my life to the research of eternity. And finally I know the secret of rebirth! Well, anything I can help you with?");
                    //data.AddOption("1st~Rebirth.", 1);
                    //data.AddOption("2nd~Rebirth.", 4);
                    data.AddOption("Reincarnation.", 5);
                    //data.AddOption("Reallot~my~Attribute~Points.", 8);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 8:
                    data.AddText("Reborn~level~70+~players~can~redistribute~their~attribute~points~at~the~cost~of~a~dragonball.");
                    data.AddOption("I~will~reallot~my~points.", 9).AddOption("Let~me~think~it~over.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 9:
                    if (client.Player.Level >= 70 && client.Player.Reborn > 0)
                    {
                        if (client.Inventory.Contain(1088000u, 1u, 0))
                        {
                            client.Inventory.Remove(1088000u, 1u, stream);
                            client.Player.Agility = 0;
                            client.Player.Strength = 0;
                            client.Player.Vitality = 1;
                            client.Player.Spirit = 0;
                            client.CreateBoxDialog("You have successfully reloaded your attribute points.");
                            if (client.Player.Reborn == 0)
                            {
                                client.Player.Atributes = 0;
                                DataCore.AtributeStatus.ResetStatsNonReborn(client.Player);
                                if (AtributesStatus.IsWater(client.Player.Class))
                                {
                                    if (client.Player.Level > 110)
                                        client.Player.Atributes = (ushort)((client.Player.Level - 110) * 3 + client.Player.ExtraAtributes);
                                }
                                else if (client.Player.Level > 120)
                                {
                                    client.Player.Atributes = (ushort)((client.Player.Level - 120) * 3 + client.Player.ExtraAtributes);
                                }
                            }
                            else if (client.Player.Reborn == 1)
                            {
                                client.Player.Atributes = (ushort)(Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                            }
                            else
                            {
                                if (client.Player.SecoundeRebornLevel == 0)
                                    client.Player.SecoundeRebornLevel = 130;
                                client.Player.Atributes = (ushort)(Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) + Server.RebornInfo.ExtraAtributePoints(client.Player.SecoundeRebornLevel, client.Player.SecondClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                            }
                            client.Player.SendUpdate(stream, client.Player.Strength, MsgUpdate.DataType.Strength);
                            client.Player.SendUpdate(stream, client.Player.Agility, MsgUpdate.DataType.Agility);
                            client.Player.SendUpdate(stream, client.Player.Spirit, MsgUpdate.DataType.Spirit);
                            client.Player.SendUpdate(stream, client.Player.Vitality, MsgUpdate.DataType.Vitality);
                            client.Player.SendUpdate(stream, client.Player.Atributes, MsgUpdate.DataType.Atributes);
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have one DragonBall.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You~cannot~reallot~your~ability~points~unless~you~are~reborn~and~above~level~70.");
                        data.AddOption("I~see", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 5:
                    data.AddText("From now on, have total control of your life! If you've been Reborn twice and are at least Level 110, just bring me some Oblivion Dew and I'll help you become Reincarnated! After the Reincarnation, your class skills will revert to level 0,");
                    data.AddText("~but they`ll return to their previous levels when you reach Level 110, again. If your classes have been the same for all three lives, including your current one, you can learn the Pure Skills from your class trainer,");
                    data.AddText("~in the job center.");
                    data.AddOption("I~want~to~get~Reincarnated.", 6);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.Reborn == 2 && (client.Inventory.Contain(711083, 1u, 1) || client.Inventory.Contain(711083, 1u, 0)))
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 485u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                    }
                    else
                    {
                        data.AddText("You have not been Reborn twice. I`m afraid you will not withstand the power of the Oblivion Dew. Come to me when you get stronger.");
                        data.AddOption("Got~it!~Thanks!", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 1:
                    if (client.Player.Reborn == 0 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(721259u, 1u, 0) || client.Inventory.Contain(721259u, 1u, 1))
                        {
                            data.AddText("There are two kinds of reborns. One is the normal one and the second one is blessed.");
                            data.AddText("The normal reborn will give you the chance to get a Super Gem and the blessed reborn will set a -1 into one of your equipment that you wear during the reborn. What do you chose?");
                            data.AddOption("Normal reborn.", 2);
                            data.AddOption("Blessed reborn.", 3);
                            data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have CelestialStone.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You~haven`t~reached~the~highest~rank~yet.~Please~work~harder. You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 4:
                    if (client.Player.Reborn == 1 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(723701u, 1u, 0) || client.Inventory.Contain(723701u, 1u, 1))
                        {
                            data.AddText("You don't worry, it's not gonna hurt you a bit when getting the third life. You just need an exemption token and it's all going to be fine.");
                            data.AddOption("Here is the ExemptionToken.", 3);
                            data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have ExemptionToken.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~you~are~ineligible~for~second~rebirth.~Please~wait~until~you~are~a~level~120~reborn~person.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("Select the super gem you desire.");
                    data.AddOption("SuperPhoenixGem.", 203);
                    data.AddOption("SuperDragonGem.", 213);
                    data.AddOption("SuperFuryGem.", 223);
                    data.AddOption("SuperRainbowGem.", 233);
                    data.AddOption("SuperVioletGem.", 253);
                    data.AddOption("SuperMoonGem.", 254);
                    data.AddOption("SuperKylinGem", 243);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 203:
                case 213:
                case 223:
                case 233:
                case 243:
                case 253:
                case 254:
                    if (client.Player.Reborn == 0)
                    {
                        client.RebornGem = (uint)((int)Option % 100);
                        if (client.RebornGem == 254)
                            client.RebornGem = 263u;
                    }
                    data.AddText("Select the class you want to reborn in.");
                    data.AddOption("Trojan.", 11);
                    data.AddOption("Warrior.", 21);
                    data.AddOption("Archer.", 41);
                    data.AddOption("WaterTaoist.", 132);
                    data.AddOption("FireTaoist.", 142);
                    //data.AddOption("Ninja.", 51);
                    //data.AddOption("Monk", 61);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 3:
                    data.AddText("Select the class you want to reborn in.");
                    data.AddOption("Trojan.", 11);
                    data.AddOption("Warrior.", 21);
                    data.AddOption("Archer.", 41);
                    data.AddOption("WaterTaoist.", 132);
                    data.AddOption("FireTaoist.", 142);
                    //data.AddOption("Ninja.", 51);
                    //data.AddOption("Monk", 61);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 11:
                case 21:
                case 41:
                case 51:
                case 61:
                case 71:
                case 81:
                case 132:
                case 142:
                case 161:
                    if (!client.Inventory.HaveSpace(4))
                    {
                        data.AddText("Sorry, but you need atleast 4 free spaces in your inventory.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    else if (client.Player.Reborn == 0 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(721259u, 1u, 0) || client.Inventory.Contain(721259u, 1u, 1))
                        {
                            client.Inventory.Remove(721259u, 1u, stream);
                            if (client.RebornGem != 0)
                                client.RebornGem = 0u;
                            else
                            {
                                MsgGameItem[] curentEquip;
                                curentEquip = client.Equipment.CurentEquip;
                                foreach (MsgGameItem item in curentEquip)
                                {
                                    if (item.Position != 12 && item.Bless == 0)
                                    {
                                        item.Bless = 1;
                                        item.Mode = Flags.ItemMode.Update;
                                        item.Send(client, stream);
                                        break;
                                    }
                                }
                            }
                            switch (Option)
                            {
                                case 11:
                                case 21:
                                case 51:
                                case 61:
                                case 71:
                                case 81:
                                case 161:
                                    client.Inventory.Add(stream, 410077u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false, Flags.ItemEffect.Poison);
                                    break;
                                case 41:
                                    client.Inventory.Add(stream, 500077u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false, Flags.ItemEffect.Stigma);
                                    break;
                                case 132:
                                case 142:
                                    client.Inventory.Add(stream, 421077u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false, Flags.ItemEffect.MP);
                                    break;
                            }
                            Server.RebornInfo.Reborn(client.Player, Option, stream);
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have CelatialStone.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else if (client.Player.Reborn == 1 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(723701u, 1u, 0) || client.Inventory.Contain(723701u, 1u, 1))
                        {
                            client.Inventory.Remove(723701u, 1u, stream);
                            client.Inventory.Add(stream, 723756, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Server.RebornInfo.Reborn(client.Player, Option, stream);
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have ExemptionToken.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    break;
            }
        }
        #endregion
        #region AutoCompose
        [NpcAttribute(NpcID.AutoCompose)]
        public static void AutoCompose(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {//AutoCompose
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey Hero Wood You make you stone and stuff be plus ???");
                        data.AddOption("Items Comopse", 30);
                        //data.AddOption("Stone Comopse", 10);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        data.AddText("I see. Upgrading an item`s Plus makes it more powerful, but also harder to use, lets Do it.")
                        .AddOption("Helmet,~Earring", 31)//done
                        .AddOption("Comopse~necklace.", 32)//done
                        .AddOption("Comopse~armor.", 33)//done
                        .AddOption("Comopse~Right~weapon.", 34)
                        .AddOption("Comopse~Left~weapon.", 35)
                        .AddOption("Comopse~ring,~heavy~ring.", 36)//done
                        .AddOption("Comopse~boots.", 38)//done

                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 38:
                    {
                        int Chose = Option - 30;
                        switch (Chose)
                        {
                            case 1:
                                {
                                    //خاتم -اسورة
                                    var liestItems = client.Inventory.ClientItems.Values;

                                    foreach (var Item in client.Inventory.ClientItems.Values)
                                    {

                                        var type1 = Database.ItemType.ItemPosition(Item.ITEM_ID);
                                        if (type1 != Chose) continue;
                                        bool done = false;
                                        uint Prograse = 0;
                                        Database.ItemType.DBItem DBItem;
                                        string dis = "";
                                        if (Database.Server.ItemsBase.TryGetValue(Item.ITEM_ID, out DBItem))
                                        {
                                            dis = DBItem.Description;
                                        }
                                        foreach (var Item2 in client.Inventory.ClientItems.Values)
                                        {
                                            Database.ItemType.DBItem DBItem2;
                                            if (Database.Server.ItemsBase.TryGetValue(Item2.ITEM_ID, out DBItem2))
                                            {
                                                if (dis != DBItem2.Description) continue;
                                            }
                                            var type2 = Database.ItemType.ItemPosition(Item2.ITEM_ID);
                                            if (type2 == Chose && Item2.UID != Item.UID)// عشان نتاكد انو ميبلصش نفسو مرتين  
                                            {
                                                if (Prograse == 11) Prograse = 10;
                                                Prograse += Database.ItemType.StonePlusPoints(Item2.Plus);
                                                Prograse += Item2.PlusProgress;

                                                Item2.Send(client, stream).Update(Item2, Role.Instance.AddMode.REMOVE, stream);// يمسح الايتماية بعد ما جاب قيمتها 
                                            }
                                        }
                                        //جزء تبليص الايتماية الاولى بعد ام جمعنا كل قيم باقى الايتمات 
                                        Item.PlusProgress += Prograse;
                                        while (Item.PlusProgress >= Database.ItemType.ComposePlusPoints(Item.Plus) && Item.Plus != 12)
                                        {
                                            done = true;
                                            Item.PlusProgress -= Database.ItemType.ComposePlusPoints(Item.Plus);
                                            Item.Plus++;
                                            if (Item.Plus == 12)
                                                Item.PlusProgress = 0;
                                        }
                                        Item.Mode = Role.Flags.ItemMode.Update;
                                        Item.Send(client, stream);
                                        if (Prograse > 0) done = true;
                                        if (done)
                                        {
                                            client.SendSysMesage("Congratulations,You  upgraded Your " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " to + " + Item.Plus + " and " + Item.PlusProgress + " in Progress!");
                                            break;
                                        }
                                    }

                                    break;
                                }
                            case 2:

                                {

                                    var liestItems = client.Inventory.ClientItems.Values;

                                    foreach (var Item in client.Inventory.ClientItems.Values)
                                    {

                                        var type1 = Database.ItemType.ItemPosition(Item.ITEM_ID);
                                        if (type1 != Chose) continue;
                                        bool done = false;
                                        uint Prograse = 0;
                                        Database.ItemType.DBItem DBItem;
                                        string dis = "";
                                        if (Database.Server.ItemsBase.TryGetValue(Item.ITEM_ID, out DBItem))
                                        {
                                            dis = DBItem.Description;
                                        }
                                        foreach (var Item2 in client.Inventory.ClientItems.Values)
                                        {
                                            Database.ItemType.DBItem DBItem2;
                                            if (Database.Server.ItemsBase.TryGetValue(Item2.ITEM_ID, out DBItem2))
                                            {
                                                if (dis != DBItem2.Description) continue;
                                            }
                                            var type2 = Database.ItemType.ItemPosition(Item2.ITEM_ID);
                                            if (type2 == Chose && Item2.UID != Item.UID)// عشان نتاكد انو ميبلصش نفسو مرتين  
                                            {
                                                if (Prograse == 11) Prograse = 10;
                                                Prograse += Database.ItemType.StonePlusPoints(Item2.Plus);
                                                Prograse += Item2.PlusProgress;

                                                Item2.Send(client, stream).Update(Item2, Role.Instance.AddMode.REMOVE, stream);// يمسح الايتماية بعد ما جاب قيمتها 
                                            }
                                        }
                                        //جزء تبليص الايتماية الاولى بعد ام جمعنا كل قيم باقى الايتمات 
                                        Item.PlusProgress += Prograse;
                                        while (Item.PlusProgress >= Database.ItemType.ComposePlusPoints(Item.Plus) && Item.Plus != 12)
                                        {
                                            done = true;
                                            Item.PlusProgress -= Database.ItemType.ComposePlusPoints(Item.Plus);
                                            Item.Plus++;
                                            if (Item.Plus == 12)
                                                Item.PlusProgress = 0;
                                        }
                                        Item.Mode = Role.Flags.ItemMode.Update;
                                        Item.Send(client, stream);
                                        if (Prograse > 0) done = true;
                                        if (done)
                                        {
                                            client.SendSysMesage("Congratulations,You  upgraded Your " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " to + " + Item.Plus + " and " + Item.PlusProgress + " in Progress!");
                                            break;
                                        }
                                    }

                                    break;
                                }
                            case 3:
                                {
                                    //خاتم -اسورة
                                    var liestItems = client.Inventory.ClientItems.Values;

                                    foreach (var Item in client.Inventory.ClientItems.Values)
                                    {

                                        var type1 = Database.ItemType.ItemPosition(Item.ITEM_ID);
                                        if (type1 != Chose) continue;
                                        bool done = false;
                                        uint Prograse = 0;
                                        Database.ItemType.DBItem DBItem;
                                        string dis = "";
                                        if (Database.Server.ItemsBase.TryGetValue(Item.ITEM_ID, out DBItem))
                                        {
                                            dis = DBItem.Description;
                                        }
                                        foreach (var Item2 in client.Inventory.ClientItems.Values)
                                        {
                                            Database.ItemType.DBItem DBItem2;
                                            if (Database.Server.ItemsBase.TryGetValue(Item2.ITEM_ID, out DBItem2))
                                            {
                                                if (dis != DBItem2.Description) continue;
                                            }
                                            var type2 = Database.ItemType.ItemPosition(Item2.ITEM_ID);
                                            if (type2 == Chose && Item2.UID != Item.UID)// عشان نتاكد انو ميبلصش نفسو مرتين  
                                            {
                                                if (Prograse == 11) Prograse = 10;
                                                Prograse += Database.ItemType.StonePlusPoints(Item2.Plus);
                                                Prograse += Item2.PlusProgress;

                                                Item2.Send(client, stream).Update(Item2, Role.Instance.AddMode.REMOVE, stream);// يمسح الايتماية بعد ما جاب قيمتها 
                                            }
                                        }
                                        //جزء تبليص الايتماية الاولى بعد ام جمعنا كل قيم باقى الايتمات 
                                        Item.PlusProgress += Prograse;
                                        while (Item.PlusProgress >= Database.ItemType.ComposePlusPoints(Item.Plus) && Item.Plus != 12)
                                        {
                                            done = true;
                                            Item.PlusProgress -= Database.ItemType.ComposePlusPoints(Item.Plus);
                                            Item.Plus++;
                                            if (Item.Plus == 12)
                                                Item.PlusProgress = 0;
                                        }
                                        Item.Mode = Role.Flags.ItemMode.Update;
                                        Item.Send(client, stream);
                                        if (Prograse > 0) done = true;
                                        if (done)
                                        {
                                            client.SendSysMesage("Congratulations,You  upgraded Your " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " to + " + Item.Plus + " and " + Item.PlusProgress + " in Progress!");
                                            break;
                                        }
                                    }

                                    break;
                                }
                            case 4:
                                {
                                    foreach (var Item in client.Inventory.ClientItems.Values)
                                    {
                                        if (Database.ItemType.IsArrow(Item.ITEM_ID))
                                            continue;
                                        //////////////
                                        var type1 = Database.ItemType.ItemPosition(Item.ITEM_ID);
                                        if (type1 != Chose) continue;
                                        bool done = false;
                                        uint Prograse = 0;
                                        foreach (var Item2 in client.Inventory.ClientItems.Values)
                                        {
                                            if (Database.ItemType.IsArrow(Item2.ITEM_ID))
                                                continue;
                                            uint r1 = Item.ITEM_ID / 1000;
                                            uint r2 = Item2.ITEM_ID / 1000;

                                            if (r1 != r2)
                                            {

                                                if (Database.ItemType.IsBow(Item.ITEM_ID) && !Database.ItemType.IsBow(Item2.ITEM_ID))
                                                    continue;
                                                if (Database.ItemType.IsTwoHand(Item.ITEM_ID) && !Database.ItemType.IsTwoHand(Item2.ITEM_ID))
                                                    continue;
                                                if (Database.ItemType.IsOneHand(Item.ITEM_ID) && !Database.ItemType.IsOneHand(Item2.ITEM_ID))
                                                    continue;

                                                if (Database.ItemType.IsShield(Item.ITEM_ID) && !Database.ItemType.IsShield(Item2.ITEM_ID))
                                                    continue;

                                                if (Database.ItemType.IsPistol(Item.ITEM_ID) && !Database.ItemType.IsPistol(Item2.ITEM_ID))
                                                    continue;

                                                if (Database.ItemType.IsBackSword(Item.ITEM_ID) && !Database.ItemType.IsBackSword(Item2.ITEM_ID))
                                                    continue;

                                            }

                                            ////////////////
                                            var type2 = Database.ItemType.ItemPosition(Item2.ITEM_ID);
                                            if (type2 == Chose && Item2.UID != Item.UID)// عشان نتاكد انو ميبلصش نفسو مرتين  
                                            {
                                                if (Prograse == 11) Prograse = 10;
                                                Prograse += Database.ItemType.StonePlusPoints(Item2.Plus);
                                                Prograse += Item2.PlusProgress;

                                                Item2.Send(client, stream).Update(Item2, Role.Instance.AddMode.REMOVE, stream);// يمسح الايتماية بعد ما جاب قيمتها 
                                            }
                                        }
                                        //جزء تبليص الايتماية الاولى بعد ام جمعنا كل قيم باقى الايتمات 
                                        Item.PlusProgress += Prograse;
                                        while (Item.PlusProgress >= Database.ItemType.ComposePlusPoints(Item.Plus) && Item.Plus != 12)
                                        {
                                            done = true;
                                            Item.PlusProgress -= Database.ItemType.ComposePlusPoints(Item.Plus);
                                            Item.Plus++;
                                            if (Item.Plus == 12)
                                                Item.PlusProgress = 0;
                                        }
                                        Item.Mode = Role.Flags.ItemMode.Update;
                                        Item.Send(client, stream);
                                        if (Prograse > 0) done = true;
                                        if (done)
                                            client.SendSysMesage("Congratulations,You  upgraded Your " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " to + " + Item.Plus + " and " + Item.PlusProgress + " in Progress!");
                                        break;
                                    }

                                    break;
                                }

                            case 5:

                                {
                                    foreach (var Item in client.Inventory.ClientItems.Values)
                                    {
                                        if (Database.ItemType.IsArrow(Item.ITEM_ID))
                                            continue;
                                        //////////////
                                        var type1 = Database.ItemType.ItemPosition(Item.ITEM_ID);
                                        if (type1 != Chose) continue;
                                        bool done = false;
                                        uint Prograse = 0;
                                        foreach (var Item2 in client.Inventory.ClientItems.Values)
                                        {
                                            if (Database.ItemType.IsArrow(Item2.ITEM_ID))
                                                continue;
                                            uint r1 = Item.ITEM_ID / 1000;
                                            uint r2 = Item2.ITEM_ID / 1000;

                                            if (r1 != r2)
                                            {

                                                if (Database.ItemType.IsBow(Item.ITEM_ID) && !Database.ItemType.IsBow(Item2.ITEM_ID))
                                                    continue;
                                                if (Database.ItemType.IsTwoHand(Item.ITEM_ID) && !Database.ItemType.IsTwoHand(Item2.ITEM_ID))
                                                    continue;
                                                if (Database.ItemType.IsOneHand(Item.ITEM_ID) && !Database.ItemType.IsOneHand(Item2.ITEM_ID))
                                                    continue;

                                                if (Database.ItemType.IsShield(Item.ITEM_ID) && !Database.ItemType.IsShield(Item2.ITEM_ID))
                                                    continue;

                                                if (Database.ItemType.IsPistol(Item.ITEM_ID) && !Database.ItemType.IsPistol(Item2.ITEM_ID))
                                                    continue;

                                                if (Database.ItemType.IsBackSword(Item.ITEM_ID) && !Database.ItemType.IsBackSword(Item2.ITEM_ID))
                                                    continue;
                                            }

                                            ////////////////
                                            var type2 = Database.ItemType.ItemPosition(Item2.ITEM_ID);
                                            if (type2 == Chose && Item2.UID != Item.UID)// عشان نتاكد انو ميبلصش نفسو مرتين  
                                            {
                                                if (Prograse == 11) Prograse = 10;
                                                Prograse += Database.ItemType.StonePlusPoints(Item2.Plus);
                                                Prograse += Item2.PlusProgress;

                                                Item2.Send(client, stream).Update(Item2, Role.Instance.AddMode.REMOVE, stream);// يمسح الايتماية بعد ما جاب قيمتها 
                                            }
                                        }
                                        //جزء تبليص الايتماية الاولى بعد ام جمعنا كل قيم باقى الايتمات 
                                        Item.PlusProgress += Prograse;
                                        while (Item.PlusProgress >= Database.ItemType.ComposePlusPoints(Item.Plus) && Item.Plus != 12)
                                        {
                                            done = true;
                                            Item.PlusProgress -= Database.ItemType.ComposePlusPoints(Item.Plus);
                                            Item.Plus++;
                                            if (Item.Plus == 12)
                                                Item.PlusProgress = 0;
                                        }
                                        Item.Mode = Role.Flags.ItemMode.Update;
                                        Item.Send(client, stream);
                                        if (Prograse > 0) done = true;
                                        if (done)
                                            client.SendSysMesage("Congratulations,You  upgraded Your " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " to + " + Item.Plus + " and " + Item.PlusProgress + " in Progress!");
                                        break;
                                    }

                                    break;
                                }
                            case 6:
                                {
                                    //خاتم -اسورة
                                    var liestItems = client.Inventory.ClientItems.Values;

                                    foreach (var Item in client.Inventory.ClientItems.Values)
                                    {

                                        var type1 = Database.ItemType.ItemPosition(Item.ITEM_ID);
                                        if (type1 != Chose) continue;
                                        bool done = false;
                                        uint Prograse = 0;
                                        Database.ItemType.DBItem DBItem;
                                        string dis = "";
                                        if (Database.Server.ItemsBase.TryGetValue(Item.ITEM_ID, out DBItem))
                                        {
                                            dis = DBItem.Description;
                                        }
                                        foreach (var Item2 in client.Inventory.ClientItems.Values)
                                        {
                                            Database.ItemType.DBItem DBItem2;
                                            if (Database.Server.ItemsBase.TryGetValue(Item2.ITEM_ID, out DBItem2))
                                            {
                                                if (dis != DBItem2.Description) continue;
                                            }
                                            var type2 = Database.ItemType.ItemPosition(Item2.ITEM_ID);
                                            if (type2 == Chose && Item2.UID != Item.UID)// عشان نتاكد انو ميبلصش نفسو مرتين  
                                            {
                                                if (Prograse == 11) Prograse = 10;
                                                Prograse += Database.ItemType.StonePlusPoints(Item2.Plus);
                                                Prograse += Item2.PlusProgress;

                                                Item2.Send(client, stream).Update(Item2, Role.Instance.AddMode.REMOVE, stream);// يمسح الايتماية بعد ما جاب قيمتها 
                                            }
                                        }
                                        //جزء تبليص الايتماية الاولى بعد ام جمعنا كل قيم باقى الايتمات 
                                        Item.PlusProgress += Prograse;
                                        while (Item.PlusProgress >= Database.ItemType.ComposePlusPoints(Item.Plus) && Item.Plus != 12)
                                        {
                                            done = true;
                                            Item.PlusProgress -= Database.ItemType.ComposePlusPoints(Item.Plus);
                                            Item.Plus++;
                                            if (Item.Plus == 12)
                                                Item.PlusProgress = 0;
                                        }
                                        Item.Mode = Role.Flags.ItemMode.Update;
                                        Item.Send(client, stream);
                                        if (Prograse > 0) done = true;
                                        if (done)
                                        {
                                            client.SendSysMesage("Congratulations,You  upgraded Your " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " to + " + Item.Plus + " and " + Item.PlusProgress + " in Progress!");
                                            break;
                                        }
                                    }

                                    break;
                                }
                            case 8:
                                {
                                    foreach (var Item in client.Inventory.ClientItems.Values)
                                    {
                                        var type1 = Database.ItemType.ItemPosition(Item.ITEM_ID);
                                        if (type1 != Chose) continue;
                                        bool done = false;
                                        uint Prograse = 0;
                                        foreach (var Item2 in client.Inventory.ClientItems.Values)
                                        {
                                            var type2 = Database.ItemType.ItemPosition(Item2.ITEM_ID);
                                            if (type2 == Chose && Item2.UID != Item.UID)// عشان نتاكد انو ميبلصش نفسو مرتين  
                                            {
                                                if (Item2.Plus == 11) Prograse = 10;
                                                Prograse += Database.ItemType.StonePlusPoints(Item2.Plus);
                                                Prograse += Item2.PlusProgress;

                                                Item2.Send(client, stream).Update(Item2, Role.Instance.AddMode.REMOVE, stream);// يمسح الايتماية بعد ما جاب قيمتها 
                                            }
                                        }
                                        //جزء تبليص الايتماية الاولى بعد ام جمعنا كل قيم باقى الايتمات 
                                        Item.PlusProgress += Prograse;
                                        while (Item.PlusProgress >= Database.ItemType.ComposePlusPoints(Item.Plus) && Item.Plus != 12)
                                        {
                                            done = true;
                                            Item.PlusProgress -= Database.ItemType.ComposePlusPoints(Item.Plus);
                                            Item.Plus++;
                                            if (Item.Plus == 12)
                                                Item.PlusProgress = 0;
                                        }
                                        Item.Mode = Role.Flags.ItemMode.Update;
                                        Item.Send(client, stream);
                                        if (Prograse > 0) done = true;
                                        if (done)
                                            client.SendSysMesage("Congratulations,You  upgraded Your " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " to + " + Item.Plus + " and " + Item.PlusProgress + " in Progress!");
                                        break;
                                    }

                                    break;
                                }

                        }

                        break;
                    }
                case 10:
                    {
                        //AutoCompose
                        if (client.Inventory.Remove(730001, 3, stream))
                        {
                            client.Inventory.Add(stream, 730002, 1, 2);
                        }
                        if (client.Inventory.Remove(730002, 3, stream))
                        {
                            client.Inventory.Add(stream, 730003, 1, 3);
                        }
                        if (client.Inventory.Remove(730003, 3, stream))
                        {
                            client.Inventory.Add(stream, 730004, 1, 4);
                        }
                        if (client.Inventory.Remove(730004, 3, stream))
                        {
                            client.Inventory.Add(stream, 730005, 1, 5);
                        }
                        if (client.Inventory.Remove(730005, 3, stream))
                        {
                            client.Inventory.Add(stream, 730006, 1, 6);
                        }
                        if (client.Inventory.Remove(730006, 3, stream))
                        {
                            client.Inventory.Add(stream, 730007, 1, 7);
                        }
                        if (client.Inventory.Remove(730007, 3, stream))
                        {
                            client.Inventory.Add(stream, 730008, 1, 8);
                        }

                        break;
                    }


            }
        }
        #endregion
        #region VoteManager
        [NpcAttribute(NpcID.VoteManager)]
        public static void VoteManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Alright! I'm always happy to help out people on their quest!.\n")
                         .AddText(" What would you like to receive in exchange for your [" + client.Player.VotePoints + "] Vote Points?")
                         .AddOption("Vote us on Xtremetop100.", 25)
                         .AddOption("Exchange For Rewards.", 60)
                         .AddOption("Ranks.", 70)
                         .AddOption("I`ll think about it.", 255)
                         .AddAvatar(3)
                         .FinalizeDialog();
                        break;
                    }
                #region Ranks
                case 70:
                    {
                        var ranks = Program.VoteRank.GetRanks;
                        data.AddText("Top 5 Highest Voter.\n");
                        if (ranks != null)
                        {
                            for (int i = 0; i < ranks.Length; i++)
                            {
                                uint Rank = (uint)(i + 1);
                                var hero = ranks[i];
                                data.AddText("-Rank " + Rank + "* " + hero.Name + " - Vpts [" + hero.VoteCount + "].\n");
                            }
                        }
                        else data.AddText("-No One.\n");
                        data.AddText("Your Count Vote: " + client.Player.CountVote + ".\n");
                        data.AddOption("I`ll think about it.", 255)
                        .AddAvatar(3)
                       .FinalizeDialog();
                        break;

                    }
                #endregion
                #region VotePoints
                case 60:
                    {
                        data.AddText("Alright! I'm always happy to help out people on their quest! \n What would you like to receive in exchange for your Vote Points?")
                        .AddOption("Activated x2 Exp (1 VPs)", 11)
                        .AddOption("[10K]Virtue Points (3 VPs)", 12)
                        .AddOption("3x Days VIP 6 (14 VPs)", 13)
                        .AddOption("Celestial Fragment (14 Vps)", 14)
                        //.AddOption("Uptoken (20 Vps)", 15)
                        .AddOption("PenetienceAmulet (10 Vps)", 16)
                        .AddOption("Nevermind.", 255)
                        .AddAvatar(10).FinalizeDialog();
                        break;
                    }
                #region Activated EXPPotion
                case 11:
                    {
                        if (client.Player.VotePoints >= 1)
                        {
                            //if (client.Inventory.HaveSpace(1))
                            //{
                            client.Player.VotePoints -= 1;
                            client.Player.RateExp = 2;
                            client.Player.DExpTime = 3600 * 1;
                            client.Player.CreateExtraExpPacket(stream);
                            //}
                            //else
                            client.SendSysMesage("From now on, you can get 2x experience for the next 1 hours..!", MsgMessage.ChatMode.System);
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region [10K]Virtue Points
                case 12:
                    {
                        if (client.Player.VotePoints >= 3)
                        {
                            //if (client.Inventory.HaveSpace(2))
                            //{
                            client.Player.VotePoints -= 3;
                            client.Player.VirtutePoints += 10000;
                            client.SendSysMesage("You gained 10,000 Virtue Points!", MsgMessage.ChatMode.System);
                            //}
                            //else
                            //client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region 3xDays VIP 6
                case 13:
                    {
                        if (client.Player.VotePoints >= 14)
                        {

                            client.Player.VotePoints -= 14;

                            if (DateTime.Now > client.Player.ExpireVip)
                            {
                                client.Player.ExpireVip = DateTime.Now;
                                client.Player.ExpireVip = client.Player.ExpireVip.AddDays(3);
                            }
                            else
                                client.Player.ExpireVip = client.Player.ExpireVip.AddDays(3);

                            client.Player.VipLevel = 6;

                            client.Player.SendUpdate(stream, client.Player.VipLevel, MsgUpdate.DataType.VIPLevel);

                            client.Player.UpdateVip(stream);
                            client.SendSysMesage("You gained 3xDays VIP 6!", MsgMessage.ChatMode.System);

                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region Celestial Fragment
                case 14:
                    {
                        if (client.Player.VotePoints >= 14)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 14;
                                client.Inventory.Add(stream, 810035, 1);
                            }
                            else
                            {
                                client.SendSysMesage("You don`t have enough space on your inventory!.");
                            }

                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region Uptoken
                case 15:
                    {
                        if (client.Player.VotePoints >= 20)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 20;
                                client.Inventory.Add(stream, 720310, 1);
                            }
                            else
                            {
                                client.SendSysMesage("You don`t have enough space on your inventory!.");
                            }

                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region Penetience
                case 16:
                    {
                        if (client.Player.VotePoints >= 10)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 10;
                                client.Inventory.Add(stream, 720128, 1);
                            }
                            else
                            {
                                client.SendSysMesage("You don`t have enough space on your inventory!.");
                            }

                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion

                #endregion
                case 25:
                    {
                        if (Database.VoteSystem.CanVote(client))
                        {
                            client.SendSysMesage(ServerKernel.XtremeTopLink, MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.white);
                            client.Player.StartVote = true;
                            client.LastVote = DateTime.Now;
                            client.Player.vote = DateTime.Now;
                            client.Player.StartVoteStamp = Extensions.Time32.Now.AddSeconds(60);


                            client.Player.SendMsgBox("Enter the code and please wait for your vote to be validated by the system", 60, MsgStaticMessage.Messages.Vote);
                            // client.CreateDialog(stream, "Enter the code and please wait for your vote to be validated by the system: " , "I~see");
                        }
                        else//
                        {
                            //client.SendSysMesage(ServerKernel.XtremeTopLink, MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.white);
                            client.CreateDialog(stream, "This character already voted in the past 12 hours. Your next vote time. "
                            , "I~see");

                        }
                        break;
                    }
            }
        }
        #endregion
        #region MrConquerEvent
        [NpcAttribute(NpcID.MrConquerEvent)]
        public static void MrConquerEvent(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            if (Role.Core.IsGirl(client.Player.Body))
            {
                client.CreateBoxDialog("Sorry, you can't join this only for Male.");
                return;
            }

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there! The MrConquer will take place during 21:00 on Tuesday,")
                                                 .AddText("and you will be admitted into tournament during 21:00, Come! You will be impressed.")
                                            .AddOption("Sign~me~up", 1)
                                            .AddOption("I will come later. ", 255)
                                            .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {

                        MsgTournaments.MsgMrConquer.War war;
                        if (Game.MsgTournaments.MsgSchedules.MrConquer.GetWar(client, out war) != MsgTournaments.ProcesType.Dead)
                        {
                            if (war.CheckJoin())
                            {
                                client.Teleport(81, 62, Game.MsgTournaments.MsgMrConquer.MapID, war.DinamicID);
                            }
                            else
                            {
                                data.AddText("I`m sorry, but the MrConquer War is only held on Tuesday.")
                  .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I`m sorry, but the MrConquer War is only held on Tuesday.")
                     .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.MrConquerReward)]
        public static void MrConquerReward(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        MsgTournaments.MsgMrConquer.War war;
                        if (Game.MsgTournaments.MsgSchedules.MrConquer.GetWar(client, out war) != MsgTournaments.ProcesType.Dead)
                        {
                            if (!war.CheckJoin())
                            {
                                if (war.IsFinish(client))
                                {
                                    if (!client.Inventory.HaveSpace(4))
                                    {
                                        data.AddText("Please make 4 more spaces in your inventory.")
                                            .AddOption("Let me check.", 255).AddAvatar(154).FinalizeDialog();

                                    }
                                    war.GetMyReward(client, stream);

                                }
                                else
                                {
                                    data.AddText("Sorry, the war is not finished, or other players are still alive.")
                   .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, the war is not finished")
                    .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war is finished, or other players are still alive.")
           .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;

                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
           .AddOption("Yes", 3).AddOption("Ah no.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(302, 169, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #region MsConquerEvent
        [NpcAttribute(NpcID.MsConquerEvent)]
        public static void MsConquerEvent(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (Role.Core.IsBoy(client.Player.Body))
            {
                client.CreateBoxDialog("Sorry, you can't join this only for Female.");
                return;
            }
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello there! The MrsConquer will take place during 21:00 on Tuesday,")
                                                 .AddText("and you will be admitted into tournament during 21:00, Come! You will be impressed.")
                                            .AddOption("Sign~me~up", 1)
                                            .AddOption("I will come later. ", 255)
                                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        MsgTournaments.MsgMsConquer.War war;
                        if (Game.MsgTournaments.MsgSchedules.MsConquer.GetWar(client, out war) != MsgTournaments.ProcesType.Dead)
                        {
                            if (war.CheckJoin())
                            {
                                client.Teleport(81, 62, Game.MsgTournaments.MsgMsConquer.MapID, war.DinamicID);
                            }
                            else
                            {
                                data.AddText("I`m sorry, but the MrsConquer War is only held on Mondays.")
                  .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I`m sorry, but the MrsConquer War is only held on Mondays.")
                     .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.MsConquerReward)]
        public static void MsConquerReward(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        MsgTournaments.MsgMsConquer.War war;
                        if (Game.MsgTournaments.MsgSchedules.MsConquer.GetWar(client, out war) != MsgTournaments.ProcesType.Dead)
                        {
                            if (!war.CheckJoin())
                            {
                                if (war.IsFinish(client))
                                {
                                    if (!client.Inventory.HaveSpace(4))
                                    {
                                        data.AddText("Please make 4 more spaces in your inventory.")
                                            .AddOption("Let me check.", 255).AddAvatar(154).FinalizeDialog();

                                    }
                                    war.GetMyReward(client, stream);

                                }
                                else
                                {
                                    data.AddText("Sorry, the war is not finished, or other players are still alive.")
                   .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, the war is not finished")
                    .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war is finished, or other players are still alive.")
           .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;

                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
           .AddOption("Yes", 3).AddOption("Ah no.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(302, 169, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #region Nobility war
        [NpcAttribute(NpcID.NobilityWar)]
        public static void NobilityWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            return;
            switch (Option)
            {
                case 0:
                    {
                        data.Text("Welcome! We're excited to see you. It looks like you haven't heard about the Nobility WAR Tournament.\nLet me introduce you to this thrilling event.");
                        data.AddText("\n# ======================================================= #");
                        data.AddText("\n Tournament Rewards:");
                        data.AddText("\n [King]   +5 Stone, MegaDBPack, Super Gem, and VIP (1 hour)");
                        data.AddText("\n [Prince] +4 Stone, MegaDBPack, Super Gem, and VIP (1 hour)");
                        data.AddText("\n [Duke]   +3 Stone, 5xDbScroll, Super Gem, and VIP (1 hour)");
                        data.AddText("\n [Earl]   2xDbScroll, Super Gem, and VIP (1 hour)");
                        data.AddText("\n# ======================================================= #");
                        data.AddText("\n Tournament Schedule: Starts every 30 minutes at xx:01");
                        data.AddText("\n# ======================================================= #");
                        data.AddOption("Sign me up", 1);
                        data.AddOption("Claime Reward!", 2);
                        data.AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        //if (!Program.MacJoin.ContainsKey(client.OnLogin.MacAddress))
                        //{
                        //    Program.MacJoin.Add(client.OnLogin.MacAddress, client.Player.Name);

                        if (Game.MsgTournaments.MsgNobilityPole.Proces == ProcesType.Alive)
                        {
                            if (client.Player.NobilityRank == Role.Instance.Nobility.NobilityRank.King)
                            {
                                client.Teleport(58, 80, 22340);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Kings] War tournaments.", MsgMessage.ChatMode.TopLeft);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Kings] War tournaments.", MsgMessage.ChatMode.System);
                            }
                            if (client.Player.NobilityRank == Role.Instance.Nobility.NobilityRank.Prince)
                            {
                                client.Teleport(58, 80, 22341);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Prince] War tournaments.", MsgMessage.ChatMode.TopLeft);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Prince] War tournaments.", MsgMessage.ChatMode.System);

                            }
                            if (client.Player.NobilityRank == Role.Instance.Nobility.NobilityRank.Duke)
                            {
                                client.Teleport(58, 80, 22342);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Duke] War tournaments.", MsgMessage.ChatMode.TopLeft);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Duke] War tournaments.", MsgMessage.ChatMode.System);

                            }
                            if (client.Player.NobilityRank == Role.Instance.Nobility.NobilityRank.Earl)
                            {
                                client.Teleport(58, 80, 22343);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Earl] War tournaments.", MsgMessage.ChatMode.TopLeft);
                                MsgSchedules.SendSysMesage("Behold! #41 The valiant warrior " + client.Player.Name + " has stepped onto the hallowed grounds of the Nobility [Earl] War tournaments.", MsgMessage.ChatMode.System);

                            }
                        }
                        else
                            client.SendSysMesage("Nobility tournaments has ben finished .. Please come back later at hour 22:01 – 22:30");

                        //}
                        //else client.CreateBoxDialog($"You can't join a event while you have other player ({Program.MacJoin[client.OnLogin.MacAddress]}) joined to this event.");
                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(8))
                        {
                            data.AddText("Sorry, but you need atleast 8 free spaces in your inventory.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (Game.MsgTournaments.MsgNobilityPole.Proces == ProcesType.Dead)
                        {
                            if (Game.MsgTournaments.MsgNobilityPole.RoundOwner != null)
                            {
                                if (Game.MsgTournaments.MsgNobilityPole.RoundOwner.UID == client.Player.UID)
                                {
                                    client.Inventory.Add(stream, 730005);
                                    client.Inventory.Add(stream, 720546);
                                    client.Inventory.Add(stream, 721167);
                                    client.Inventory.Add(stream, 780010);
                                    MsgSchedules.SendSysMesage("Congratulations, " + client.Player.Name + " has claim his reward from Nobility tournaments as [King] +5 Stone, MegaDBPack, Super Gem and VIP-1 hour.", MsgMessage.ChatMode.Center);
                                    Game.MsgTournaments.MsgNobilityPole.RoundOwner = null;
                                }
                            }
                        }
                        if (Game.MsgTournaments.MsgNobilityPole1.Proces == ProcesType.Dead)
                        {
                            if (Game.MsgTournaments.MsgNobilityPole1.RoundOwner != null)
                            {
                                if (Game.MsgTournaments.MsgNobilityPole1.RoundOwner.UID == client.Player.UID)
                                {
                                    client.Inventory.Add(stream, 730004);
                                    client.Inventory.Add(stream, 720546);
                                    client.Inventory.Add(stream, 721167);
                                    client.Inventory.Add(stream, 780010);
                                    MsgSchedules.SendSysMesage("Congratulations, " + client.Player.Name + " has claim his reward from Nobility tournaments as [Prince] +4 Stone, MegaDBPack, Super Gem and VIP-1 hour.", MsgMessage.ChatMode.Center);
                                    Game.MsgTournaments.MsgNobilityPole1.RoundOwner = null;
                                }
                            }
                        }
                        if (Game.MsgTournaments.MsgNobilityPole2.Proces == ProcesType.Dead)
                        {
                            if (Game.MsgTournaments.MsgNobilityPole2.RoundOwner != null)
                            {
                                if (Game.MsgTournaments.MsgNobilityPole2.RoundOwner.UID == client.Player.UID)
                                {
                                    client.Inventory.Add(stream, 730003);
                                    client.Inventory.Add(stream, 720028, 5);
                                    client.Inventory.Add(stream, 721167);
                                    client.Inventory.Add(stream, 780010);
                                    MsgSchedules.SendSysMesage("Congratulations, " + client.Player.Name + " has claim his reward from Nobility tournaments as [Duke] +3 Stone, 5xDbScroll, Super Gem and VIP-1 hour.", MsgMessage.ChatMode.Center);
                                    Game.MsgTournaments.MsgNobilityPole2.RoundOwner = null;
                                }
                            }
                        }
                        if (Game.MsgTournaments.MsgNobilityPole3.Proces == ProcesType.Dead)
                        {
                            if (Game.MsgTournaments.MsgNobilityPole3.RoundOwner != null)
                            {
                                if (Game.MsgTournaments.MsgNobilityPole3.RoundOwner.UID == client.Player.UID)
                                {
                                    client.Inventory.Add(stream, 720028, 2);
                                    client.Inventory.Add(stream, 721167);
                                    client.Inventory.Add(stream, 780010);
                                    MsgSchedules.SendSysMesage("Congratulations, " + client.Player.Name + " has claim his reward from Nobility tournaments as [Earl] 2xDBscroll, Super Gem and VIP-1 hour.", MsgMessage.ChatMode.Center);
                                    Game.MsgTournaments.MsgNobilityPole3.RoundOwner = null;
                                }
                            }
                        }
                        break;
                    }
            }
        }
        #endregion
        #region RoyalPassManager
        [NpcAttribute(NpcID.RoyalPassManager)]
        public static void RoyalPassManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                //case 100:
                case 0:
                    {
                        data.AddText($"Hello, little warrior I hope you are doing well!\nI would like to introduce you to the UAConquerPassPoints Manager");
                        data.AddText("\n            # UAConquerPassPoints collaction from UAConquerBosses killer #");
                        data.AddText("\nOnce you have the kill the bosses,\nyou can get your awsome rewards.");
                        data.AddText("\n       # Remember u just have limited attempts #");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddText("\n          #You have: [" + client.Player.RoyalPassPoints + "] UAConquerPassPoints#");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddOption("Claim +3Stone:[" + client.RoyalPassManager.StonesTimesThree + "/5]", 1);
                        data.AddOption("Claim +4Stone:[" + client.RoyalPassManager.StonesTimesFour + "/4]", 4);
                        data.AddOption("Claim +5Stone:[" + client.RoyalPassManager.StonesTimesFive + "/3]", 7);
                        data.AddOption("Claim +6Stone:[" + client.RoyalPassManager.StonesTimesSix + "/2]", 10);
                        data.AddOption("Claim +7Stone:[" + client.RoyalPassManager.StonesTimesSeven + "/1]", 16);
                        data.AddOption("Claim (S)TortoiseGem:[" + client.RoyalPassManager.SuperTGTimes + "/3]", 13);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }

                #region Stone

                case 1:
                    {
                        data.AddText("\n                # you about to claim a stone +3 #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.RoyalPassManager.StonesTimesThree + " / 5");
                        data.AddText("\n Requiered Points: 10");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.RoyalPassPoints + " NorthPassPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 3);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.RoyalPassManager.StonesTimesThree == 5 && Struct.RoyalPassManager.MaxStonesTimesThree <= 5)
                        {
                            data.AddText("You've already reach the limit of stone +3 today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.RoyalPassManager.Reward(client, 1002);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion Stone
                #region vip

                case 4:
                    {
                        data.AddText("\n                # you about to claim a stone +4 #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.RoyalPassManager.StonesTimesFour + " / 4");
                        data.AddText("\n Requiered Points: 30");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.RoyalPassPoints + " UAConquerPassPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 5);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.RoyalPassManager.StonesTimesFour == 4 && Struct.RoyalPassManager.MaxStonesTimesFour <= 4)
                        {
                            data.AddText("You've already reach the limit of stone +4 today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.RoyalPassManager.Reward(client, 1011);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region random garment

                case 7:
                    {
                        data.AddText("\n                # you about to claim a stone +5 #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.RoyalPassManager.StonesTimesFive + " / 3");
                        data.AddText("\n Requiered Points: 90");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.RoyalPassPoints + " UAConquerPassPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 8);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.RoyalPassManager.StonesTimesFive == 3 && Struct.RoyalPassManager.MaxStonesTimesFive <= 3)
                        {
                            data.AddText("You've already reach the limit of stone +5 today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.RoyalPassManager.Reward(client, 1020);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                #endregion
                #region random plus items

                case 10:
                    {
                        data.AddText("\n                # you about to claim a stone +6 #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.RoyalPassManager.StonesTimesSix + " / 2");
                        data.AddText("\n Requiered Points: 260");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.RoyalPassPoints + " UAConquerPassPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 11);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.RoyalPassManager.StonesTimesSix == 2 && Struct.RoyalPassManager.MaxStonesTimesSix <= 2)
                        {
                            data.AddText("You've already reach the limit of stone +6 today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.RoyalPassManager.Reward(client, 1000);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region Super Tortoise Gem 

                case 13:
                    {
                        data.AddText("\n         # you about to claim a Super Tortoise Gem #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.RoyalPassManager.SuperTGTimes + " / 1");
                        data.AddText("\n Requiered Points: 90");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.RoyalPassPoints + " UAConquerPassPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 14);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        if (client.RoyalPassManager.SuperTGTimes == 1 && Struct.RoyalPassManager.MaxSuperTG <= 1)
                        {
                            data.AddText("You've already reach the limit of Tortoise Gem today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.RoyalPassManager.Reward(client, 1015);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region AccessoriesTimes

                case 16:
                    {

                        data.AddText("\n                # you about to claim a stone +7 #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.RoyalPassManager.StonesTimesSeven + " / 1");
                        data.AddText("\n Requiered Points: 810");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.RoyalPassPoints + " UAConquerPassPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 17);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        if (client.RoyalPassManager.StonesTimesSeven == 1 && Struct.RoyalPassManager.MaxStonesTimesSeven <= 1)
                        {
                            data.AddText("You've already reach the limit of stone +7 today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.RoyalPassManager.Reward(client, 1001);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                    #endregion

            }
        }
        #endregion
        #region arena new npc tc
        [Npc(NpcID.ArenaNpcTC)]
        public static void ArenaNpcTC(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("The~arena~is~open.~Welcome~to~challenge~other~people.~The~admission~fee~is~only~50~silver.");
                    data.AddText("If~you~PK~in~the~arena,~you~will~not~gain~or~lose~any~experience~or~items~equipped,~and~will~get~revived~at~the~place~you~die.");
                    data.AddText("The~FactionAnnihilation~circle~is~very~dangerous,~I~suggest~you~PK~in~area.");
                    data.AddOption("Enter~the~arena.", 1);
                    data.AddOption("Enter~the~unlimited~arena.", 2);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 2:
                    data.Text("This is the Unlimited Stamina envoy.");
                    data.AddInput("Enter ID:", 5);
                    data.Option("Leave", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 5:
                    {
                        if (uint.TryParse(Input, out var result))
                        {
                            if (UnlimitedArenaRooms.Maps.ContainsKey(result))
                            {
                                GameMap map2;
                                map2 = Server.ServerMaps[700u];
                                uint mapId2;
                                mapId2 = UnlimitedArenaRooms.Maps[result];
                                ushort x2;
                                x2 = 0;
                                ushort y2;
                                y2 = 0;
                                map2.GetRandCoord(ref x2, ref y2);
                                client.Teleport(x2, y2, 700u, mapId2);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                            }
                            else
                            {
                                GameMap map;
                                map = Server.ServerMaps[700u];
                                uint mapId;
                                mapId = map.GenerateDynamicID();
                                UnlimitedArenaRooms.Maps.Add(result, mapId);
                                ushort x;
                                x = 0;
                                ushort y;
                                y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700u, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                            }
                        }
                        break;
                    }
                case 1:
                    if (client.Player.Money >= 50)
                    {
                        client.Player.Money -= 50;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Teleport(51, 69, 1005);
                        break;
                    }
                    data.AddText("You do not have 50 silvers with you.");
                    data.AddOption("I~see.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 3:
                case 4:
                    break;
            }
        }

        #endregion
        #region TournamentsPoints Manager
        [NpcAttribute(NpcID.TournamentsPointsManager)]
        public static void TournamentsPointsManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 100:
                case 0:
                    {
                        data.AddText("Greetings, champion! Welcome to the Tournament Points Manager.");
                        data.AddText("\n----- How to Earn Tournament Points -----");
                        data.AddText("\nCompete in tournament events and claim victory to earn Tournament Points.");
                        data.AddText("\nEach win brings you closer to unlocking powerful rewards.");
                        data.AddText("\n----- Claiming Rewards -----");
                        data.AddText("\nOnce you’ve gathered enough Tournament Points, you can exchange them for epic prizes.");
                        data.AddText("\nRemember, you have limited claim attempts, so spend them wisely!");
                        data.AddText("\n=================== TOURNAMENT STATUS ===================");
                        data.AddText("\n         >> You have: " + client.Player.TournamentsPoints + " Tournament Points <<");
                        data.AddText("\n==========================================================");
                        //data.AddOption("Claim PromotionStones:[" + client.TournamentsManager.PromotionStonesTimes + "/3]", 1);
                        data.AddOption("Claim DragonBall:[" + client.TournamentsManager.DBPiecesTimes + "/5]", 4);
                        data.AddOption("Claim PenetienceAmulet:[" + client.TournamentsManager.PenitenceTimes + "/3]", 28);
                        data.AddOption("Claim Certificates:[" + client.TournamentsManager.GuildClanTimes + "/5]", 31);
                        data.AddOption("Claim 10% EXP Level 131 - 137:[" + client.TournamentsManager.LevelExpTimes + "/5]", 31);
                        //data.AddOption("Claim RandomGarment:[" + client.TournamentsManager.GarmentTimes + "/5]", 7);
                        //data.AddOption("Claim MagicBall[EXP]:[" + client.TournamentsManager.MagicBallTimes + "/5]", 41);
                        //data.AddOption("Next Page, Please!", 40);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }

                #region Stone

                case 1:
                    {
                        //if (client.TournamentsManager.StonesTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You can claim PromotionStones (Valorstone, Winshard, and Mystara), what do you want to select? #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.PromotionStonesTimes + " / 3");
                        data.AddText("\n Requiered Points: 20");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("I want Valorstone now.", 3);
                        data.AddOption("I want Winshard now.", 13);
                        data.AddOption("I want Mystara now.", 23);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.TournamentsManager.PromotionStonesTimes >= 3 && Struct.TournamentsManager.MaxPromotionStones <= 3)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 810032);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                case 13:
                    {
                        if (client.TournamentsManager.PromotionStonesTimes == 3 && Struct.TournamentsManager.MaxPromotionStones <= 3)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 810033);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                case 23:
                    {
                        if (client.TournamentsManager.PromotionStonesTimes == 3 && Struct.TournamentsManager.MaxPromotionStones <= 3)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 810034);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion Stone
                #region DragonBallPiece

                case 4:
                    {
                        //if (client.TournamentsManager.VIPTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of VIP today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You can claim and get x1 DragonBall. #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.DBPiecesTimes + " / 5");
                        data.AddText("\n Requiered Points: 10");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 5);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.TournamentsManager.DBPiecesTimes == 5 && Struct.TournamentsManager.MaxDBPieces <= 5)
                        {
                            data.AddText("You've already reach the limit of VIP today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 710834);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region random garment

                case 7:
                    {
                        //if (client.TournamentsManager.GarmentTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a random garment #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.GarmentTimes + " / 5");
                        data.AddText("\n Requiered Points: 30");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 8);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.TournamentsManager.GarmentTimes == 5 && Struct.TournamentsManager.MaxGarment <= 5)
                        {
                            data.AddText("You've already reach the limit of Garments today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 1020);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                #endregion
                #region random plus items

                case 10:
                    {
                        //if (client.TournamentsManager.RandomItemTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a Random Plus +3 items #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.RandomItemTimes + " / 5");
                        data.AddText("\n Requiered Points: 30");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 11);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.TournamentsManager.RandomItemTimes == 5 && Struct.TournamentsManager.MaxRandomItem <= 5)
                        {
                            data.AddText("You've already reach the limit of Plus items today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 1000);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region AccessoriesTimes

                case 16:
                    {
                        //if (client.TournamentsManager.AccessoriesTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a Random Accessories #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.AccessoriesTimes + " / 5");
                        data.AddText("\n Requiered Points: 30");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 17);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        if (client.TournamentsManager.AccessoriesTimes == 5 && Struct.TournamentsManager.MaxAccessories <= 5)
                        {
                            data.AddText("You've already reach the limit of Accessories today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 1001);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region Penitence
                case 28:
                    {
                        //if (client.TournamentsManager.GarmentTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You can claim PenitenceAmulet, you can clear all your sins! #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.PenitenceTimes + "/3");
                        data.AddText("\n Requiered Points: 10");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 29);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 29:
                    {
                        if (client.TournamentsManager.PenitenceTimes == 5 && Struct.TournamentsManager.MaxPenitence <= 5)
                        {
                            data.AddText("You've already reach the limit of Penitence Amulet today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 1015);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                #endregion
                #region Certificates
                case 31:
                    {
                        //if (client.TournamentsManager.GarmentTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You can claim PowerExpBall to add 10% of your experience! #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.LevelExpTimes + "/5");
                        data.AddText("\n Requiered Points: 25");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange to PowerExpBall.", 32);
                        //data.AddOption("Exchange to Clan Certificate.", 33);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (client.TournamentsManager.LevelExpTimes == 5 && Struct.TournamentsManager.MaxLevelExpTimes <= 5)
                        {
                            data.AddText("You've already reach the limit of PowerExpBall today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 9991);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                case 33:
                    {
                        if (client.TournamentsManager.GuildClanTimes == 5 && Struct.TournamentsManager.MaxGuildClan <= 5)
                        {
                            data.AddText("You've already reach the limit of Clan Certificate today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 0031);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                #endregion
                #region NextPage
                case 40:
                    {
                        data.AddText("Hello! I hope you are doing well.\nAllow me to introduce you to the TournamentsPoints Manager.");
                        data.AddText("\n# TournamentsPoints are not collected with Auto/offline modes #");
                        data.AddText("\nEvery time you participate tournaments events and won the rewards on our server.");
                        data.AddText("\nOnce you've accumulated enough minutes,\nyou can claim your awesome rewards.");
                        data.AddText("\n# Remember, you have limited attempts #");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddText("\n          #You have: [" + client.Player.TournamentsPoints + "] TournamentsPoints#");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        //data.AddOption("Claim Plus items:[" + client.TournamentsManager.RandomItemTimes + "/5]", 10);
                        data.AddOption("Claim PenetienceAmulet:[" + client.TournamentsManager.PenitenceTimes + "/3]", 28);
                        data.AddOption("Claim RandomAccessories:[" + client.TournamentsManager.AccessoriesTimes + "/5]", 16);
                        data.AddOption("Claim Certificates:[" + client.TournamentsManager.GuildClanTimes + "/5]", 31);
                        data.AddOption("Previous page", 100);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                #endregion
                #region MagicBall
                case 41:
                    {
                        //if (client.TournamentsManager.GarmentTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You can claim Magic Ball,use to make a bomb or promote your Archer! #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.TournamentsManager.MagicBallTimes + "/3");
                        data.AddText("\n Requiered Points: 5");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.TournamentsPoints + " TournamentsPoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 42);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 42:
                    {
                        if (client.TournamentsManager.MagicBallTimes == 5 && Struct.TournamentsManager.MaxMagicBall <= 5)
                        {
                            data.AddText("You've already reach the limit of MagicBall today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 10021);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                    #endregion
            }
        }
        #endregion
        #region SkillsTournament
        [Npc(NpcID.SkillsTournament)]
        public static void SkillsTournament(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Welcome! We're thrilled to see you. It looks like you haven't heard about the [SupremeDuelist]Skills Tournament yet.\nLet me introduce you to this exciting event.");
                    dialog.Text("\nAll players compete, and the last one standing wins. Get ready for the challenge!");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Required Inventory Space: 5 slots");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Event Schedule: Starts every 10 minutes at xx:01");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.Option("Sign me up", 1);
                    dialog.Option("Not interested", byte.MaxValue);
                    dialog.AddAvatar(40);
                    dialog.FinalizeDialog();

                    break;
                case 1:
                    if (!client.Inventory.HaveSpace(5))
                    {
                        dialog.AddText("Sorry, but you need atleast 5 free spaces in your inventory.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(40).FinalizeDialog();
                        break;
                    }
                    if (!MsgEvents.SkillsTournament.Started)
                    {
                        dialog.AddText("Hey " + client.Player.Name + ", [SupremeDuelist]Skills Tournament not running at the moment, come back later");
                        dialog.AddOption("I see. ", byte.MaxValue);
                        dialog.AddAvatar(40).FinalizeDialog();
                    }
                    else
                    {

                        MsgEvents.SkillsTournament.JoinClient(client);
                    }
                    break;
            }
        }

        #endregion
        #region PassTheBomb
        [Npc(NpcID.PassTheBomb)]
        public static void PassTheBomb(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Welcome! We're excited to see you. It looks like you haven't heard about the DivineDetonation tournament.\nLet me tell you about this exciting event.");
                    dialog.Text("\nAll players participate, and the last one standing wins. Get ready for the challenge!");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Required Inventory Space: 5 slots");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Event Schedule: Every 15 minutes");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.Option("Sign me up!", 1);
                    dialog.Option("Not interested.", byte.MaxValue);
                    dialog.AddAvatar(1);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    if (!client.Inventory.HaveSpace(5))
                    {
                        dialog.AddText("Sorry, but you need atleast 5 free spaces in your inventory.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(90).FinalizeDialog();
                        break;
                    }
                    if (!MsgEvents.PassTheBomb.Started)
                    {
                        dialog.AddText("Hey " + client.Player.Name + ", DivineDetonation not running at the moment, come back later");
                        dialog.AddOption("I see. ", byte.MaxValue);
                        dialog.AddAvatar(90).FinalizeDialog();
                    }
                    else
                    {

                        MsgEvents.PassTheBomb.JoinClient(client);
                    }
                    break;
            }
        }

        #endregion
        #region LastManStanding
        [Npc(NpcID.LastManStanding)]
        public static void LastManStanding(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Welcome! We're excited to see you. It looks like you haven't heard about the ThroneSiege tournament.\nLet me tell you about this thrilling event.");
                    dialog.Text("\nAll players compete, and the last one standing wins. Prepare for an exhilarating experience!");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Required Inventory Space: 5 slots");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Event Schedule: Every 15 minutes");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.Option("Sign me up!", 1);
                    dialog.Option("Not interested.", byte.MaxValue);

                    dialog.AddAvatar(33);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    if (!client.Inventory.HaveSpace(5))
                    {
                        dialog.AddText("Sorry, but you need atleast 5 free spaces in your inventory.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(76).FinalizeDialog();
                        break;
                    }
                    if (!MsgEvents.LastManStanding.Started)
                    {
                        dialog.AddText("Hey " + client.Player.Name + ", ThroneSiege not running at the moment, come back later");
                        dialog.AddOption("I see. ", byte.MaxValue);
                        dialog.AddAvatar(76).FinalizeDialog();
                    }
                    else
                    {

                        MsgEvents.LastManStanding.JoinClient(client);
                    }
                    break;
            }
        }

        #endregion
        #region Get5HitOut
        [Npc(NpcID.Get5HitOut)]
        public static void Get5HitOut(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Welcome! We're excited to see you. It looks like you haven't heard about the SacredStrikeOut tournament.\nLet me introduce you to this thrilling event.");
                    dialog.Text("\nAll players compete, and the last one standing wins. Prepare yourself for an intense experience!");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Required Inventory Space: 5 slots");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Event Schedule: Every 15 minutes");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.Option("Sign me up!", 1);
                    dialog.Option("Not interested.", byte.MaxValue);

                    dialog.AddAvatar(82);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    if (!client.Inventory.HaveSpace(5))
                    {
                        dialog.AddText("Sorry, but you need atleast 5 free spaces in your inventory.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(82).FinalizeDialog();
                        break;
                    }
                    if (!MsgEvents.Get5HitOut.Started)
                    {
                        dialog.AddText("Hey " + client.Player.Name + ", SacredStrikeOut not running at the moment, come back later");
                        dialog.AddOption("I see. ", byte.MaxValue);
                        dialog.AddAvatar(82).FinalizeDialog();
                    }
                    else
                    {

                        MsgEvents.Get5HitOut.JoinClient(client);
                    }
                    break;
            }
        }

        #endregion
        #region TeamDeathMatch
        [Npc(NpcID.TeamDeathMatch)]
        public static void TeamDeathMatch(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Welcome! It looks like you haven't heard about the SquadShowDown tournament.\nLet me tell you about this exciting event.");
                    dialog.Text("\nTwo teams will compete, and the last team standing wins. Get ready for the action!");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Required Inventory Space: 5 slots");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.AddText("\n Event Schedule: Every 15 minutes");
                    dialog.AddText("\n# ======================================================= #");
                    dialog.Option("Sign me up!", 1);
                    dialog.Option("Not interested.", byte.MaxValue);
                    dialog.AddAvatar(37);
                    dialog.FinalizeDialog();

                    break;
                case 1:
                    if (!client.Inventory.HaveSpace(5))
                    {
                        dialog.AddText("Sorry, but you need atleast 5 free spaces in your inventory.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(37).FinalizeDialog();
                        break;
                    }
                    if (!MsgEvents.TeamDeathMatch.Started)
                    {
                        dialog.AddText("Hey " + client.Player.Name + ", SquadShowDown not running at the moment, come back later");
                        dialog.AddOption("I see. ", byte.MaxValue);
                        dialog.AddAvatar(37).FinalizeDialog();
                    }
                    else
                    {

                        MsgEvents.TeamDeathMatch.JoinClient(client);
                    }
                    break;
            }
        }

        #endregion
        #region GuildDeathmatch
        [Npc(NpcID.GuildDeathmatch)]
        public static void GuildDeathmatch(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Prepare your guild for the ultimate clash—the Guild Deathmatch!");
                    dialog.AddText("\n# ======================================================= #.");
                    dialog.AddText("\n Event Schedule : Everyday at (21:01, 22:01)");
                    dialog.AddText("\n# ======================================================= #.");
                    dialog.AddText("\n             #Event Rewards For each Pole #");
                    dialog.AddText("\n Event Reward : 4,300 ConquerPoints | 5,000,000 Silver");
                    dialog.AddText("\n               3xStone +3 | 3xVIP 1-Hour | MegaMetsPack");
                    dialog.AddText("\n# ======================================================= #.");
                    dialog.Option("Sign~me~up", 1);
                    dialog.Option("Claim Reward", 2);
                    dialog.Option("Not~interested.", byte.MaxValue);
                    dialog.AddAvatar(33);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    if (!client.Inventory.HaveSpace(7))
                    {
                        dialog.AddText("Sorry, but you need atleast 7 free spaces in your inventory.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(30).FinalizeDialog();
                        break;
                    }
                    if (client.Player.MyGuild == null)
                    {
                        dialog.AddText("sorry, you most join a guild at first!");
                        dialog.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(30).FinalizeDialog();
                        break;
                    }
                    if (MsgSchedules.GuildDeathMatch.Start == true)
                    {
                        MsgSchedules.GuildDeathMatch.SignUp(client, stream);
                    }
                    else
                    {
                        dialog.AddText("Hey " + client.Player.Name + ", Guild DeathMatch not running at the moment, come back later");
                        dialog.AddOption("I see. ", byte.MaxValue);
                        dialog.AddAvatar(30).FinalizeDialog();
                    }
                    break;
                case 2:
                    {
                        if (client.Player.MyGuild == null)
                        {
                            dialog.AddText("Just the GuildLeader can claim the reward!");
                            dialog.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        if (client.Player.GuildRank != Flags.GuildMemberRank.GuildLeader)
                        {
                            dialog.AddText("Just the GuildLeader can claim the reward!");
                            dialog.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        uint prize;
                        prize = MsgSchedules.GuildDeathMatch.GetWinnerPrize(client.Player.MyGuild.GuildName);
                        if (prize == 0)
                        {
                            dialog.AddText("Your~guild~has~not~dominated~guild~area..");
                            dialog.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(30).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Add(stream, 780010, 3, 0, 0, 0);//VIP 1Hour
                        //client.Inventory.Add(stream, 730003, 3, 0, 0, 0);//+3 stone
                        client.Inventory.Add(stream, 720547, 1, 0, 0, 0);//MegaMetsPack
                        client.Player.Money += 5000000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        //client.Player.ConquerPoints += (int)prize;//2150 cps
                        IEventRewards.Add("GuildDeathMatch", prize, 0u, "", "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                        MsgSchedules.GuildDeathMatch.RemoveWinner(client.Player.MyGuild.GuildName);
                        //dialog.Text("You have claimed " + prize.ToString("0,0") + " CPs Congratulations!");
                        dialog.Option("Thank you!", byte.MaxValue);
                        dialog.AddAvatar(30).FinalizeDialog();
                        Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , " + client.Player.GuildRank.ToString() + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + prize.ToString("0,0") + " ConquerPoints for the domination the GuildDeathMatch.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        break;
                    }
            }
        }

        #endregion
        #region citywars
        [Npc(NpcID.citywars)]
        public static void citywars(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            uint CitywarTC;
            CitywarTC = ISchedule.Schedules[ISchedule.EventID.CitywarTC].StartMinute;
            uint CitywarPC;
            CitywarPC = ISchedule.Schedules[ISchedule.EventID.CitywarPC].StartMinute;
            //uint CitywarAC;
            //CitywarAC = ISchedule.Schedules[ISchedule.EventID.CitywarAC].StartMinute;
            //uint CitywarDC;
            //CitywarDC = ISchedule.Schedules[ISchedule.EventID.CitywarDC].StartMinute;
            //uint CitywarBI;
            //CitywarBI = ISchedule.Schedules[ISchedule.EventID.CitywarBI].StartMinute;
            Dialog dialog;
            dialog = new Dialog(client, stream);
            if (Option == 0)
            {
                dialog.Text("Prepare your guild for the ultimate City wars!");
                dialog.AddText("\n# ======================================================= #.");
                dialog.AddText("\n Event Schedule : Everyday a single city at (19:01, 20:01)");
                dialog.AddText("\n# ======================================================= #.");
                dialog.AddText("\n             #Event Rewards For each city #");
                dialog.AddText("\n Event Reward : 5,000,000 Silver");
                dialog.AddText("\n               3xStone +3 | 3xVIP 1-Hour | 1xMegaDBPack");
                dialog.AddText("\n# ======================================================= #.");
                //dialog.AddText("Hey there " + client.Player.Name + " im City Tournament Steward choose what would you like to Join?");
                dialog.AddOption("CitywarTC (" + MsgSchedules.CitywarTC.Proces + ")", (byte)TournamentType.CitywarTC);
                dialog.AddOption("CitywarPC (" + MsgSchedules.CitywarPC.Proces + ")", (byte)TournamentType.CitywarPC);
                //dialog.AddOption("CitywarAC (" + MsgSchedules.CitywarAC.Proces + ")", (byte)TournamentType.CitywarAC);
                //dialog.AddOption("CitywarDC (" + MsgSchedules.CitywarDC.Proces + ")", (byte)TournamentType.CitywarDC);
                //dialog.AddOption("CitywarBI (" + MsgSchedules.CitywarBI.Proces + ")", (byte)TournamentType.CitywarBI);
                dialog.AddOption("Rewards", 1);
                dialog.AddOption("I will come later. ", byte.MaxValue);
                dialog.AddAvatar(77);
                dialog.FinalizeDialog();
                return;
            }
            if (Option == 1)
            {
                dialog.AddText("Hey there " + client.Player.Name + " im Tournament Steward choose what would you like to Join?");
                dialog.AddOption("CitywarTC rewards ", 10);
                dialog.AddOption("CitywarPC rewards", 20);
                //dialog.AddOption("CitywarAC rewards", 30);
                //dialog.AddOption("CitywarDC rewards", 40);
                //dialog.AddOption("CitywarBI rewards", 50);
                //dialog.AddOption("Rewards", 1);
                dialog.AddOption("I will come later. ", byte.MaxValue);
                dialog.AddAvatar(63);
                dialog.FinalizeDialog();
                return;
            }
            if (Option == 10)
            {
                if (!client.Inventory.HaveSpace(25))
                {
                    dialog.AddText("------------------------------------------------------\n")
                                  .AddText("There`s not enough space in your inventory\n")
                                  .AddText("you need (25) free space in your inventory\n")
                                  .AddText("------------------------------------------------------")
                                  .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                    return;
                }
                if (client.Player.GuildID == MsgTournaments.MsgSchedules.CitywarTC.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.CitywarTC.Proces == MsgTournaments.ProcesType.Dead)
                {

                    if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.CitywarTC.Winner.LeaderReward > 0
                         && !MsgTournaments.MsgSchedules.CitywarTC.RewardLeader.Contains(client.Player.UID))
                    {

                        MsgTournaments.MsgSchedules.CitywarTC.RewardLeader.Add(client.Player.UID);
                        MsgTournaments.MsgSchedules.CitywarTC.Winner.LeaderReward -= 1;
                        client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
                        client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
                        client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
                        client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
                        client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
                        client.Inventory.Add(stream, 720547, 2, 0, 0, 0);//MegaMetsPack x2
                        client.Inventory.Add(stream, 780010, 3, 0, 0, 0);//VIP 1Hour x3
                        client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
                        client.Inventory.Add(stream, 720393, 1, 0, 0, 0);//ExpPill x1
                        client.Inventory.Add(stream, 722178, 1, 0, 0, 0);//SurpriseBox x1
                        client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
                        client.Player.Money += 8000000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        string Rank = "";
                        if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
                        else Rank = "LeaderSpouse";
                        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgCitywarTC.CitywarTCScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the TwinCity War.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                    }
                    else
                    {
                        dialog.AddText("Just the GuildLeader can claim the reward!")
                .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                    }
                }
                else
                {
                    dialog.AddText("Your~guild~has~not~dominated~guild~area..")
                .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                }
                return;
            }
            //if (Option == 20)
            //{
            //    if (!client.Inventory.HaveSpace(25))
            //    {
            //        dialog.AddText("------------------------------------------------------\n")
            //                      .AddText("There`s not enough space in your inventory\n")
            //                      .AddText("you need (25) free space in your inventory\n")
            //                      .AddText("------------------------------------------------------")
            //                      .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
            //        return;
            //    }
            //    if (client.Player.GuildID == MsgTournaments.MsgSchedules.CitywarPC.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.CitywarPC.Proces == MsgTournaments.ProcesType.Dead)
            //    {

            //        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.CitywarPC.Winner.LeaderReward > 0
            //             && !MsgTournaments.MsgSchedules.CitywarPC.RewardLeader.Contains(client.Player.UID))
            //        {

            //            MsgTournaments.MsgSchedules.CitywarPC.RewardLeader.Add(client.Player.UID);
            //            MsgTournaments.MsgSchedules.CitywarPC.Winner.LeaderReward -= 1;
            //            client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
            //            client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
            //            client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
            //            client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
            //            client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
            //            client.Inventory.Add(stream, 720547, 2, 0, 0, 0);//MegaMetsPack x2
            //            client.Inventory.Add(stream, 780010, 3, 0, 0, 0);//VIP 1Hour x3
            //            client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
            //            client.Inventory.Add(stream, 720393, 1, 0, 0, 0);//ExpPill x1
            //            client.Inventory.Add(stream, 722178, 1, 0, 0, 0);//SurpriseBox x1
            //            client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
            //            client.Player.Money += 8000000;
            //            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
            //            string Rank = "";
            //            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
            //            else Rank = "LeaderSpouse";
            //            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgCitywarPC.CitywarPCScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the CitywarPC.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
            //        }

            //        else
            //        {
            //            dialog.AddText("Just the GuildLeader can claim the reward!")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //        }
            //    }
            //    else
            //    {
            //        dialog.AddText("Your~guild~has~not~dominated~guild~area..")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //    }
            //    return;
            //}
            //if (Option == 30)
            //{
            //    if (!client.Inventory.HaveSpace(25))
            //    {
            //        dialog.AddText("------------------------------------------------------\n")
            //                      .AddText("There`s not enough space in your inventory\n")
            //                      .AddText("you need (25) free space in your inventory\n")
            //                      .AddText("------------------------------------------------------")
            //                      .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
            //        return;
            //    }
            //    if (client.Player.GuildID == MsgTournaments.MsgSchedules.CitywarAC.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.CitywarAC.Proces == MsgTournaments.ProcesType.Dead)
            //    {

            //        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.CitywarAC.Winner.LeaderReward > 0
            //             && !MsgTournaments.MsgSchedules.CitywarAC.RewardLeader.Contains(client.Player.UID))
            //        {

            //            MsgTournaments.MsgSchedules.CitywarAC.RewardLeader.Add(client.Player.UID);
            //            MsgTournaments.MsgSchedules.CitywarAC.Winner.LeaderReward -= 1;
            //            client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
            //            client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
            //            client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
            //            client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
            //            client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
            //            client.Inventory.Add(stream, 720547, 2, 0, 0, 0);//MegaMetsPack x2
            //            client.Inventory.Add(stream, 780010, 3, 0, 0, 0);//VIP 1Hour x3
            //            client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
            //            client.Inventory.Add(stream, 720393, 1, 0, 0, 0);//ExpPill x1
            //            client.Inventory.Add(stream, 722178, 1, 0, 0, 0);//SurpriseBox x1
            //            client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
            //            client.Player.Money += 8000000;
            //            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
            //            string Rank = "";
            //            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
            //            else Rank = "LeaderSpouse";
            //            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgCitywarAC.CitywarACScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the CitywarAC.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
            //        }

            //        else
            //        {
            //            dialog.AddText("Just the GuildLeader can claim the reward!")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //        }
            //    }
            //    else
            //    {
            //        dialog.AddText("Your~guild~has~not~dominated~guild~area..")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //    }
            //    return;
            //}
            //if (Option == 40)
            //{
            //    if (!client.Inventory.HaveSpace(25))
            //    {
            //        dialog.AddText("------------------------------------------------------\n")
            //                      .AddText("There`s not enough space in your inventory\n")
            //                      .AddText("you need (25) free space in your inventory\n")
            //                      .AddText("------------------------------------------------------")
            //                      .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
            //        return;
            //    }
            //    if (client.Player.GuildID == MsgTournaments.MsgSchedules.CitywarDC.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.CitywarDC.Proces == MsgTournaments.ProcesType.Dead)
            //    {

            //        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.CitywarDC.Winner.LeaderReward > 0
            //             && !MsgTournaments.MsgSchedules.CitywarDC.RewardLeader.Contains(client.Player.UID))
            //        {

            //            MsgTournaments.MsgSchedules.CitywarDC.RewardLeader.Add(client.Player.UID);
            //            MsgTournaments.MsgSchedules.CitywarDC.Winner.LeaderReward -= 1;
            //            client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
            //            client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
            //            client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
            //            client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
            //            client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
            //            client.Inventory.Add(stream, 720547, 2, 0, 0, 0);//MegaMetsPack x2
            //            client.Inventory.Add(stream, 780010, 3, 0, 0, 0);//VIP 1Hour x3
            //            client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
            //            client.Inventory.Add(stream, 720393, 1, 0, 0, 0);//ExpPill x1
            //            client.Inventory.Add(stream, 722178, 1, 0, 0, 0);//SurpriseBox x1
            //            client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
            //            client.Player.Money += 8000000;
            //            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
            //            string Rank = "";
            //            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
            //            else Rank = "LeaderSpouse";
            //            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgCitywarDC.CitywarDCScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the CitywarDC.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
            //        }

            //        else
            //        {
            //            dialog.AddText("Just the GuildLeader can claim the reward!")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //        }
            //    }
            //    else
            //    {
            //        dialog.AddText("Your~guild~has~not~dominated~guild~area..")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //    }
            //    return;
            //}
            //if (Option == 50)
            //{
            //    if (!client.Inventory.HaveSpace(25))
            //    {
            //        dialog.AddText("------------------------------------------------------\n")
            //                      .AddText("There`s not enough space in your inventory\n")
            //                      .AddText("you need (25) free space in your inventory\n")
            //                      .AddText("------------------------------------------------------")
            //                      .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
            //        return;
            //    }
            //    if (client.Player.GuildID == MsgTournaments.MsgSchedules.CitywarBI.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.CitywarBI.Proces == MsgTournaments.ProcesType.Dead)
            //    {

            //        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.CitywarBI.Winner.LeaderReward > 0
            //             && !MsgTournaments.MsgSchedules.CitywarBI.RewardLeader.Contains(client.Player.UID))
            //        {

            //            MsgTournaments.MsgSchedules.CitywarBI.RewardLeader.Add(client.Player.UID);
            //            MsgTournaments.MsgSchedules.CitywarBI.Winner.LeaderReward -= 1;
            //            client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
            //            client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
            //            client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
            //            client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
            //            client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
            //            client.Inventory.Add(stream, 720547, 2, 0, 0, 0);//MegaMetsPack x2
            //            client.Inventory.Add(stream, 780010, 3, 0, 0, 0);//VIP 1Hour x3
            //            client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
            //            client.Inventory.Add(stream, 720393, 1, 0, 0, 0);//ExpPill x1
            //            client.Inventory.Add(stream, 722178, 1, 0, 0, 0);//SurpriseBox x1
            //            client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
            //            client.Player.Money += 8000000;
            //            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
            //            string Rank = "";
            //            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
            //            else Rank = "LeaderSpouse";
            //            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgCitywarBI.CitywarBIScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the CitywarBI.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
            //        }

            //        else
            //        {
            //            dialog.AddText("Just the GuildLeader can claim the reward!")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //        }
            //    }
            //    else
            //    {
            //        dialog.AddText("Your~guild~has~not~dominated~guild~area..")
            //    .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
            //    }
            //    return;
            //}
            TournamentType Type;
            Type = (TournamentType)Option;
            switch (Type)
            {
                case TournamentType.CitywarTC:
                    if (MsgSchedules.CitywarTC.Proces != ProcesType.Dead)
                    {
                        MsgSchedules.CitywarTC.Join(client, stream);
                    }
                    else
                    {
                        dialog.AddText("In the heart of our realm lies Twincity, a bustling hub where guilds vie for supremacy.\nThe “Twincity Citywar” is an epic clash that unfolds within its ancient walls, Here’s what you need to know:\n");
                        dialog.AddText("Each guild can join the fray, their banners unfurled,\ntheir warriors ready, It’s a battle not just for territory, but for honor and prestige.\n");
                        dialog.Text("------------------------------------------------------\n");
                        dialog.Text("Fight Schedule : Monday at (07:00, 08:00)\n");
                        dialog.Text("------------------------------------------------------\n");
                        dialog.AddOption("I will come later. ", byte.MaxValue);
                        dialog.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case TournamentType.CitywarPC:
                    if (MsgSchedules.CitywarPC.Proces != ProcesType.Dead)
                    {
                        MsgSchedules.CitywarPC.Join(client, stream);
                    }
                    else
                    {
                        dialog.AddText("In the heart of our realm lies Twincity, a bustling hub where guilds vie for supremacy.\nThe “Twincity Citywar” is an epic clash that unfolds within its ancient walls, Here’s what you need to know:\n");
                        dialog.AddText("Each guild can join the fray, their banners unfurled,\ntheir warriors ready, It’s a battle not just for territory, but for honor and prestige.\n");
                        dialog.Text("------------------------------------------------------\n");
                        dialog.Text("Fight Schedule : Tuesday at (07:00, 08:00)\n");
                        dialog.Text("------------------------------------------------------\n");
                        dialog.AddOption("I will come later. ", byte.MaxValue);
                        dialog.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                    //case TournamentType.CitywarAC:
                    //    if (MsgSchedules.CitywarAC.Proces != ProcesType.Dead)
                    //    {
                    //        MsgSchedules.CitywarAC.Join(client, stream);
                    //    }
                    //    else
                    //    {
                    //        dialog.AddText("In the heart of our realm lies Twincity, a bustling hub where guilds vie for supremacy.\nThe “Twincity Citywar” is an epic clash that unfolds within its ancient walls, Here’s what you need to know:\n");
                    //        dialog.AddText("Each guild can join the fray, their banners unfurled,\ntheir warriors ready, It’s a battle not just for territory, but for honor and prestige.\n");
                    //        dialog.Text("------------------------------------------------------\n");
                    //        dialog.Text("Fight Schedule : Wednesday at (07:00, 08:00)\n");
                    //        dialog.Text("------------------------------------------------------\n");
                    //        dialog.AddOption("I will come later. ", byte.MaxValue);
                    //        dialog.AddAvatar(63).FinalizeDialog();
                    //    }
                    //    break;
                    //case TournamentType.CitywarDC:
                    //    if (MsgSchedules.CitywarDC.Proces != ProcesType.Dead)
                    //    {
                    //        MsgSchedules.CitywarDC.Join(client, stream);
                    //    }
                    //    else
                    //    {
                    //        dialog.AddText("In the heart of our realm lies Twincity, a bustling hub where guilds vie for supremacy.\nThe “Twincity Citywar” is an epic clash that unfolds within its ancient walls, Here’s what you need to know:\n");
                    //        dialog.AddText("Each guild can join the fray, their banners unfurled,\ntheir warriors ready, It’s a battle not just for territory, but for honor and prestige.\n");
                    //        dialog.Text("------------------------------------------------------\n");
                    //        dialog.Text("Fight Schedule : Thursday at (07:00, 08:00)\n");
                    //        dialog.Text("------------------------------------------------------\n");
                    //        dialog.AddOption("I will come later. ", byte.MaxValue);
                    //        dialog.AddAvatar(63).FinalizeDialog();
                    //    }
                    //    break;
                    //case TournamentType.CitywarBI:
                    //    if (MsgSchedules.CitywarBI.Proces != ProcesType.Dead)
                    //    {
                    //        MsgSchedules.CitywarBI.Join(client, stream);
                    //    }
                    //    else
                    //    {
                    //        dialog.AddText("In the heart of our realm lies Twincity, a bustling hub where guilds vie for supremacy.\nThe “Twincity Citywar” is an epic clash that unfolds within its ancient walls, Here’s what you need to know:\n");
                    //        dialog.AddText("Each guild can join the fray, their banners unfurled,\ntheir warriors ready, It’s a battle not just for territory, but for honor and prestige.\n");
                    //        dialog.Text("------------------------------------------------------\n");
                    //        dialog.Text("Fight Schedule : Friday at (07:00, 08:00)\n");
                    //        dialog.Text("------------------------------------------------------\n");
                    //        dialog.AddOption("I will come later. ", byte.MaxValue);
                    //        dialog.AddAvatar(63).FinalizeDialog();
                    //    }
                    //    break;

            }

        }
        #endregion        
        #region city pole
        [NpcAttribute(NpcID.ZoneCityPole)]
        public static void ZoneCityPole(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.Text("What can I do for you?");
                        data.Option("I~want~to~leave~here.", 1);
                        data.Option("Just passing by.", 255);
                        data.AddAvatar(45).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.ExitToTwin();
                        client.CreateBoxDialog("You are in Twin City.");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.EnterCityPole)]
        public static void EnterCityPole(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.Text("What can I do for you?");
                        data.Option("Enter The Pole Area.", 3);
                        data.Option("Claim Prize.", 1);
                        data.Option("Just passing by.", 255);
                        data.AddAvatar(45).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (MsgSchedules.MsgCityPole.Process == ProcesType.Dead)
                        {
                            data.Text("This event is not currently available, it will start at 13:00.");
                            data.Option("Just passing by.", 255);
                            data.AddAvatar(45).FinalizeDialog();
                        }
                        else MsgSchedules.MsgCityPole.Join(client, stream);
                        break;
                    }
                case 1:
                    {
                        data.Text("Hello champ! Are you here to claim your prize in the CityPole war?");
                        data.Option("Yes sir!", 2);
                        data.Option("Just passing by.", 255);
                        data.AddAvatar(45).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Player.GuildID == 0)
                        {
                            data.Text("You do not belong to a guild!");
                            data.Option("Ahh!", 255);
                            data.AddAvatar(45).FinalizeDialog();
                            return;
                        }
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.Text("You have to be the guild leader!");
                            data.Option("Ahh!", 255);
                            data.AddAvatar(45).FinalizeDialog();
                            return;
                        }
                        //uint prize = MsgSchedules.MsgCityPole.GetWinnerPrize(client);
                        uint prize = MsgSchedules.MsgCityPole.GetWinnerPrize(client);
                        if (prize == 0)
                        {
                            data.Text("There is no prize to be claimed!");
                            data.Option("Ahh!", 255);
                            data.AddAvatar(45).FinalizeDialog();
                            return;
                        }
                        //client.Player.ConquerPoints += (int)prize;
                        client.Player.Money += (int)prize;
                        uint pts = client.Player.MyGuild.CityPolePoint;
                        client.Player.MyGuild.CityPolePoint = 0;
                        string msg = "#53 " + client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded with " + 1 + /*+ Role.Core.WriteNumber(prize) + */" ConquerMoney for " + pts + "Pts the CityPole.";
                        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage(msg, MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage(msg, MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage(msg, MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                        data.Text("You have claimed " + prize + " ConquerMoney, Congratulations!");
                        data.Option("Thank you!", 255);
                        data.AddAvatar(45).FinalizeDialog();
                        break;
                    }
            }
        }

        #endregion
        #region Exchange TG
        [Npc(NpcID.ExchangeTG)]
        public static void ExchangeTG(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            return;
            //switch (Option)
            //{
            //    case 0:
            //        dialog.Text("Are you still plagued by a lack of Refined Gems?\n Well, I have a deal for you! There`s a chance for you to get piles of Super Tortoise Gems!");                    
            //        dialog.AddText("\n# ======================================================= #.");
            //        dialog.AddText("\n Requiered Super Gem: 7 different type of super gem");
            //        dialog.AddText("\n Requiered Refined Gem: 1 Golry, Thunder and 25,000 ConquerPoints");
            //        dialog.AddText("\n# ======================================================= #.");
            //        dialog.AddText("\n Your attempts: " + client.LimitedDailyTimes.ExchangeTG + " / 5");
            //        dialog.AddText("\n# ======================================================= #.");
            //        dialog.Option("I~want~a~super~tortoise~gems.", 1);
            //        //dialog.Option("I~want~to~hand~in~Refined~gems.", 4);
            //        dialog.Option("Not~interested.", byte.MaxValue);
            //        dialog.AddAvatar(33);
            //        dialog.FinalizeDialog();
            //        break;                
            //    case 1:
            //        if (client.LimitedDailyTimes.ExchangeTG == 5)
            //        {
            //            dialog.AddText("You've already reach the limit of exchange gem today, please come back tomorrow.");
            //            dialog.AddOption("Alright", 255);
            //            dialog.AddAvatar(60);
            //            dialog.FinalizeDialog();
            //            break;
            //        }
            //        if (client.Inventory.HaveSpace(1))
            //        {
            //            Struct.LimitedDailyTimes.Reward(client, 100);
            //        }
            //        else
            //            client.SendSysMesage("There`s not enough space (1) in your inventory.");

            //        break;
            //}
        }

        #endregion
        #region OnlinePoints Manager
        [NpcAttribute(NpcID.OnlinePointsManager)]
        public static void OnlinePointsManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 100:
                case 0:
                    {
                        data.AddText("Greetings, warrior! Welcome to the OnlinePointsHandler.");
                        data.AddText("\n ----- How to Earn Online Points -------");
                        data.AddText("\n 1. Stay online and active — every 5 minutes you spend online will earn you OP (Online Points).");
                        data.AddText("\n 2. You must be Level 120 or higher AND have completed your 2nd Rebirth to earn OP.");
                        data.AddText("\nThis requirement is to prevent abuse from low-level or idle accounts.");
                        data.AddText("\n ----- Important Notes -------");
                        data.AddText("\n• OP is not earned while in Auto/Offline modes.");
                        data.AddText("\n• Once you have enough OP, you can claim amazing rewards.");
                        data.AddText("\n• Claim attempts are limited, so choose wisely.");
                        data.AddText("\n---- You have: [" + client.Player.OnlinePoints + "] Online Points ----");
                        data.AddOption("Claim Guild Certificates [" + client.OnlinePointsManager.GuildCertificate + "/1]", 1);
                        data.AddOption("Claim Clan Certificates [" + client.OnlinePointsManager.ClanCertificate + "/1]", 11);
                        data.AddOption("Claim Promotion Stone [" + client.OnlinePointsManager.PromotionStonesTimes + "/3]", 4);
                        data.AddOption("Claim Garment [" + client.OnlinePointsManager.GarmentTimes + "/1]", 7);
                        //data.AddOption("Claim Plus items [" + client.OnlinePointsManager.RandomItemTimes + "/3]", 10);
                        //data.AddOption("Claim (S) Tortoise Gem [" + client.OnlinePointsManager.SuperTGTimes + "/1]", 13);
                        data.AddOption("Claim Accessories [" + client.OnlinePointsManager.AccessoriesTimes + "/1]", 16);
                        //data.AddOption("Next Page", 40);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(345);
                        data.FinalizeDialog();
                        break;
                    }

                #region Stone

                case 1:
                    {
                        //if (client.OnlinePointsManager.StonesTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You about to claim a GuildCertificate #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.GuildCertificate + " / 1");
                        data.AddText("\n Requiered Points: 300");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 3);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(345);
                        data.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        //if (client.OnlinePointsManager.StonesTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You about to claim a ClanCertificate #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.ClanCertificate + " / 1");
                        data.AddText("\n Requiered Points: 300");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 33);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(345);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.OnlinePointsManager.GuildCertificate >= 1 && Struct.OnlinePointsManager.MaxGuildCertificate <= 1)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(345);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 102095);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                case 33:
                    {
                        if (client.OnlinePointsManager.ClanCertificate >= 1 && Struct.OnlinePointsManager.MaxClanCertificate <= 1)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(345);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 810031);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                #endregion Stone
                #region vip

                case 4:
                    {
                        //if (client.OnlinePointsManager.VIPTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of VIP today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n# You about to claim a Promotion Stones #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.PromotionStonesTimes + " / 3");
                        data.AddText("\n Requiered Points: 15");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange Valorstone", 5);
                        data.AddOption("Exchange Windshard", 15);
                        data.AddOption("Exchange Mystara", 55);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.OnlinePointsManager.PromotionStonesTimes == 3 && Struct.OnlinePointsManager.MaxPromotionStones <= 3)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 810032);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                case 15:
                    {
                        if (client.OnlinePointsManager.PromotionStonesTimes == 3 && Struct.OnlinePointsManager.MaxPromotionStones <= 3)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 810033);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                case 55:
                    {
                        if (client.OnlinePointsManager.PromotionStonesTimes == 3 && Struct.OnlinePointsManager.MaxPromotionStones <= 3)
                        {
                            data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.TournamentsManager.Reward(client, 810034);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }


                #endregion
                #region random garment

                case 7:
                    {
                        //if (client.OnlinePointsManager.GarmentTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a random garment #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.GarmentTimes + " / 1");
                        data.AddText("\n Requiered Points: 300");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 8);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.OnlinePointsManager.GarmentTimes == 1 && Struct.OnlinePointsManager.MaxGarment <= 1)
                        {
                            data.AddText("You've already reach the limit of Garments today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 1020);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                #endregion
                #region random plus items

                case 10:
                    {
                        //if (client.OnlinePointsManager.RandomItemTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a Random Plus +3 items #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.RandomItemTimes + " / 3");
                        data.AddText("\n Requiered Points: 360");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 11);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 111:
                    {
                        if (client.OnlinePointsManager.RandomItemTimes == 3 && Struct.OnlinePointsManager.MaxRandomItem <= 3)
                        {
                            data.AddText("You've already reach the limit of Plus items today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 1000);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region Super Tortoise Gem 

                case 13:
                    {
                        //if (client.OnlinePointsManager.SuperTGTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n         # you about to claim a Super Tortoise Gem #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.SuperTGTimes + " / 1");
                        data.AddText("\n Requiered Points: 720");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 14);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        if (client.OnlinePointsManager.SuperTGTimes == 1 && Struct.OnlinePointsManager.MaxSuperTG <= 1)
                        {
                            data.AddText("You've already reach the limit of Tortoise Gem today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 1015);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region AccessoriesTimes

                case 16:
                    {
                        //if (client.OnlinePointsManager.AccessoriesTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a Random Accessories #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.AccessoriesTimes + " / 1");
                        data.AddText("\n Requiered Points: 300");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 17);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        if (client.OnlinePointsManager.AccessoriesTimes == 1 && Struct.OnlinePointsManager.MaxAccessories <= 1)
                        {
                            data.AddText("You've already reach the limit of Accessories today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 1001);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region next page
                case 40:
                    {
                        data.AddText($"Hello, little warrior I hope you are doing well!\nI would like to introduce you to the OP Manager");
                        data.AddText("\n            # Requiered City (Twincity) #");
                        data.AddText("\nEvery minute you stay online, worth a rewards in our server.");
                        data.AddText("\nOnce you have the type of minutes,\nyou can get your awsome rewards.");
                        data.AddText("\n       # Remember u just have limited attempts #");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddText("\n          #You have: [" + client.Player.OnlinePoints + "] OnlinePoints#");
                        data.AddOption("Claim PowerExpball:[" + client.OnlinePointsManager.PowerExpballTimes + "/10]", 41);
                        data.AddOption("Claim MegaMetsPack:[" + client.OnlinePointsManager.MegaMetsPackTimes + "/10]", 44);
                        data.AddOption("Claim Class5MoneyBag:[" + client.OnlinePointsManager.Class5MoneyBagTimes + "/5]", 47);
                        data.AddOption("Previous page", 0);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                #endregion
                #region PowerExpball

                case 41:
                    {
                        //if (client.OnlinePointsManager.StonesTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a PowerExpball #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.PowerExpballTimes + "/10");
                        data.AddText("\n Requiered Points: 144");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 43);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 43:
                    {
                        if (client.OnlinePointsManager.PowerExpballTimes == 10 && Struct.OnlinePointsManager.MaxPowerExpball <= 10)
                        {
                            data.AddText("You've already reach the limit of PowerExpball today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 10021);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion 
                #region MegaMetsPack
                case 44:
                    {
                        //if (client.OnlinePointsManager.VIPTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of VIP today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a MegaMetsPack #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.MegaMetsPackTimes + "/10");
                        data.AddText("\n Requiered Points: 144");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 45);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 45:
                    {
                        if (client.OnlinePointsManager.MegaMetsPackTimes == 10 && Struct.OnlinePointsManager.MaxMegaMetsPack <= 10)
                        {
                            data.AddText("You've already reach the limit of MegaMetsPack today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 10111);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }

                #endregion
                #region Class5MoneyBag
                case 47:
                    {
                        //if (client.OnlinePointsManager.GarmentTimes == 3)
                        //{
                        //    data.AddText("You've already reach the limit of stone today, please come back tomorrow.");
                        //    data.AddOption("Alright", 255);
                        //    data.AddAvatar(60);
                        //    data.FinalizeDialog();
                        //    break;
                        //}
                        data.AddText("\n                # you about to claim a Class5MoneyBag #");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n Your attempts: " + client.OnlinePointsManager.Class5MoneyBagTimes + "/5");
                        data.AddText("\n Requiered Points: 288");
                        data.AddText("\n# ======================================================= #.");
                        data.AddText("\n You have: " + client.Player.OnlinePoints + " OnlinePoints");
                        data.AddText("\n# ======================================================= #.");
                        data.AddOption("Exchange now.", 48);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 48:
                    {
                        if (client.OnlinePointsManager.Class5MoneyBagTimes == 5 && Struct.OnlinePointsManager.MaxClass5MoneyBag <= 5)
                        {
                            data.AddText("You've already reach the limit of Class5MoneyBag today, please come back tomorrow.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }

                        if (client.Inventory.HaveSpace(1))
                        {
                            Struct.OnlinePointsManager.Reward(client, 10201);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (1) in your inventory.");

                        break;
                    }
                    #endregion

            }
        }
        #endregion
        #region Sesson
        #region royalteleport
        [NpcAttribute(NpcID.royalteleport)]
        public static void royalteleport(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're about to left map?")
                            .AddOption("Teleport~to~Twin~City.", 3)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }

                case 3:
                    {
                        client.Teleport(428, 378, 1002, 0);
                        //if (Program.MacJoin.ContainsKey(client.OnLogin.MacAddress))
                        //{
                        //    Program.MacJoin.Remove(client.OnLogin.MacAddress);
                        //}
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.royalteleport2)]
        public static void royalteleport2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're about to left map?")
                            .AddOption("Teleport~to~Twin~City.", 3)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }

                case 3:
                    {
                        client.Teleport(428, 378, 1002, 0);
                        //if (Program.MacJoin.ContainsKey(client.OnLogin.MacAddress))
                        //{
                        //    Program.MacJoin.Remove(client.OnLogin.MacAddress);
                        //}
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.royalteleport3)]
        public static void royalteleport3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're about to left map?")
                            .AddOption("Teleport~to~Twin~City.", 3)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }

                case 3:
                    {
                        client.Teleport(428, 378, 1002, 0);
                        //if (Program.MacJoin.ContainsKey(client.OnLogin.MacAddress))
                        //{
                        //    Program.MacJoin.Remove(client.OnLogin.MacAddress);
                        //}
                        break;
                    }
            }
        }
        #endregion
        [NpcAttribute(NpcID.DailyTraining)]
        public static void DailyTraining(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        string _WeekOne = (client.DbDailyTraining.WeekOne != 0 ? "(Completed)" : "(in Process)");
                        string _WeekTwo = (client.DbDailyTraining.WeekTwo != 0 ? "(Completed)" : "(in Process)");
                        string _WeekThree = (client.DbDailyTraining.WeekThree != 0 ? "(Completed)" : "(in Process)");
                        string _WeekFour = (client.DbDailyTraining.WeekFour != 0 ? "(Completed)" : "(in Process)");

                        if (client.DbDailyTraining.WeekOne == 0 && client.DbDailyTraining.WeekTwo == 0)
                            _WeekTwo = "(Waiting)";
                        if (client.DbDailyTraining.WeekTwo == 0 && client.DbDailyTraining.WeekThree == 0)
                            _WeekThree = "(Waiting)";
                        if (client.DbDailyTraining.WeekThree == 0 && client.DbDailyTraining.WeekFour == 0)
                            _WeekFour = "(Waiting)";

                        data.AddText("Hello, little warrior I hope you are doing well! I would like to introduce you to the daily quests that will make you hyperactive on our server so,");
                        data.AddText(" Let's get to the heart of the matter. We have 4 Week stages,");
                        data.AddText(" each stage differs in its difficulty, so do the required and you will get a great reward.");
                        data.AddOption("WeekOne " + _WeekOne, 1);
                        data.AddOption("WeekTwo " + _WeekTwo, 2);
                        data.AddOption("WeekThree " + _WeekThree, 3);
                        data.AddOption("WeekFour " + _WeekFour, 4);
                        data.AddOption("Exchange Points", 50);
                        data.AddOption("UAConquer Island", 61);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(71);
                        data.FinalizeDialog();
                        break;
                    }
                case 61:
                    {

                        data.AddText("Welcome to [UAConquerPass], great warrior, we know you've come a long way to make your gears\n We're so happy.It's time to fight, for the big rewards");
                        data.AddText("\n                # Attntion please #");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddText("\n Teleport fees : 2,000,000 Gold, [NOTE: If you die you lose items inside your inventory.]");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddText("\n Rewards : stones, ConquerPoints, UAConquer Points and more...");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddOption("am~sure~teleport~me", 60);
                        data.AddOption("i'll~pass.", byte.MaxValue);
                        data.AddAvatar(84).FinalizeDialog();
                        break;
                    }
                case 60:
                    {
                        if (AtributesStatus.IsWater(client.Player.Class))
                        {
                            data.AddText("\n                        [Warning]");
                            data.AddText("\n# ------------------------------------------------------- #.");
                            data.AddText("\n#       [waters tao now allowed in this map]              #");
                            data.AddText("\n#[u will lose your cps if u join there, are you sure...]  #");
                            data.AddText("\n# ------------------------------------------------------- #.");
                            data.AddOption("i don't care let me in", 88);
                            data.AddOption("thanks, for let me know", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        //if (!Program.MacJoin.ContainsKey(client.OnLogin.MacAddress))
                        //{

                        if (client.Player.Money >= 2000000)
                        {
                            client.Player.Money -= 2000000;
                            client.Teleport(148, 150, 1121);
                            //Program.MacJoin.Add(client.OnLogin.MacAddress, client.Player.Name);
                            data.AddText("\n# ------------------------------------------------------- #.");
                            data.AddText("\n                [NOTE: SURVIVAL IS KEY]");
                            data.AddText("If you fall in battle, you will forfeit the 20k CPs you paid to enter and any items in your inventory. Make sure not to carry anything valuable, or you risk losing it all.");
                            data.AddText("\n# ------------------------------------------------------- #.");
                            data.AddOption("Deal.", byte.MaxValue);
                            data.AddAvatar(84).FinalizeDialog();
                        }
                        else client.SendSysMesage("You don't have fees to join please make sure that you have 2,000,000 ConquerMoney.");

                        //}
                        //else client.CreateBoxDialog($"You can't join a event while you have other player ({Program.MacJoin[client.OnLogin.MacAddress]}) joined to this event.");
                        break;
                    }
                case 88:
                    {

                        //if (!Program.MacJoin.ContainsKey(client.OnLogin.MacAddress))
                        //{

                        if (client.Player.Money >= 2000000)
                        {
                            client.Player.Money -= 2000000;
                            client.Teleport(148, 150, 1121);
                            //Program.MacJoin.Add(client.OnLogin.MacAddress, client.Player.Name);
                            data.AddText("\n# ------------------------------------------------------- #.");
                            data.AddText("\n                [NOTE: SURVIVAL IS KEY]");
                            data.AddText("If you fall in battle, you will forfeit the 20k CPs you paid to enter and any items in your inventory. Make sure not to carry anything valuable, or you risk losing it all.");
                            data.AddText("\n# ------------------------------------------------------- #.");
                            data.AddOption("Deal.", byte.MaxValue);
                            data.AddAvatar(84).FinalizeDialog();
                        }
                        else client.SendSysMesage("You don't have fees to join please make sure that you have 2000,000 ConquerPoints.");

                        //}
                        //else client.CreateBoxDialog($"You can't join a event while you have other player ({Program.MacJoin[client.OnLogin.MacAddress]}) joined to this event.");
                        break;
                    }
                case 50:
                    {
                        client.ActiveNpc = (uint)Game.MsgNpc.NpcID.RoyalPassManager;
                        Game.MsgNpc.NpcHandler.RoyalPassManager(client, stream, 0, "", 0);
                        break;
                    }
                case 1:
                    {
                        if (client.DbDailyTraining.WeekOne != 2)
                        {
                            data.AddText($"\n                   # Week   One #");
                            data.AddText($"\n     # Free pass #        |       # Premium pass # ");
                            data.AddText($"\n   SwordMaster    ({client.DbDailyTraining.SwordMaster}/3)   |     SwordMaster ({client.DbDailyTraining.SwordMaster}/3)");
                            data.AddText($"\n   City Boss   ({client.DbDailyTraining.CityBosses}/3)   |     North Bosses   ({client.DbDailyTraining.CityBosses}/3)");
                            data.AddText($"\n   Arena Win      ({client.DbDailyTraining.ArenaWin}/10)  |     Arena Win   ({client.DbDailyTraining.ArenaWin}/10)");
                            data.AddText($"\n   Arena Lose     ({client.DbDailyTraining.ArenaLose}/5)   |     Arena Lose  ({client.DbDailyTraining.ArenaLose}/5)");
                            data.AddOption("Claim Free pass (Reward).", 11);
                            data.AddOption("Claim Premium pass (Reward).", 110);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You've already completed the WeekOne Stage today! Why dont you take a rest and come back next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.CityBosses < 3 ||
                            client.DbDailyTraining.ArenaWin < 10 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekOne < 1)
                        {
                            client.DbDailyTraining.WeekOne += 1;
                            //client.DbDailyTraining.SwordMaster = 0;
                            //client.DbDailyTraining.CityBosses = 0;
                            //client.DbDailyTraining.ArenaWin = 0;
                            //client.DbDailyTraining.ArenaLose = 0;
                            //client.Player.ConquerPoints += 250;
                            client.Player.Money += 10000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekOne++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(10000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the Easy Stage today! Why dont you  take a rest and come back next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 110:
                    {
                        if (client.DbDailyTraining.PremiumPass != 1)
                        {
                            data.AddText("this prize require the premium pass");
                            data.AddOption("Upgrade Pass.", 250);
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.CityBosses < 3 ||
                            client.DbDailyTraining.ArenaWin < 10 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekOne < 2)
                        {
                            client.DbDailyTraining.WeekOne += 1;
                            //client.DbDailyTraining.SwordMaster = 0;
                            //client.DbDailyTraining.CityBosses = 0;
                            //client.DbDailyTraining.ArenaWin = 0;
                            //client.DbDailyTraining.ArenaLose = 0;
                            //client.Player.ConquerPoints += 2500;

                            client.Player.Money += 20000000;

                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekOne++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(20000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the Easy Stage today! Why dont you  take a rest and come back next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.DbDailyTraining.WeekOne < 1)
                        {
                            data.AddText("You need to complete the WeekOne stage first.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekTwo != 2)
                        {
                            data.AddText($"\n                   # Week   Two #");
                            data.AddText($"\n     # Free pass #        |       # Premium pass # ");
                            data.AddText($"\n   SwordMaster    ({client.DbDailyTraining.SwordMaster}/3)   |     SwordMaster ({client.DbDailyTraining.SwordMaster}/3).");
                            data.AddText($"\n   One Great Boss ({client.DbDailyTraining.OneGreatBoss}/1)   |     One Great Boss ({client.DbDailyTraining.OneGreatBoss}/1).");
                            data.AddText($"\n   City Boss      ({client.DbDailyTraining.CityBosses}/4)   |     City Boss ({client.DbDailyTraining.CityBosses}/4).");
                            data.AddText($"\n   Arena Win      ({client.DbDailyTraining.ArenaWin}/15)   |     Arena Win ({client.DbDailyTraining.ArenaWin}/15).");
                            data.AddText($"\n   Arena Lose     ({client.DbDailyTraining.ArenaLose}/5)   |     Arena Lose ({client.DbDailyTraining.ArenaLose}/5).");
                            data.AddOption("Claim Free pass (Reward).", 12);
                            data.AddOption("Claim Premium pass (Reward).", 120);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You've already completed the WeekTwo Stage today! Why dont you take a rest  and come back tomorrow?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.OneGreatBoss < 1 ||
                            client.DbDailyTraining.CityBosses < 4 ||
                            client.DbDailyTraining.ArenaWin < 15 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekTwo < 1)
                        {
                            client.DbDailyTraining.WeekTwo += 1;
                            //client.DbDailyTraining.SwordMaster = 0;
                            //client.DbDailyTraining.OneGreatBoss = 0;
                            //client.DbDailyTraining.CityBosses = 0;
                            //client.DbDailyTraining.ArenaWin = 0;
                            //client.DbDailyTraining.ArenaLose = 0;
                            //client.Player.ConquerPoints += 5000;
                            client.Player.Money += 20000000;

                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekTwo++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(5000)} ConquerPoints and {Role.Core.WriteNumber(20000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the Medium Stage today! Why dont you take a rest come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 120:
                    {
                        if (client.DbDailyTraining.PremiumPass != 1)
                        {
                            data.AddText("this prize require the premium pass");
                            data.AddOption("Upgrade Pass.", 250);
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.OneGreatBoss < 1 ||
                            client.DbDailyTraining.CityBosses < 4 ||
                            client.DbDailyTraining.ArenaWin < 15 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekTwo < 2)
                        {
                            client.DbDailyTraining.WeekTwo += 1;

                            //client.Player.ConquerPoints += 5000;
                            client.Player.Money += 20000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekTwo++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(5000)} ConquerPoints and {Role.Core.WriteNumber(20000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the Medium Stage today! Why dont you take a rest come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.DbDailyTraining.WeekOne < 1)
                        {
                            data.AddText("You need to complete the WeekOne stage first.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekTwo < 1)
                        {
                            data.AddText("You need to complete the WeekTwo stage first.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekThree != 2)
                        {
                            data.AddText($"\n                   # Week   Three #");
                            data.AddText($"\n     # Free pass #        |       # Premium pass # ");
                            data.AddText($"\n   SwordMaster    ({client.DbDailyTraining.SwordMaster}/3)   |     SwordMaster    ({client.DbDailyTraining.SwordMaster}/3).");
                            data.AddText($"\n   Nemesis Tyrant ({client.DbDailyTraining.NemesisTyrant}/1)   |     Nemesis Tyrant ({client.DbDailyTraining.NemesisTyrant}/1).");
                            data.AddText($"\n   One Great Boss ({client.DbDailyTraining.OneGreatBoss}/3)   |     One Great Boss ({client.DbDailyTraining.OneGreatBoss}/3).");
                            data.AddText($"\n   North Bosses   ({client.DbDailyTraining.CityBosses}/5)   |     UAConquer Bosses      ({client.DbDailyTraining.CityBosses}/5).");
                            data.AddText($"\n   Arena Win      ({client.DbDailyTraining.ArenaWin}/30)  |     Arena Win      ({client.DbDailyTraining.ArenaWin}/30).");
                            data.AddText($"\n   Arena Lose     ({client.DbDailyTraining.ArenaLose}/5)   |     Arena Lose     ({client.DbDailyTraining.ArenaLose}/5).");
                            data.AddOption("Claim Free pass (Reward).", 13);
                            data.AddOption("Claim Premium pass (Reward).", 130);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You've already completed the WeekThree Stage today! Why dont you take a rest and come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.OneGreatBoss < 3 ||
                            client.DbDailyTraining.CityBosses < 5 ||
                            client.DbDailyTraining.NemesisTyrant < 1 ||
                            client.DbDailyTraining.ArenaWin < 30 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekThree < 1)
                        {
                            client.DbDailyTraining.WeekThree += 1;
                            //client.DbDailyTraining.NemesisTyrant = 0;
                            //client.DbDailyTraining.SwordMaster = 0;
                            //client.DbDailyTraining.OneGreatBoss = 0;
                            //client.DbDailyTraining.CityBosses = 0;
                            //client.DbDailyTraining.ArenaWin = 0;
                            //client.DbDailyTraining.ArenaLose = 0;
                            //client.Player.ConquerPoints += 10000;
                            client.Player.Money += 20000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekThree++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(10000)} ConquerPoints and {Role.Core.WriteNumber(20000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the Hard Stage today! Why dont you take a rest and come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 130:
                    {
                        if (client.DbDailyTraining.PremiumPass != 1)
                        {
                            data.AddText("this prize require the premium pass");
                            data.AddOption("Upgrade Pass.", 250);
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.OneGreatBoss < 3 ||
                            client.DbDailyTraining.CityBosses < 5 ||
                            client.DbDailyTraining.NemesisTyrant < 1 ||
                            client.DbDailyTraining.ArenaWin < 30 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekThree < 2)
                        {
                            client.DbDailyTraining.WeekThree += 1;
                            //client.Player.ConquerPoints += 10000;
                            client.Player.Money += 20000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekThree++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(10000)} ConquerPoints and {Role.Core.WriteNumber(20000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the Hard Stage today! Why dont you take a rest and come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.DbDailyTraining.WeekOne < 1)
                        {
                            data.AddText("You need to complete the WeekOne stage first.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekTwo < 1)
                        {
                            data.AddText("You need to complete the WeekTwo stage first.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }

                        if (client.DbDailyTraining.WeekThree < 1)
                        {
                            data.AddText("You need to complete the WeekThree stage first.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }

                        if (client.DbDailyTraining.WeekFour != 2)
                        {
                            data.AddText($"\n                   # Week   Four #");
                            data.AddText($"\n     # Free pass #        |       # Premium pass # ");
                            data.AddText($"\n   SwordMaster    ({client.DbDailyTraining.SwordMaster}/3)   |     SwordMaster    ({client.DbDailyTraining.SwordMaster}/3).");
                            data.AddText($"\n   Nemesis Tyrant ({client.DbDailyTraining.NemesisTyrant}/1)   |     Nemesis Tyrant ({client.DbDailyTraining.NemesisTyrant}/1).");
                            data.AddText($"\n   One Great Boss ({client.DbDailyTraining.OneGreatBoss}/3)   |     One Great Boss ({client.DbDailyTraining.OneGreatBoss}/3).");
                            data.AddText($"\n   North Bosses   ({client.DbDailyTraining.CityBosses}/5)   |     UAConquer Bosses      ({client.DbDailyTraining.CityBosses}/5).");
                            data.AddText($"\n   Arena Win      ({client.DbDailyTraining.ArenaWin}/30)  |     Arena Win      ({client.DbDailyTraining.ArenaWin}/30).");
                            data.AddText($"\n   Arena Lose     ({client.DbDailyTraining.ArenaLose}/5)   |     Arena Lose     ({client.DbDailyTraining.ArenaLose}/5).");
                            data.AddOption("Claim Free pass (Reward).", 14);
                            data.AddOption("Claim Premium pass (Reward).", 140);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You've already completed the WeekFour Stage today! Why dont you take a rest and come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.OneGreatBoss < 3 ||
                            client.DbDailyTraining.CityBosses < 5 ||
                            client.DbDailyTraining.NemesisTyrant < 1 ||
                            client.DbDailyTraining.ArenaWin < 30 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekFour < 1)
                        {
                            client.DbDailyTraining.WeekFour += 1;
                            //client.Player.ConquerPoints += 10000;
                            client.Player.Money += 20000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekThree++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(10000)} ConquerPoints and {Role.Core.WriteNumber(20000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the Hard Stage today! Why dont you take a rest and come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 140:
                    {
                        if (client.DbDailyTraining.PremiumPass != 1)
                        {
                            data.AddText("this prize require the premium pass");
                            data.AddOption("Upgrade Pass.", 250);
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            break;
                        }
                        if (client.DbDailyTraining.SwordMaster < 3 ||
                            client.DbDailyTraining.OneGreatBoss < 3 ||
                            client.DbDailyTraining.CityBosses < 5 ||
                            client.DbDailyTraining.NemesisTyrant < 1 ||
                            client.DbDailyTraining.ArenaWin < 30 ||
                            client.DbDailyTraining.ArenaLose < 5)
                        {
                            data.AddText("There are missions you haven't completed yet.");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                            return;
                        }
                        if (client.DbDailyTraining.WeekFour < 2)
                        {
                            client.DbDailyTraining.WeekFour += 1;
                            //client.Player.ConquerPoints += 10000;
                            client.Player.Money += 20000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.DbDailyTraining.TotalCompleteWeekFour++;
                            Database.Server.CountDbDailyTraining++;
                            string str = $"You received {Role.Core.WriteNumber(10000)} ConquerPoints and {Role.Core.WriteNumber(20000000)} Money.";
                            client.CreateBoxDialog(str);
                            client.SendSysMesage(str, MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            data.AddText("You've already completed the WeekFour Stage today! Why dont you take a rest and come back  next month?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(71);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 250:
                    client.SendSysMesage("https://www.dsconquer.com/", MsgMessage.ChatMode.WebSite);
                    break;
            }
        }

        #endregion
        #region Lava Quest
        [Npc(NpcID.LavaQuest)]
        public static void LavaQuest(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            return;
            if (client.Player.LavaTRY == 0)
            {
                data.AddText("------------------------------------------------------\n")
                                .AddText("Sorry, you need to get some rest come back tomorrow..\n")
                                .AddText("------------------------------------------------------")
                                .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                return;
            }
            if (client.Player.Level != 130 && client.Player.Reborn != 2)
            {
                data.AddText("------------------------------------------------------\n")
                              .AddText("Sorry, you need to get level 130\n")
                              .AddText("------------------------------------------------------")
                              .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                return;
            }
            switch (Option)
            {

                case 0:
                    data.AddText("Welcome to [LavaQuest], great warrior, we know you've come a long way to collect the 7 MonstersBalls.\n We're so happy.It's time to relax, the reward is randowm giveaway");
                    data.AddText("\n                # list of Lava rewards #");
                    data.AddText("\n# ------------------------------------------------------- #.");
                    data.AddText("\n    (+3)Stone, (1-H)VIP6, Class5MoneyBag,");
                    data.AddText("\n        MegaDBPack, MegaMetsPack, SuperGemPack,");
                    data.AddText("\n            5xPowerExpBall, (+2)Stone.");
                    data.AddText("\n# ------------------------------------------------------- #.");
                    data.AddOption("Swap~them~please", 1);
                    data.AddOption("i'll~pass.", byte.MaxValue);
                    data.AddAvatar(84).FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.Contain(720300, 1u, 0) && client.Inventory.Contain(720301, 1u, 0) && client.Inventory.Contain(720302, 1u, 0) && client.Inventory.Contain(720303, 1u, 0) && client.Inventory.Contain(720304, 1u, 0) && client.Inventory.Contain(720305, 1u, 0) && client.Inventory.Contain(720306, 1u, 0))
                    {
                        if (client.Inventory.HaveSpace(4))
                        {//720300, 720301, 720302, 720303, 720304, 720305, 720306
                            client.Inventory.Remove(720300, 1u, stream);
                            client.Inventory.Remove(720301, 1u, stream);
                            client.Inventory.Remove(720302, 1u, stream);
                            client.Inventory.Remove(720303, 1u, stream);
                            client.Inventory.Remove(720304, 1u, stream);
                            client.Inventory.Remove(720305, 1u, stream);
                            client.Inventory.Remove(720306, 1u, stream);
                            client.Player.LavaQuest++;
                            client.Player.LavaTRY--;

                            switch ((uint)ServerKernel.NextAsync(1, 7))
                            {
                                case 1u:
                                    {
                                        client.Inventory.Add(stream, 720546, 1, 0, 0, 0);
                                        MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Get MegaDBPack", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                        client.CreateBoxDialog("You've~got~MegaDBPack");
                                        break;
                                    }
                                case 2u:
                                    client.Inventory.Add(stream, 730002u, 2, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Get 2x +2Stone", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~2x~+2Stone");
                                    break;
                                case 3u:
                                    client.Inventory.Add(stream, 730001u, 2, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Get 2x +3Stone", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~2x~+1Stone");
                                    break;
                                case 4u:
                                    client.Inventory.Add(stream, 722057, 3, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Get 3x PowerExpBall", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~PowerExpBall");
                                    break;
                                case 5u:
                                    client.Inventory.Add(stream, 720135, 2, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Get 2xRandom SuperGem", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~SuperGem");
                                    break;
                                case 6u:
                                    client.Inventory.Add(stream, 780010, 1, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Get VIP 1-H", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~SuperGem");
                                    break;
                                case 7u:
                                    client.Inventory.Add(stream, 723717, 1, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Class5Moneybag", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~Class5Moneybag");
                                    break;
                                case 8u:
                                    client.Inventory.Add(stream, 720547, 1, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give MonstersBalls And Get MegaMeteorPack", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~MegaDBPack");
                                    break;
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "accession5");
                        }
                        else
                            client.SendSysMesage("There`s not enough space in your inventory.");
                    }
                    else
                    {
                        data.AddText("I~believe~you've~missed~some~MonstersBalls~or~so,~please~come~again~with~7~MonstersBalls");
                        data.AddOption("Oh, sorry.", byte.MaxValue);
                        data.AddAvatar(84).FinalizeDialog();
                    }
                    break;
            }
        }


        #endregion
        #region HideNSeek
        [NpcAttribute(NpcID.HideNSeek)]
        public static void HideNSeek(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        //byte rand = (byte)Program.GetRandom.Next(0, 3);
                        byte rand = 0;
                        switch (rand)
                        {
                            case 0://cps
                                {
                                    int value = (int)Program.GetRandom.Next(50, 100000);
                                    client.Player.Money += value;
                                    client.CreateBoxDialog("You've received " + value + " ConquerMoney.");
                                    MsgSchedules.SendSysMesage("Congratulations!! " + client.Player.Name + " got " + value.ToString() + " ConquerMoney while found Hide(n)Seek Envoy.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                    break;
                                }
                            case 1://experience
                                {
                                    uint[] Items = new uint[]
                                    {

                            //700013,//DragonGem
                            //700003,//PhoenixGem
                            //700023,//FuryGem
                            //700033,//RainbowGem
                            //700043,//KylinGem
                            //700053,//VioletGem
                            //700063,//MoonGem
                            //720394,//ExpAmrita
                            //722057,//PowerExpBall
                            //720028,//DragonBallScroll
                            //Database.ItemType.DragonBall
                                    };
                                    uint ItemID = Items[Program.GetRandom.Next(0, Items.Length)];
                                    Database.ItemType.DBItem DBItem;
                                    if (Database.Server.ItemsBase.TryGetValue(ItemID, out DBItem))
                                    {
                                        if (client.Inventory.HaveSpace(1))
                                            client.Inventory.Add(stream, DBItem.ID);
                                        else
                                            client.Inventory.AddReturnedItem(stream, DBItem.ID);
                                        MsgSchedules.SendSysMesage("congratulations!! " + client.Player.Name + " got " + DBItem.Name + " while found Hide(n)Seek Envoy.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                    }
                                    break;
                                }
                            //case 2://ConquerPoints
                            //    {
                            //        int value = (int)Program.GetRandom.Next(215, 1075);
                            //        client.Player.ConquerPoints += value;

                            //        client.CreateBoxDialog("You've received " + value + " ConquerPoints.");
                            //        MsgSchedules.SendSysMesage("congratulations!! " + client.Player.Name + " got " + value.ToString() + " ConquerPoints while found Hide(n)Seek Envoy.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                            //        break;
                            //    }
                            case 3://experience
                                {
                                    uint[] Items = new uint[]
                                    {

                            700013,//DragonGem
                            700003,//PhoenixGem
                            700023,//FuryGem
                            700033,//RainbowGem
                            700043,//KylinGem
                            700053,//VioletGem
                            700063,//MoonGem
                            720394,//ExpAmrita
                            722057,//PowerExpBall
                            720028,//DragonBallScroll
                            Database.ItemType.DragonBall
                                    };
                                    uint ItemID = Items[Program.GetRandom.Next(0, Items.Length)];
                                    Database.ItemType.DBItem DBItem;
                                    if (Database.Server.ItemsBase.TryGetValue(ItemID, out DBItem))
                                    {
                                        if (client.Inventory.HaveSpace(1))
                                            client.Inventory.Add(stream, DBItem.ID);
                                        else
                                            client.Inventory.AddReturnedItem(stream, DBItem.ID);
                                        MsgSchedules.SendSysMesage("congratulations!! " + client.Player.Name + " got " + DBItem.Name + " while found Hide(n)Seek Envoy.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);

                                    }
                                    break;
                                }

                        }
                        Game.MsgNpc.Npc _obj;
                        if (client.Map.SearchNpcInScreen((uint)id, client.Player.X, client.Player.Y, out _obj))
                        {
                            client.Map.RemoveNpc(_obj, stream);
                            data.AddText($"I`m the Hide(n)Seek Envoy. You've found me and got the prize!!")
                               .AddOption("Thanks.", 255)
                                .AddAvatar(105)
                                .FinalizeDialog();
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            Role.Core.SendGlobalMessage(stream, $"congratulations!!  {client.Player.Name} has found the Hide(n)Seek Envoy in the Market! Congrats!", MsgMessage.ChatMode.TopLeft);
                            Role.Core.SendGlobalMessage(stream, $"congratulations!!  {client.Player.Name} has found the Hide(n)Seek Envoy in the Market! Congrats!", MsgMessage.ChatMode.Center);
                        }
                        break;
                    }

            }
        }
        #endregion
        #region VIPStorageBook
        [Npc(NpcID.VIPStorageBook)]
        public static void VIPStorageBook(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (client.Player.VipLevel != 6)
                    {
                        dialog.Text("Note: It`ll be available when you are VIP-6");
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                    dialog.Text("Choose your Options from the VIP Book.");
                    dialog.Option("Storage Enable: " + (client.Player.Storage ? "Enabled" : "Disabled"), 1);
                    dialog.Option("Skip ore Enable: " + (client.Player.skipore ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Open Storage", 3);
                    //dialog.Option("Auto Compose", 4);                    

                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 1:
                    client.Player.Storage = !client.Player.Storage;
                    dialog.Text("Choose your Options from the VIP Book.");
                    dialog.Option("Storage Enable: " + (client.Player.Storage ? "Enabled" : "Disabled"), 1);
                    dialog.Option("Skip ore Enable: " + (client.Player.skipore ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Open Storage", 3);
                    //dialog.Option("Auto Compose", 4);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 2:
                    client.Player.skipore = !client.Player.skipore;
                    dialog.Text("Choose your Options from the VIP Book.");
                    dialog.Option("Storage Enable: " + (client.Player.Storage ? "Enabled" : "Disabled"), 1);
                    dialog.Option("Skip ore Enable: " + (client.Player.skipore ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Open Storage", 3);
                    //dialog.Option("Auto Compose", 4);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 3:

                    client.ActiveNpc = 199004;
                    NpcHandler.VIPStorage(client, stream, 0, "", 0);
                    break;
                case 4:

                    client.ActiveNpc = 999991;
                    NpcHandler.AutoCompose(client, stream, 0, "", 0);
                    break;

            }
        }
        #endregion
        #region PackScrolls
        [NpcAttribute(NpcID.VIPStorage)]
        public static void VIPStorage(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    //.AddOption("Store my MeteorScrolls.", 1)//32
                    .AddOption("Retrieve MeteorScrolls.", 10)//5            
                                                             //.AddOption("Store my DbScroll.", 2)//32
                    .AddOption("Retrieve DbScroll.", 20)//5        
                                                        //.AddOption("Store my Gems.", 111)//32
                                                        //.AddOption("Retrieve Stone.", 58)//5                    
                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Store Normal Gems.", 112)//32
                    .AddOption("Store Refined Gems.", 114)//32
                    .AddOption("Store Super Gems.", 116)//32                           
                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                case 112:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Normal[PhoenixGem].", 50)//32
                    .AddOption("Normal[DragonGem].", 51)//32
                    .AddOption("Normal[FuryGem].", 52)//32
                    .AddOption("Normal[RainbowGem].", 53)//32
                    .AddOption("Normal[KylinGem].", 54)//32
                    .AddOption("Normal[VioletGem].", 55)//32
                    .AddOption("Normal[MoonGem].", 56)//32
                    .AddOption("Normal[TortoiseGem].", 57)//32

                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                case 114:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Refined[PhoenixGem].", 30)//32
                    .AddOption("Refined[DragonGem].", 31)//32
                    .AddOption("Refined[FuryGem].", 32)//32
                    .AddOption("Refined[RainbowGem].", 33)//32
                    .AddOption("Refined[KylinGem].", 34)//32
                    .AddOption("Refined[VioletGem].", 35)//32
                    .AddOption("Refined[MoonGem].", 36)//32
                    .AddOption("Refined[TortoiseGem].", 37)//32

                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                case 116:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Super[PhoenixGem].", 40)//32
                    .AddOption("Super[DragonGem].", 41)//32
                    .AddOption("Super[FuryGem].", 42)//32
                    .AddOption("Super[RainbowGem].", 43)//32
                    .AddOption("Super[KylinGem].", 44)//32
                    .AddOption("Super[VioletGem].", 45)//32
                    .AddOption("Super[MoonGem].", 46)//32
                    .AddOption("Super[TortoiseGem].", 47)//32

                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                #region Store
                #region Normal Gem
                #region 50-NPG
                case 50:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700001)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNPhoenixGem + i <= 255)
                            {
                                client.Player.VIPNPhoenixGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700001, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[PhoenixGem]! You have " + client.Player.VIPNPhoenixGem + " Normal[PhoenixGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[PhoenixGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[PhoenixGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 51-NDG
                case 51:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700011)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNDragonGem + i <= 255)
                            {
                                client.Player.VIPNDragonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700011, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[DragonGem]! You have " + client.Player.VIPNDragonGem + " Normal[DragonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[DragonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[DragonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 52-NFG
                case 52:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700021)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNFuryGem + i <= 255)
                            {
                                client.Player.VIPNFuryGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700021, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[FuryGem]! You have " + client.Player.VIPNFuryGem + " Normal[FuryGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[FuryGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[FuryGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 53-NRG
                case 53:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700031)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNRainbowGem + i <= 255)
                            {
                                client.Player.VIPNRainbowGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700031, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[RainbowGem]! You have " + client.Player.VIPNRainbowGem + " Normal[RainbowGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[RainbowGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[RainbowGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 54-NKG
                case 54:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700041)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNKylinGem + i <= 255)
                            {
                                client.Player.VIPNKylinGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700041, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[KylinGem]! You have " + client.Player.VIPNKylinGem + " Normal[KylinGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[KylinGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[KylinGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 55-NVG
                case 55:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700051)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNVioletGem + i <= 255)
                            {
                                client.Player.VIPNVioletGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700051, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[VioletGem]! You have " + client.Player.VIPNVioletGem + " Normal[VioletGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[VioletGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[VioletGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 56-NMG
                case 56:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700061)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNMoonGem + i <= 255)
                            {
                                client.Player.VIPNMoonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700061, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[MoonGem]! You have " + client.Player.VIPNMoonGem + " Normal[MoonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[MoonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[MoonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 57-NTG
                case 57:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700071)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPNTortoiseGem + i <= 255)
                            {
                                client.Player.VIPNTortoiseGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700071, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[TortoiseGem]! You have " + client.Player.VIPNTortoiseGem + " Normal[TortoiseGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[TortoiseGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[TortoiseGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #endregion
                #region Refined Gem
                #region 30-RPG
                case 30:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700002)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRPhoenixGem + i <= 255)
                            {
                                client.Player.VIPRPhoenixGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700002, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[PhoenixGem]! You have " + client.Player.VIPRPhoenixGem + " Refined[PhoenixGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[PhoenixGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[PhoenixGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 31-RDG
                case 31:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700012)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRDragonGem + i <= 255)
                            {
                                client.Player.VIPRDragonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700012, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[DragonGem]! You have " + client.Player.VIPRDragonGem + " Refined[DragonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[DragonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[DragonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 32-RFG
                case 32:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700022)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRFuryGem + i <= 255)
                            {
                                client.Player.VIPRFuryGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700022, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[FuryGem]! You have " + client.Player.VIPRFuryGem + " Refined[FuryGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[FuryGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[FuryGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 33-RRG
                case 33:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700032)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRRainbowGem + i <= 255)
                            {
                                client.Player.VIPRRainbowGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700032, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[RainbowGem]! You have " + client.Player.VIPRRainbowGem + " Refined[RainbowGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[RainbowGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[RainbowGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 34-RKG
                case 34:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700042)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRKylinGem + i <= 255)
                            {
                                client.Player.VIPRKylinGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700042, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[KylinGem]! You have " + client.Player.VIPRKylinGem + " Refined[KylinGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[KylinGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[KylinGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 35-RVG
                case 35:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700052)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRVioletGem + i <= 255)
                            {
                                client.Player.VIPRVioletGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700052, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[VioletGem]! You have " + client.Player.VIPRVioletGem + " Refined[VioletGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[VioletGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[VioletGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 36-RMG
                case 36:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700062)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRMoonGem + i <= 255)
                            {
                                client.Player.VIPRMoonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700062, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[MoonGem]! You have " + client.Player.VIPRMoonGem + " Refined[MoonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[MoonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[MoonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 37-RTG
                case 37:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700072)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPRTortoiseGem + i <= 255)
                            {
                                client.Player.VIPRTortoiseGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700072, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[TortoiseGem]! You have " + client.Player.VIPRTortoiseGem + " Refined[TortoiseGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[TortoiseGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[TortoiseGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #endregion
                #region Super Gem
                #region 30-RPG
                case 40:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700003)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSPhoenixGem + i <= 255)
                            {
                                client.Player.VIPSPhoenixGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700003, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[PhoenixGem]! You have " + client.Player.VIPSPhoenixGem + " Super[PhoenixGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[PhoenixGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[PhoenixGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 31-RDG
                case 41:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700013)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSDragonGem + i <= 255)
                            {
                                client.Player.VIPSDragonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700013, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[DragonGem]! You have " + client.Player.VIPSDragonGem + " Super[DragonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[DragonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[DragonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 32-RFG
                case 42:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700023)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSFuryGem + i <= 255)
                            {
                                client.Player.VIPSFuryGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700023, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[FuryGem]! You have " + client.Player.VIPSFuryGem + " Super[FuryGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[FuryGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[FuryGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 33-RRG
                case 43:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700033)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSRainbowGem + i <= 255)
                            {
                                client.Player.VIPSRainbowGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700033, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[RainbowGem]! You have " + client.Player.VIPSRainbowGem + " Super[RainbowGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[RainbowGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[RainbowGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 34-RKG
                case 44:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700043)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSKylinGem + i <= 255)
                            {
                                client.Player.VIPSKylinGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700043, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[KylinGem]! You have " + client.Player.VIPSKylinGem + " Super[KylinGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[KylinGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[KylinGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 35-RVG
                case 45:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700053)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSVioletGem + i <= 255)
                            {
                                client.Player.VIPSVioletGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700053, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[VioletGem]! You have " + client.Player.VIPSVioletGem + " Super[VioletGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[VioletGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[VioletGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 36-RMG
                case 46:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700063)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSMoonGem + i <= 255)
                            {
                                client.Player.VIPSMoonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700063, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[MoonGem]! You have " + client.Player.VIPSMoonGem + " Super[MoonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[MoonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[MoonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 37-RTG
                case 47:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700073)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPSTortoiseGem + i <= 255)
                            {
                                client.Player.VIPSTortoiseGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700073, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[TortoiseGem]! You have " + client.Player.VIPSTortoiseGem + " Super[TortoiseGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[TortoiseGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[TortoiseGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #endregion
                #endregion
                case 222:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Retrieve Stone +1 Pack.", 58)//5            
                                                             //.AddOption("Retrieve Refined Gems.", 123)//5            
                                                             //.AddOption("Retrieve Super Gems.", 124)//5            

                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                case 122:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Normal[PhoenixGem][" + client.Player.VIPNPhoenixGem + "].", 58)//32
                    .AddOption("Normal[DragonGem][" + client.Player.VIPNDragonGem + "].", 60)//32
                    .AddOption("Normal[FuryGem][" + client.Player.VIPNFuryGem + "].", 62)//32
                    .AddOption("Normal[RainbowGem][" + client.Player.VIPNRainbowGem + "].", 64)//32
                    .AddOption("Normal[KylinGem][" + client.Player.VIPNKylinGem + "].", 66)//32
                    .AddOption("Normal[VioletGem][" + client.Player.VIPNVioletGem + "].", 68)//32
                    .AddOption("Normal[MoonGem][" + client.Player.VIPNMoonGem + "].", 70)//32
                    .AddOption("Normal[TortoiseGem][" + client.Player.VIPNTortoiseGem + "].", 72)//32

                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                case 123:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Refined[PhoenixGem][" + client.Player.VIPRPhoenixGem + "].", 75)//32
                    .AddOption("Refined[DragonGem][" + client.Player.VIPRDragonGem + "].", 77)//32
                    .AddOption("Refined[FuryGem][" + client.Player.VIPRFuryGem + "].", 79)//32
                    .AddOption("Refined[RainbowGem][" + client.Player.VIPRRainbowGem + "].", 81)//32
                    .AddOption("Refined[KylinGem][" + client.Player.VIPRKylinGem + "].", 83)//32
                    .AddOption("Refined[VioletGem][" + client.Player.VIPRVioletGem + "].", 85)//32
                    .AddOption("Refined[MoonGem][" + client.Player.VIPRMoonGem + "].", 87)//32
                    .AddOption("Refined[TortoiseGem][" + client.Player.VIPRTortoiseGem + "].", 89)//32

                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                case 124:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Super[PhoenixGem][" + client.Player.VIPSPhoenixGem + "].", 91)//32
                    .AddOption("Super[DragonGem][" + client.Player.VIPSDragonGem + "].", 93)//32
                    .AddOption("Super[FuryGem][" + client.Player.VIPSFuryGem + "].", 95)//32
                    .AddOption("Super[RainbowGem][" + client.Player.VIPSRainbowGem + "].", 97)//32
                    .AddOption("Super[KylinGem][" + client.Player.VIPSKylinGem + "].", 99)//32
                    .AddOption("Super[VioletGem][" + client.Player.VIPSVioletGem + "].", 101)//32
                    .AddOption("Super[MoonGem][" + client.Player.VIPSMoonGem + "].", 103)//32
                    .AddOption("Super[TortoiseGem][" + client.Player.VIPSTortoiseGem + "].", 105)//32

                    .AddAvatar(325).FinalizeDialog();

                        break;
                    }
                #region Retrieve
                #region Normal[Gem]
                #region Normal[PhoenixGem]
                case 58:
                    {
                        if (client.Player.VIPStone > 0)
                        {
                            data.AddText("How many Stone +1 [Pack] do you want to retrieve? \n\nYou have " + client.Player.VIPStone + " Normal[PhoenixGem] stored!")

                            .AddInput("Stone +1[Pack]:", 59)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Stone +1[Pack] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 59:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPStone >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPStone -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 723712);


                                        data.AddText("You retrieved " + x + " Stone +1[Pack]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Stone +1[Pack] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[DragonGem]
                case 60:
                    {
                        if (client.Player.VIPNDragonGem > 0)
                        {
                            data.AddText("How many Normal[DragonGem] do you want to retrieve? \nYou have " + client.Player.VIPNDragonGem + " Normal[DragonGem] stored!")

                            .AddInput("Normal[DragonGem]:", 61)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[DragonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 61:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPNDragonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPNDragonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700011);


                                        data.AddText("You retrieved " + x + " Normal[DragonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[DragonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[FuryGem]
                case 62:
                    {
                        if (client.Player.VIPNFuryGem > 0)
                        {
                            data.AddText("How many Normal[FuryGem] do you want to retrieve? \nYou have " + client.Player.VIPNFuryGem + " Normal[FuryGem] stored!")

                            .AddInput("Normal[FuryGem]:", 63)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[FuryGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 63:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPNFuryGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPNFuryGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700021);


                                        data.AddText("You retrieved " + x + " Normal[FuryGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[FuryGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[RainbowGem]
                case 64:
                    {
                        if (client.Player.VIPNRainbowGem > 0)
                        {
                            data.AddText("How many Normal[RainbowGem] do you want to retrieve? \nYou have " + client.Player.VIPNRainbowGem + " Normal[RainbowGem] stored!")

                            .AddInput("Normal[RainbowGem]:", 65)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[RainbowGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 65:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPNRainbowGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPNRainbowGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700031);


                                        data.AddText("You retrieved " + x + " Normal[RainbowGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[RainbowGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[KylinGem]
                case 66:
                    {
                        if (client.Player.VIPNKylinGem > 0)
                        {
                            data.AddText("How many Normal[KylinGem] do you want to retrieve? \nYou have " + client.Player.VIPNKylinGem + " Normal[KylinGem] stored!")

                            .AddInput("Normal[KylinGem]:", 67)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[KylinGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 67:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPNKylinGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPNKylinGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700041);


                                        data.AddText("You retrieved " + x + " Normal[KylinGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[KylinGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[VioletGem]
                case 68:
                    {
                        if (client.Player.VIPNVioletGem > 0)
                        {
                            data.AddText("How many Normal[VioletGem] do you want to retrieve? \nYou have " + client.Player.VIPNVioletGem + " Normal[VioletGem] stored!")

                            .AddInput("Normal[VioletGem]:", 69)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[VioletGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 69:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPNVioletGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPNVioletGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700051);


                                        data.AddText("You retrieved " + x + " Normal[VioletGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[VioletGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[MoonGem]
                case 70:
                    {
                        if (client.Player.VIPNMoonGem > 0)
                        {
                            data.AddText("How many Normal[MoonGem] do you want to retrieve? \nYou have " + client.Player.VIPNMoonGem + " Normal[MoonGem] stored!")

                            .AddInput("Normal[MoonGem]:", 71)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[MoonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 71:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPNMoonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPNMoonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700061);


                                        data.AddText("You retrieved " + x + " Normal[MoonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[MoonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[TortoiseGem]
                case 72:
                    {
                        if (client.Player.VIPNTortoiseGem > 0)
                        {
                            data.AddText("How many Normal[TortoiseGem] do you want to retrieve? \nYou have " + client.Player.VIPNTortoiseGem + " Normal[TortoiseGem] stored!")

                            .AddInput("Normal[TortoiseGem]:", 73)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[TortoiseGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 73:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPNTortoiseGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPNTortoiseGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700071);


                                        data.AddText("You retrieved " + x + " Normal[TortoiseGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[TortoiseGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #endregion
                #region Refined[Gem]
                #region Refined[PhoenixGem]
                case 75:
                    {
                        if (client.Player.VIPRPhoenixGem > 0)
                        {
                            data.AddText("How many Refined[PhoenixGem] do you want to retrieve? \nYou have " + client.Player.VIPRPhoenixGem + " Refined[PhoenixGem] stored!")

                            .AddInput("Refined[PhoenixGem]:", 76)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[PhoenixGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 76:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRPhoenixGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRPhoenixGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700002);


                                        data.AddText("You retrieved " + x + " Refined[PhoenixGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[PhoenixGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[DragonGem]
                case 77:
                    {
                        if (client.Player.VIPRDragonGem > 0)
                        {
                            data.AddText("How many Refined[DragonGem] do you want to retrieve? \nYou have " + client.Player.VIPRDragonGem + " Refined[DragonGem] stored!")

                            .AddInput("Refined[DragonGem]:", 78)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[DragonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 78:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRDragonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRDragonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700012);


                                        data.AddText("You retrieved " + x + " Refined[DragonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[DragonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[FuryGem]
                case 79:
                    {
                        if (client.Player.VIPRFuryGem > 0)
                        {
                            data.AddText("How many Refined[FuryGem] do you want to retrieve? \nYou have " + client.Player.VIPRFuryGem + " Refined[FuryGem] stored!")

                            .AddInput("Refined[FuryGem]:", 80)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[FuryGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 80:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRFuryGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRFuryGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700022);


                                        data.AddText("You retrieved " + x + " Refined[FuryGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[FuryGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[RainbowGem]
                case 81:
                    {
                        if (client.Player.VIPRRainbowGem > 0)
                        {
                            data.AddText("How many Refined[RainbowGem] do you want to retrieve? \nYou have " + client.Player.VIPRRainbowGem + " Refined[RainbowGem] stored!")

                            .AddInput("Refined[RainbowGem]:", 82)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[RainbowGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 82:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRRainbowGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRRainbowGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700032);


                                        data.AddText("You retrieved " + x + " Refined[RainbowGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[RainbowGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[KylinGem]
                case 83:
                    {
                        if (client.Player.VIPRKylinGem > 0)
                        {
                            data.AddText("How many Refined[KylinGem] do you want to retrieve? \nYou have " + client.Player.VIPRKylinGem + " Refined[KylinGem] stored!")

                            .AddInput("Refined[KylinGem]:", 84)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[KylinGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 84:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRKylinGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRKylinGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700042);


                                        data.AddText("You retrieved " + x + " Refined[KylinGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[KylinGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[VioletGem]
                case 85:
                    {
                        if (client.Player.VIPRVioletGem > 0)
                        {
                            data.AddText("How many Refined[VioletGem] do you want to retrieve? \nYou have " + client.Player.VIPRVioletGem + " Refined[VioletGem] stored!")

                            .AddInput("Refined[VioletGem]:", 86)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[VioletGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 86:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRVioletGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRVioletGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700052);


                                        data.AddText("You retrieved " + x + " Refined[VioletGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[VioletGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[MoonGem]
                case 87:
                    {
                        if (client.Player.VIPRMoonGem > 0)
                        {
                            data.AddText("How many Refined[MoonGem] do you want to retrieve? \nYou have " + client.Player.VIPRMoonGem + " Refined[MoonGem] stored!")

                            .AddInput("Refined[MoonGem]:", 88)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[MoonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 88:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRMoonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRMoonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700062);


                                        data.AddText("You retrieved " + x + " Refined[MoonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[MoonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[TortoiseGem]
                case 89:
                    {
                        if (client.Player.VIPRTortoiseGem > 0)
                        {
                            data.AddText("How many Refined[TortoiseGem] do you want to retrieve? \nYou have " + client.Player.VIPRTortoiseGem + " Refined[TortoiseGem] stored!")

                            .AddInput("Refined[TortoiseGem]:", 90)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[TortoiseGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 90:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPRTortoiseGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPRTortoiseGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700072);


                                        data.AddText("You retrieved " + x + " Refined[TortoiseGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[TortoiseGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #endregion
                #region Super[Gem]
                #region Super[PhoenixGem]
                case 91:
                    {
                        if (client.Player.VIPSPhoenixGem > 0)
                        {
                            data.AddText("How many Super[PhoenixGem] do you want to retrieve? \nYou have " + client.Player.VIPSPhoenixGem + " Super[PhoenixGem] stored!")

                            .AddInput("Super[PhoenixGem]:", 92)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[PhoenixGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 92:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSPhoenixGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSPhoenixGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700003);


                                        data.AddText("You retrieved " + x + " Super[PhoenixGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[PhoenixGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[DragonGem]
                case 93:
                    {
                        if (client.Player.VIPSDragonGem > 0)
                        {
                            data.AddText("How many Super[DragonGem] do you want to retrieve? \nYou have " + client.Player.VIPSDragonGem + " Super[DragonGem] stored!")

                            .AddInput("Super[DragonGem]:", 94)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[DragonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 94:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSDragonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSDragonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700013);


                                        data.AddText("You retrieved " + x + " Super[DragonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[DragonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[FuryGem]
                case 95:
                    {
                        if (client.Player.VIPSFuryGem > 0)
                        {
                            data.AddText("How many Super[FuryGem] do you want to retrieve? \nYou have " + client.Player.VIPSFuryGem + " Super[FuryGem] stored!")

                            .AddInput("Super[FuryGem]:", 96)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[FuryGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 96:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSFuryGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSFuryGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700023);


                                        data.AddText("You retrieved " + x + " Super[FuryGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[FuryGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[RainbowGem]
                case 97:
                    {
                        if (client.Player.VIPSRainbowGem > 0)
                        {
                            data.AddText("How many Super[RainbowGem] do you want to retrieve? \nYou have " + client.Player.VIPSRainbowGem + " Super[RainbowGem] stored!")

                            .AddInput("Super[RainbowGem]:", 98)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[RainbowGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 98:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSRainbowGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSRainbowGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700033);


                                        data.AddText("You retrieved " + x + " Super[RainbowGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[RainbowGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[KylinGem]
                case 99:
                    {
                        if (client.Player.VIPSKylinGem > 0)
                        {
                            data.AddText("How many Super[KylinGem] do you want to retrieve? \nYou have " + client.Player.VIPSKylinGem + " Super[KylinGem] stored!")

                            .AddInput("Super[KylinGem]:", 100)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[KylinGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 100:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSKylinGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSKylinGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700043);


                                        data.AddText("You retrieved " + x + " Super[KylinGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[KylinGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[VioletGem]
                case 101:
                    {
                        if (client.Player.VIPSVioletGem > 0)
                        {
                            data.AddText("How many Super[VioletGem] do you want to retrieve? \nYou have " + client.Player.VIPSVioletGem + " Super[VioletGem] stored!")

                            .AddInput("Super[VioletGem]:", 102)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[VioletGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 102:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSVioletGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSVioletGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700053);


                                        data.AddText("You retrieved " + x + " Super[VioletGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[VioletGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[MoonGem]
                case 103:
                    {
                        if (client.Player.VIPSMoonGem > 0)
                        {
                            data.AddText("How many Super[MoonGem] do you want to retrieve? \nYou have " + client.Player.VIPSMoonGem + " Super[MoonGem] stored!")

                            .AddInput("Super[MoonGem]:", 104)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[MoonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 104:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSMoonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSMoonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700063);


                                        data.AddText("You retrieved " + x + " Super[MoonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[MoonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[TortoiseGem]
                case 105:
                    {
                        if (client.Player.VIPSTortoiseGem > 0)
                        {
                            data.AddText("How many Super[TortoiseGem] do you want to retrieve? \nYou have " + client.Player.VIPSTortoiseGem + " Super[TortoiseGem] stored!")

                            .AddInput("Super[TortoiseGem]:", 106)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[TortoiseGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 106:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPSTortoiseGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPSTortoiseGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700073);


                                        data.AddText("You retrieved " + x + " Super[TortoiseGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[TortoiseGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #endregion
                #endregion

                case 1:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 720027)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.VIPMetScrolls + i <= 255)
                            {
                                client.Player.VIPMetScrolls += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(720027, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " MeteorScrolls! You have " + client.Player.VIPMetScrolls + " MeteorScrolls stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 MetScrolls stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any MeteorScrolls!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.VIPMetScrolls > 0)
                        {
                            data.AddText("How many MeteorScrolls do you want to retrieve? You have " + client.Player.VIPMetScrolls + " MeteorScrolls stored!")

                            .AddInput("MeteorScrolls:", 11)
                            .AddAvatar(325).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any MeteorScrolls stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(325).FinalizeDialog();
                        }

                        break;
                    }
                case 11:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.VIPMetScrolls >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.VIPMetScrolls -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 720027);


                                        data.AddText("You retrieved " + x + " MeteorScrolls!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough MeteorScrolls stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(325).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        byte ix = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 720028)
                                ix++;
                        }
                        if (ix > 0)
                        {
                            if (client.Player.VIPDBscrolls + ix <= 255)
                            {
                                client.Player.VIPDBscrolls += ix;
                                for (int jx = 0; jx < ix; jx++)
                                    client.Inventory.Remove(720028, ix, stream);

                                client.SendSysMesage("You successfully stored " + ix + " DBscrolls! You have " + client.Player.VIPDBscrolls + " DBscrolls stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 DBscrolls stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any DBscrolls!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                case 20:
                    {
                        if (client.Player.VIPDBscrolls > 0)
                        {
                            data.AddText("How many DBscrolls do you want to retrieve? You have " + client.Player.VIPDBscrolls + " DBscrolls stored!")

                            .AddInput("DBscrolls:", 21)
                            .AddAvatar(325).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any DBscrolls stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(325).FinalizeDialog();
                        }

                        break;
                    }
                case 21:
                    {

                        byte o;
                        if (byte.TryParse(Input, out o))
                        {
                            if (o > 0)
                            {
                                if (client.Player.VIPDBscrolls >= o)
                                {
                                    if (client.Inventory.HaveSpace(o))
                                    {
                                        client.Player.VIPDBscrolls -= o;
                                        for (byte ix = 0; ix < o; ix++)
                                            client.Inventory.Add(stream, 720028);


                                        data.AddText("You retrieved " + o + " DBscrolls!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(325).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(325).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough DBscrolls stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(325).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(325).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(325).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        #endregion
        #region Exterminator quest citys
        [NpcAttribute(NpcID.Exterminator)]
        public static void Exterminator(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, adventurer! Hope you’re doing great. Let me tell you about our exciting Hunting Quests!");
                        data.AddText("\n------- How It Works ------");
                        data.AddText("\nEach city hides a special key. Find the key in a city to complete that stage and move to the next one.");
                        data.AddText("\nCollect all 5 unique cards from the cities to earn amazing rewards!");
                        data.AddText("\n-----------------REWARDS----------------------");
                        data.AddText("\n• 2x (+3) Stone");
                        data.AddText("\n• 3x Class 5 Money Bag");
                        data.AddText("\n• 2x MegaDBPack");
                        data.AddText("\n• 3x MegaMetsPack");
                        data.AddText("\n• 5x PowerExpBall");
                        data.AddText("\n• 1x (1-Day) VIP6 Access");
                        data.AddOption("TwinCity Stage", 1);
                        data.AddOption("PhoenixCity Stage", 4);
                        data.AddOption("ApeCity Stage", 7);
                        data.AddOption("DesertCity Stage", 10);
                        data.AddOption("BirdCity Stage", 13);
                        data.AddOption("Exchange Cards", 160);
                        data.AddOption("I'll think it over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();

                        break;
                    }
                #region reward information
                case 160:
                    {
                        //data.AddText($"Hello {client.Player.Name}, this is the weekly quest I will tell you about it we have 6 stages TC/Phonix/Ape/Desert/bird and the Mystic Castle");
                        data.AddText("\n            # Each City has a secret card #");
                        data.AddText("\nevery key you found, this means u compelete the stage and u ready for the next one.");
                        data.AddText("\nonce you have the 5 type of card you can get your awsome rewards.");
                        data.AddText("\n                # all cites rewards #");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddText("\n    (+5)Stone, 2x(Super)TortoiseGem, 5xClass5MoneyBag,");
                        data.AddText("\n        2xMegaDBPack, 3xMegaMetsPack, 3xUltimatePack,");
                        data.AddText("\n            5xPowerExpBall, 1x(1-Day)VIP6.");
                        data.AddText("\n# ------------------------------------------------------- #.");
                        data.AddOption("Claim", 161);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                #endregion
                #region reward
                case 161:
                    {
                        if (client.Inventory.HaveSpace(22))
                        {
                            if (client.Inventory.Contain(720279, 1) && client.Inventory.Contain(720280, 1) && client.Inventory.Contain(720281, 1)
                            && client.Inventory.Contain(720282, 1) && client.Inventory.Contain(720283, 1))
                            {
                                client.Inventory.Remove(720279, 1, stream);
                                client.Inventory.Remove(720280, 1, stream);
                                client.Inventory.Remove(720281, 1, stream);
                                client.Inventory.Remove(720282, 1, stream);
                                client.Inventory.Remove(720283, 1, stream);
                                Struct.DbKillMobsExterminator.Reward(client, 1001);
                            }
                        }
                        else
                            client.SendSysMesage("There`s not enough space (22) in your inventory.");
                        break;
                    }
                #endregion
                #region T.C Stage

                case 1:
                    {
                        if (client.DbKillMobsExterminator.TwinTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of T.C Stage times today! Why dont you take adventure for next city");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        data.AddText("Let's see... You've killed "
                            + "\n" + client.DbKillMobsExterminator.TCMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} TwinCity Mobs.");
                        //+ "\n" + client.DbKillMobsExterminator.Turtledove + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Turtledove."
                        //+ "\n" + client.DbKillMobsExterminator.Robin + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Robin."
                        //+ "\n" + client.DbKillMobsExterminator.Apparition + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Apparition."
                        //+ "\n" + client.DbKillMobsExterminator.Poltergeist + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Poltergeist.");

                        if ((client.DbKillMobsExterminator.TCMobs < Struct.DbKillMobsExterminator.MaxKillsTwin))
                            //|| (client.DbKillMobsExterminator.Turtledove < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            //|| (client.DbKillMobsExterminator.Robin < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            //|| (client.DbKillMobsExterminator.Apparition < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            //|| (client.DbKillMobsExterminator.Poltergeist < Struct.DbKillMobsExterminator.MaxKillsTwin))
                            data.AddOption("Send me there.", 2);
                        //data.AddOption("Claim my prize.", 3);
                        data.AddOption("I`ll~think~it~over.", 255);
                        data.AddAvatar(60);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.DbKillMobsExterminator.TwinTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of T.C Stage times today! Why dont you take adventure for next city?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        client.Teleport(405, 450, 1002);
                        break;
                    }
                case 3:
                    {
                        if (client.DbKillMobsExterminator.TwinTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of T.C Stage times today! Why dont you take adventure for next city?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        if ((client.DbKillMobsExterminator.TCMobs < Struct.DbKillMobsExterminator.MaxKillsTwin))
                        //|| (client.DbKillMobsExterminator.Turtledove < Struct.DbKillMobsExterminator.MaxKillsTwin)
                        //|| (client.DbKillMobsExterminator.Robin < Struct.DbKillMobsExterminator.MaxKillsTwin)
                        //|| (client.DbKillMobsExterminator.Apparition < Struct.DbKillMobsExterminator.MaxKillsTwin)
                        //|| (client.DbKillMobsExterminator.Poltergeist < Struct.DbKillMobsExterminator.MaxKillsTwin))
                        {
                            data.AddText("Sorry, you've only killed: ");
                            if (client.DbKillMobsExterminator.TCMobs < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            {
                                data.AddText("\n-" + client.DbKillMobsExterminator.TCMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} TwinCity Mobs..");
                            }
                            //if (client.DbKillMobsExterminator.Turtledove < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.Turtledove + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Turtledove.");
                            //}
                            //if (client.DbKillMobsExterminator.Robin < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.Robin + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Robin, ");
                            //}
                            //if (client.DbKillMobsExterminator.Apparition < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.Apparition + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Apparition.");
                            //}
                            //if (client.DbKillMobsExterminator.Poltergeist < Struct.DbKillMobsExterminator.MaxKillsTwin)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.Poltergeist + $"/{Struct.DbKillMobsExterminator.MaxKillsTwin} Poltergeist.");
                            //}
                            data.AddText($"\nYou need to kill {Struct.DbKillMobsExterminator.MaxKillsTwin} to get your reward.");
                            data.AddOption("Send me there.", 2);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                             if (client.Inventory.HaveSpace(10))
                        {
                            Struct.DbKillMobsExterminator.Reward(client, 1002);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (10) in your inventory.");

                        break;
                    }

                #endregion T.C Stage

                #region Phonix Stage

                case 4:
                    {
                        if (DateTime.Now.DayOfWeek >= DayOfWeek.Sunday && DateTime.Now.DayOfWeek <= DayOfWeek.Friday)
                        {
                            if (client.DbKillMobsExterminator.PhoenixTimes >= 1)
                            {
                                data.AddText("You've already exterminated a bunch of Phonix Stage times today! Why not take adventure for next city");
                                data.AddOption("Alright", 255);
                                data.AddAvatar(60);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Let's see... You've killed: "
                                + "\n" + client.DbKillMobsExterminator.PCMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} Phoenix castle Mobs.");
                            //+ "\n" + client.DbKillMobsExterminator.Bandit + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} Bandit."
                            //+ "\n" + client.DbKillMobsExterminator.Ratling + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} Ratling."
                            //+ "\n" + client.DbKillMobsExterminator.FireSpirit + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} FireSpirit.");

                            if ((client.DbKillMobsExterminator.PCMobs < Struct.DbKillMobsExterminator.MaxKillsPhoenix))
                                //|| (client.DbKillMobsExterminator.Bandit < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                                //|| (client.DbKillMobsExterminator.Ratling < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                                //|| (client.DbKillMobsExterminator.FireSpirit < Struct.DbKillMobsExterminator.MaxKillsPhoenix))
                                data.AddOption("Send me there.", 5);
                            //data.AddOption("Claim my prize.", 6);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I'm sorry, you can come from Sunday to Friday.");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.DbKillMobsExterminator.PhoenixTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Phonix Stage times today! Why not take a break from slaying and come back later?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        client.Teleport(216, 328, 1011);
                        break;
                    }
                case 6:
                    {
                        if (client.DbKillMobsExterminator.PhoenixTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Phonix Stage times today! Why not take a break adventure for next city?");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        if ((client.DbKillMobsExterminator.PCMobs < Struct.DbKillMobsExterminator.MaxKillsPhoenix))
                        //|| (client.DbKillMobsExterminator.Bandit < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                        //|| (client.DbKillMobsExterminator.Ratling < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                        //|| (client.DbKillMobsExterminator.FireSpirit < Struct.DbKillMobsExterminator.MaxKillsPhoenix))
                        {
                            data.AddText("Sorry, you've only killed: ");
                            if (client.DbKillMobsExterminator.PCMobs < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                            {
                                data.AddText("\n-" + client.DbKillMobsExterminator.PCMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} Phoenix castle Mobs.");
                            }
                            //if (client.DbKillMobsExterminator.Bandit < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.Bandit + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} Bandit.");
                            //}
                            //if (client.DbKillMobsExterminator.Ratling < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.Ratling + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} Ratling.");
                            //}
                            //if (client.DbKillMobsExterminator.FireSpirit < Struct.DbKillMobsExterminator.MaxKillsPhoenix)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.FireSpirit + $"/{Struct.DbKillMobsExterminator.MaxKillsPhoenix} FireSpirit.");
                            //}
                            data.AddText($"\nYou need to kill {Struct.DbKillMobsExterminator.MaxKillsPhoenix} for a reward.");
                            data.AddOption("Send me there.", 5);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                             if (client.Inventory.HaveSpace(13))
                        {
                            Struct.DbKillMobsExterminator.Reward(client, 1011);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (13) in your inventory.");
                        break;
                    }

                #endregion Phonix Stage

                #region Ape Stage

                case 7:
                    {
                        if (DateTime.Now.DayOfWeek >= DayOfWeek.Monday && DateTime.Now.DayOfWeek <= DayOfWeek.Friday)
                        {
                            if (client.DbKillMobsExterminator.ApeTimes >= 1)
                            {
                                data.AddText("You've already exterminated a bunch of Ape Stage times today! Why not take adventure for next city");
                                data.AddOption("Alright", 255);
                                data.AddAvatar(60);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Let's see... You've killed: "
                            + "\n" + client.DbKillMobsExterminator.ACMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} Phoenix castle Mobs.");
                            //+ "\n" + client.DbKillMobsExterminator.GiantApe + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} GiantApe."
                            //+ "\n" + client.DbKillMobsExterminator.ThunderApe + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} ThunderApe."
                            //+ "\n" + client.DbKillMobsExterminator.Snakeman + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} Snakeman.");

                            if ((client.DbKillMobsExterminator.ACMobs < Struct.DbKillMobsExterminator.MaxKillsApe))
                                //|| (client.DbKillMobsExterminator.GiantApe < Struct.DbKillMobsExterminator.MaxKillsApe)
                                //|| (client.DbKillMobsExterminator.ThunderApe < Struct.DbKillMobsExterminator.MaxKillsApe)
                                //|| (client.DbKillMobsExterminator.Snakeman < Struct.DbKillMobsExterminator.MaxKillsApe))
                                data.AddOption("Send me there.", 8);
                            //data.AddOption("Claim my prize.", 9);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I'm sorry, you can come from Monday to Friday.");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.DbKillMobsExterminator.ApeTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Ape Stage times today! Why not take adventure for next city");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        client.Teleport(602, 588, 1020);
                        break;
                    }
                case 9:
                    {
                        if (client.DbKillMobsExterminator.ApeTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Ape Stage times today! Why not take adventure for next city");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        if ((client.DbKillMobsExterminator.ACMobs < Struct.DbKillMobsExterminator.MaxKillsApe))
                        //|| (client.DbKillMobsExterminator.GiantApe < Struct.DbKillMobsExterminator.MaxKillsApe)
                        //|| (client.DbKillMobsExterminator.ThunderApe < Struct.DbKillMobsExterminator.MaxKillsApe)
                        //|| (client.DbKillMobsExterminator.Snakeman < Struct.DbKillMobsExterminator.MaxKillsApe))
                        {
                            data.AddText("Sorry, you've only killed: ");
                            if (client.DbKillMobsExterminator.ACMobs < Struct.DbKillMobsExterminator.MaxKillsApe)
                            {
                                data.AddText("\n-" + client.DbKillMobsExterminator.ACMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} Phoenix castle Mobs.");
                            }
                            //if (client.DbKillMobsExterminator.GiantApe < Struct.DbKillMobsExterminator.MaxKillsApe)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.GiantApe + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} GiantApe.");
                            //}
                            //if (client.DbKillMobsExterminator.ThunderApe < Struct.DbKillMobsExterminator.MaxKillsApe)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.ThunderApe + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} ThunderApe.");
                            //}
                            //if (client.DbKillMobsExterminator.Snakeman < Struct.DbKillMobsExterminator.MaxKillsApe)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.Snakeman + $"/{Struct.DbKillMobsExterminator.MaxKillsApe} Snakeman.");
                            //}
                            data.AddText($"\nYou need to kill {Struct.DbKillMobsExterminator.MaxKillsApe} for a reward.");
                            data.AddOption("Send me there.", 8);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                             if (client.Inventory.HaveSpace(16))
                        {
                            Struct.DbKillMobsExterminator.Reward(client, 1020);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (16) in your inventory.");
                        break;
                    }

                #endregion Ape Stage

                #region Desert Stage

                case 10:
                    {
                        if (DateTime.Now.DayOfWeek >= DayOfWeek.Tuesday && DateTime.Now.DayOfWeek <= DayOfWeek.Friday)
                        {
                            if (client.DbKillMobsExterminator.DesertTimes >= 1)
                            {
                                data.AddText("You've already exterminated a bunch of Desert Stage times today! Why not take adventure for next city");
                                data.AddOption("Alright", 255);
                                data.AddAvatar(60);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Let's see... You've killed: "
                            + "\n" + client.DbKillMobsExterminator.DCMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} Desert castle Mobs.");
                            //+ "\n" + client.DbKillMobsExterminator.HillMonster + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} HillMonster."
                            //+ "\n" + client.DbKillMobsExterminator.RockMonster + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} RockMonster."
                            //+ "\n" + client.DbKillMobsExterminator.BladeGhost + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} BladeGhost.");

                            if ((client.DbKillMobsExterminator.DCMobs < Struct.DbKillMobsExterminator.MaxKillsDesert))
                                //|| (client.DbKillMobsExterminator.HillMonster < Struct.DbKillMobsExterminator.MaxKillsDesert)
                                //|| (client.DbKillMobsExterminator.RockMonster < Struct.DbKillMobsExterminator.MaxKillsDesert)
                                //|| (client.DbKillMobsExterminator.BladeGhost < Struct.DbKillMobsExterminator.MaxKillsDesert))
                                data.AddOption("Send me there.", 11);
                            //data.AddOption("Claim my prize.", 12);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I'm sorry, you can come from Tuesday to Friday.");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.DbKillMobsExterminator.DesertTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Desert Stage times today! Why not take adventure for next city");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        client.Teleport(566, 648, 1000);
                        break;
                    }
                case 12:
                    {
                        if (client.DbKillMobsExterminator.DesertTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Desert Stage times today! Why not take adventure for next city");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        if ((client.DbKillMobsExterminator.DCMobs < Struct.DbKillMobsExterminator.MaxKillsDesert))
                        //|| (client.DbKillMobsExterminator.HillMonster < Struct.DbKillMobsExterminator.MaxKillsDesert)
                        //|| (client.DbKillMobsExterminator.RockMonster < Struct.DbKillMobsExterminator.MaxKillsDesert)
                        //|| (client.DbKillMobsExterminator.BladeGhost < Struct.DbKillMobsExterminator.MaxKillsDesert))
                        {
                            data.AddText("Sorry, you've only killed: ");
                            if (client.DbKillMobsExterminator.DCMobs < Struct.DbKillMobsExterminator.MaxKillsDesert)
                            {
                                data.AddText("\n-" + client.DbKillMobsExterminator.DCMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} Desert castle Mobs.");
                            }
                            //if (client.DbKillMobsExterminator.HillMonster < Struct.DbKillMobsExterminator.MaxKillsDesert)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.HillMonster + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} HillMonster.");
                            //}
                            //if (client.DbKillMobsExterminator.RockMonster < Struct.DbKillMobsExterminator.MaxKillsDesert)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.RockMonster + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} RockMonster.");
                            //}
                            //if (client.DbKillMobsExterminator.BladeGhost < Struct.DbKillMobsExterminator.MaxKillsDesert)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.BladeGhost + $"/{Struct.DbKillMobsExterminator.MaxKillsDesert} BladeGhost.");
                            //}
                            data.AddText($"\nYou need to kill {Struct.DbKillMobsExterminator.MaxKillsDesert} for a reward.");
                            data.AddOption("Send me there.", 11);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                             if (client.Inventory.HaveSpace(12))
                        {
                            Struct.DbKillMobsExterminator.Reward(client, 1000);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (12) in your inventory."); break;
                    }

                #endregion Desert Stage

                #region Bird Stage

                case 13:
                    {
                        if (DateTime.Now.DayOfWeek >= DayOfWeek.Wednesday && DateTime.Now.DayOfWeek <= DayOfWeek.Friday)
                        {
                            if (client.DbKillMobsExterminator.BirdTimes >= 1)
                            {
                                data.AddText("You've already exterminated a bunch of Bird Stage times today! Why not take adventure for next city");
                                data.AddOption("Alright", 255);
                                data.AddAvatar(60);
                                data.FinalizeDialog();
                                break;
                            }
                            data.AddText("Let's see... You've killed: "
                            + "\n" + client.DbKillMobsExterminator.BIMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} Bird city Mobs.");
                            //+ "\n" + client.DbKillMobsExterminator.HawKing + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} HawKing."
                            //+ "\n" + client.DbKillMobsExterminator.BanditL97 + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} BanditL97."
                            //+ "\n" + client.DbKillMobsExterminator.SeniorBandit + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} Banditti.");

                            if ((client.DbKillMobsExterminator.BIMobs < Struct.DbKillMobsExterminator.MaxKillsBird))
                                //|| (client.DbKillMobsExterminator.HawKing < Struct.DbKillMobsExterminator.MaxKillsBird)
                                //|| (client.DbKillMobsExterminator.BanditL97 < Struct.DbKillMobsExterminator.MaxKillsBird)
                                //|| (client.DbKillMobsExterminator.SeniorBandit < Struct.DbKillMobsExterminator.MaxKillsBird))
                                data.AddOption("Send me there.", 14);
                            //data.AddOption("Claim my prize.", 15);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I'm sorry, you can come from Wednesday to Friday.");
                            data.AddOption("Alright.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.DbKillMobsExterminator.BirdTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Bird Stage times today! Why not take adventure for next city");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        client.Teleport(739, 655, 1015);
                        break;
                    }
                case 15:
                    {
                        if (client.DbKillMobsExterminator.BirdTimes >= 1)
                        {
                            data.AddText("You've already exterminated a bunch of Bird Stage times today! Why not take adventure for next city");
                            data.AddOption("Alright", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                            break;
                        }
                        if ((client.DbKillMobsExterminator.BIMobs < Struct.DbKillMobsExterminator.MaxKillsBird))
                        //&& (client.DbKillMobsExterminator.HawKing < Struct.DbKillMobsExterminator.MaxKillsBird)
                        //&& (client.DbKillMobsExterminator.BanditL97 < Struct.DbKillMobsExterminator.MaxKillsBird)
                        //&& (client.DbKillMobsExterminator.SeniorBandit < Struct.DbKillMobsExterminator.MaxKillsBird))
                        {
                            data.AddText("Sorry, you've only killed: ");
                            if (client.DbKillMobsExterminator.BIMobs < Struct.DbKillMobsExterminator.MaxKillsBird)
                            {
                                data.AddText("\n-" + client.DbKillMobsExterminator.BIMobs + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} Bird city Mobs.");
                            }
                            //if (client.DbKillMobsExterminator.HawKing < Struct.DbKillMobsExterminator.MaxKillsBird)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.HawKing + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} HawKing.");
                            //}
                            //if (client.DbKillMobsExterminator.BanditL97 < Struct.DbKillMobsExterminator.MaxKillsBird)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.BanditL97 + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} BanditL97.");
                            //}
                            //if (client.DbKillMobsExterminator.SeniorBandit < Struct.DbKillMobsExterminator.MaxKillsBird)
                            //{
                            //    data.AddText("\n-" + client.DbKillMobsExterminator.SeniorBandit + $"/{Struct.DbKillMobsExterminator.MaxKillsBird} Banditti.");
                            //}
                            data.AddText($"\nYou need to kill {Struct.DbKillMobsExterminator.MaxKillsBird} for a reward.");
                            data.AddOption("Send me there.", 14);
                            data.AddOption("I`ll~think~it~over.", 255);
                            data.AddAvatar(60);
                            data.FinalizeDialog();
                        }
                        else
                             if (client.Inventory.HaveSpace(13))
                        {
                            Struct.DbKillMobsExterminator.Reward(client, 1015);
                        }
                        else
                            client.SendSysMesage("There`s not enough space (13) in your inventory."); break;
                    }

                    #endregion Bird Stage


            }
        }
        #endregion
        #region FindTheBox
        [NpcAttribute(NpcID.FindTheBox)]
        public static void FindTheBox(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Mrs. Qian is goint to open her treasury to the public,\n")
                        .AddText("lucky heroes can take away her treasures for free, During the event,\n")
                        .AddText("if you open the Wealth Chests to a certain amount, you will get a Stage Reward. ")
                   .AddOption("Sign~me~up", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CurrentTournament.Type == MsgTournaments.TournamentType.FindTheBox)
                        {
                            if (!Game.MsgTournaments.MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
           .AddOption("I see. ", 255)
           .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }
        #endregion
        #region AdventureAreaExit
        [Npc(NpcID.AdventureAreaExit)]
        public static void AdventureAreaExit(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Do you want to leave the AdventureArea? I can teleport you for free.");
                    data.AddOption("TwinCity.", 1);
                    data.AddOption("Market.", 2);
                    //data.AddOption("GreenSnake Quest.", 3);
                    //data.AddOption("CleanWater Quest.", 4);
                    data.AddOption("No,I shall stay here.", byte.MaxValue);
                    //data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(105);
                    data.FinalizeDialog();
                    break;
                case 1:
                    {
                        client.Teleport(428, 378, 1002);
                    }
                    break;
                case 2:
                    {
                        client.Teleport(222, 196, 1036);
                    }
                    break;

            }
        }

        #endregion
        #region AdventureArea
        [Npc(NpcID.AdventureArea)]
        public static void AdventureArea(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Welcome! This path leads to the Meteor and Adventure areas.");
                    data.AddText("In these areas, you'll encounter fierce monsters that have the potential to drop valuable items.");
                    data.AddText("Keep an eye out for special monsters that look identical to the normal ones.");
                    data.AddText("These special monsters might drop rare items like Meteors or DragonBalls. Ready for the challenge?");
                    data.AddOption("MeteorDove.", 1);
                    data.AddOption("Adventure Area.", 2);
                    data.AddOption("GreenSnake Quest.", 3);
                    data.AddOption("CleanWater Quest.", 4);
                    data.AddOption("FrozenGrotto Area.", 5);
                    data.AddOption("No,I shall stay here.", byte.MaxValue);
                    //data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(105);
                    data.FinalizeDialog();
                    break;
                case 1:
                    {
                        client.Teleport(1039, 718, 1210);
                    }
                    break;
                case 2:
                    {
                        client.Teleport(542, 558, 1217);
                    }
                    break;
                case 3:
                    {
                        client.Teleport(681, 963, 1015);
                    }
                    break;
                case 4:
                    {
                        client.Teleport(517, 735, 1212);
                    }
                    break;
                case 5:
                    {
                        client.Teleport(300, 300, 2056);
                    }
                    break;
            }
        }

        #endregion
        #region PackScrolls
        [NpcAttribute(NpcID.PackScrolls)]
        public static void PackScrolls(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Store my MeteorScrolls.", 1)//32
                    .AddOption("Retrieve MeteorScrolls.", 10)//5            
                    .AddOption("Store my DbScroll.", 2)//32
                    .AddOption("Retrieve DbScroll.", 20)//5        
                    .AddOption("Store my Gems.", 111)//32
                    .AddOption("Retrieve Gems.", 222)//5                    
                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Store Normal Gems.", 112)//32
                    .AddOption("Store Refined Gems.", 114)//32
                    .AddOption("Store Super Gems.", 116)//32                           
                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 112:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Normal[PhoenixGem].", 50)//32
                    .AddOption("Normal[DragonGem].", 51)//32
                    .AddOption("Normal[FuryGem].", 52)//32
                    .AddOption("Normal[RainbowGem].", 53)//32
                    .AddOption("Normal[KylinGem].", 54)//32
                    .AddOption("Normal[VioletGem].", 55)//32
                    .AddOption("Normal[MoonGem].", 56)//32
                    .AddOption("Normal[TortoiseGem].", 57)//32

                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 114:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Refined[PhoenixGem].", 30)//32
                    .AddOption("Refined[DragonGem].", 31)//32
                    .AddOption("Refined[FuryGem].", 32)//32
                    .AddOption("Refined[RainbowGem].", 33)//32
                    .AddOption("Refined[KylinGem].", 34)//32
                    .AddOption("Refined[VioletGem].", 35)//32
                    .AddOption("Refined[MoonGem].", 36)//32
                    .AddOption("Refined[TortoiseGem].", 37)//32

                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 116:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Super[PhoenixGem].", 40)//32
                    .AddOption("Super[DragonGem].", 41)//32
                    .AddOption("Super[FuryGem].", 42)//32
                    .AddOption("Super[RainbowGem].", 43)//32
                    .AddOption("Super[KylinGem].", 44)//32
                    .AddOption("Super[VioletGem].", 45)//32
                    .AddOption("Super[MoonGem].", 46)//32
                    .AddOption("Super[TortoiseGem].", 47)//32

                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                #region Store
                #region Normal Gem
                #region 50-NPG
                case 50:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700001)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NPhoenixGem + i <= 255)
                            {
                                client.Player.NPhoenixGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700001, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[PhoenixGem]! You have " + client.Player.NPhoenixGem + " Normal[PhoenixGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[PhoenixGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[PhoenixGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 51-NDG
                case 51:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700011)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NDragonGem + i <= 255)
                            {
                                client.Player.NDragonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700011, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[DragonGem]! You have " + client.Player.NDragonGem + " Normal[DragonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[DragonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[DragonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 52-NFG
                case 52:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700021)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NFuryGem + i <= 255)
                            {
                                client.Player.NFuryGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700021, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[FuryGem]! You have " + client.Player.NFuryGem + " Normal[FuryGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[FuryGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[FuryGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 53-NRG
                case 53:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700031)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NRainbowGem + i <= 255)
                            {
                                client.Player.NRainbowGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700031, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[RainbowGem]! You have " + client.Player.NRainbowGem + " Normal[RainbowGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[RainbowGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[RainbowGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 54-NKG
                case 54:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700041)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NKylinGem + i <= 255)
                            {
                                client.Player.NKylinGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700041, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[KylinGem]! You have " + client.Player.NKylinGem + " Normal[KylinGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[KylinGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[KylinGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 55-NVG
                case 55:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700051)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NVioletGem + i <= 255)
                            {
                                client.Player.NVioletGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700051, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[VioletGem]! You have " + client.Player.NVioletGem + " Normal[VioletGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[VioletGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[VioletGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 56-NMG
                case 56:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700061)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NMoonGem + i <= 255)
                            {
                                client.Player.NMoonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700061, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[MoonGem]! You have " + client.Player.NMoonGem + " Normal[MoonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[MoonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[MoonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 57-NTG
                case 57:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700071)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.NTortoiseGem + i <= 255)
                            {
                                client.Player.NTortoiseGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700071, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Normal[TortoiseGem]! You have " + client.Player.NTortoiseGem + " Normal[TortoiseGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Normal[TortoiseGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Normal[TortoiseGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #endregion
                #region Refined Gem
                #region 30-RPG
                case 30:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700002)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RPhoenixGem + i <= 255)
                            {
                                client.Player.RPhoenixGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700002, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[PhoenixGem]! You have " + client.Player.RPhoenixGem + " Refined[PhoenixGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[PhoenixGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[PhoenixGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 31-RDG
                case 31:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700012)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RDragonGem + i <= 255)
                            {
                                client.Player.RDragonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700012, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[DragonGem]! You have " + client.Player.RDragonGem + " Refined[DragonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[DragonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[DragonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 32-RFG
                case 32:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700022)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RFuryGem + i <= 255)
                            {
                                client.Player.RFuryGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700022, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[FuryGem]! You have " + client.Player.RFuryGem + " Refined[FuryGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[FuryGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[FuryGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 33-RRG
                case 33:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700032)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RRainbowGem + i <= 255)
                            {
                                client.Player.RRainbowGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700032, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[RainbowGem]! You have " + client.Player.RRainbowGem + " Refined[RainbowGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[RainbowGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[RainbowGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 34-RKG
                case 34:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700042)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RKylinGem + i <= 255)
                            {
                                client.Player.RKylinGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700042, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[KylinGem]! You have " + client.Player.RKylinGem + " Refined[KylinGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[KylinGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[KylinGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 35-RVG
                case 35:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700052)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RVioletGem + i <= 255)
                            {
                                client.Player.RVioletGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700052, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[VioletGem]! You have " + client.Player.RVioletGem + " Refined[VioletGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[VioletGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[VioletGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 36-RMG
                case 36:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700062)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RMoonGem + i <= 255)
                            {
                                client.Player.RMoonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700062, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[MoonGem]! You have " + client.Player.RMoonGem + " Refined[MoonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[MoonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[MoonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 37-RTG
                case 37:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700072)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.RTortoiseGem + i <= 255)
                            {
                                client.Player.RTortoiseGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700072, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Refined[TortoiseGem]! You have " + client.Player.RTortoiseGem + " Refined[TortoiseGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Refined[TortoiseGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Refined[TortoiseGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #endregion
                #region Super Gem
                #region 30-RPG
                case 40:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700003)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.SPhoenixGem + i <= 255)
                            {
                                client.Player.SPhoenixGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700003, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[PhoenixGem]! You have " + client.Player.SPhoenixGem + " Super[PhoenixGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[PhoenixGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[PhoenixGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 31-RDG
                case 41:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700013)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.SDragonGem + i <= 255)
                            {
                                client.Player.SDragonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700013, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[DragonGem]! You have " + client.Player.SDragonGem + " Super[DragonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[DragonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[DragonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 32-RFG
                case 42:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700023)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.SFuryGem + i <= 255)
                            {
                                client.Player.SFuryGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700023, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[FuryGem]! You have " + client.Player.SFuryGem + " Super[FuryGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[FuryGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[FuryGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 33-RRG
                case 43:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700033)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.SRainbowGem + i <= 255)
                            {
                                client.Player.SRainbowGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700033, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[RainbowGem]! You have " + client.Player.SRainbowGem + " Super[RainbowGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[RainbowGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[RainbowGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 34-RKG
                case 44:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700043)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.SKylinGem + i <= 255)
                            {
                                client.Player.SKylinGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700043, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[KylinGem]! You have " + client.Player.SKylinGem + " Super[KylinGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[KylinGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[KylinGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 35-RVG
                case 45:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700053)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.SVioletGem + i <= 255)
                            {
                                client.Player.SVioletGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700053, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[VioletGem]! You have " + client.Player.SVioletGem + " Super[VioletGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[VioletGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[VioletGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 36-RMG
                case 46:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700063)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.SMoonGem + i <= 255)
                            {
                                client.Player.SMoonGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700063, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[MoonGem]! You have " + client.Player.SMoonGem + " Super[MoonGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[MoonGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[MoonGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #region 37-RTG
                case 47:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 700073)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.STortoiseGem + i <= 255)
                            {
                                client.Player.STortoiseGem += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(700073, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " Super[TortoiseGem]! You have " + client.Player.STortoiseGem + " Super[TortoiseGem] stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 Super[TortoiseGem] stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any Super[TortoiseGem]!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                #endregion
                #endregion
                #endregion
                case 222:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Retrieve Normal Gems.", 122)//5            
                    .AddOption("Retrieve Refined Gems.", 123)//5            
                    .AddOption("Retrieve Super Gems.", 124)//5            

                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 122:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Normal[PhoenixGem][" + client.Player.NPhoenixGem + "].", 58)//32
                    .AddOption("Normal[DragonGem][" + client.Player.NDragonGem + "].", 60)//32
                    .AddOption("Normal[FuryGem][" + client.Player.NFuryGem + "].", 62)//32
                    .AddOption("Normal[RainbowGem][" + client.Player.NRainbowGem + "].", 64)//32
                    .AddOption("Normal[KylinGem][" + client.Player.NKylinGem + "].", 66)//32
                    .AddOption("Normal[VioletGem][" + client.Player.NVioletGem + "].", 68)//32
                    .AddOption("Normal[MoonGem][" + client.Player.NMoonGem + "].", 70)//32
                    .AddOption("Normal[TortoiseGem][" + client.Player.NTortoiseGem + "].", 72)//32

                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 123:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Refined[PhoenixGem][" + client.Player.RPhoenixGem + "].", 75)//32
                    .AddOption("Refined[DragonGem][" + client.Player.RDragonGem + "].", 77)//32
                    .AddOption("Refined[FuryGem][" + client.Player.RFuryGem + "].", 79)//32
                    .AddOption("Refined[RainbowGem][" + client.Player.RRainbowGem + "].", 81)//32
                    .AddOption("Refined[KylinGem][" + client.Player.RKylinGem + "].", 83)//32
                    .AddOption("Refined[VioletGem][" + client.Player.RVioletGem + "].", 85)//32
                    .AddOption("Refined[MoonGem][" + client.Player.RMoonGem + "].", 87)//32
                    .AddOption("Refined[TortoiseGem][" + client.Player.RTortoiseGem + "].", 89)//32

                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 124:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Super[PhoenixGem][" + client.Player.SPhoenixGem + "].", 91)//32
                    .AddOption("Super[DragonGem][" + client.Player.SDragonGem + "].", 93)//32
                    .AddOption("Super[FuryGem][" + client.Player.SFuryGem + "].", 95)//32
                    .AddOption("Super[RainbowGem][" + client.Player.SRainbowGem + "].", 97)//32
                    .AddOption("Super[KylinGem][" + client.Player.SKylinGem + "].", 99)//32
                    .AddOption("Super[VioletGem][" + client.Player.SVioletGem + "].", 101)//32
                    .AddOption("Super[MoonGem][" + client.Player.SMoonGem + "].", 103)//32
                    .AddOption("Super[TortoiseGem][" + client.Player.STortoiseGem + "].", 105)//32

                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                #region Retrieve
                #region Normal[Gem]
                #region Normal[PhoenixGem]
                case 58:
                    {
                        if (client.Player.NPhoenixGem > 0)
                        {
                            data.AddText("How many Normal[PhoenixGem] do you want to retrieve? \n\nYou have " + client.Player.NPhoenixGem + " Normal[PhoenixGem] stored!")

                            .AddInput("Normal[PhoenixGem]:", 59)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[PhoenixGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 59:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NPhoenixGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NPhoenixGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700001);


                                        data.AddText("You retrieved " + x + " Normal[PhoenixGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[PhoenixGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[DragonGem]
                case 60:
                    {
                        if (client.Player.NDragonGem > 0)
                        {
                            data.AddText("How many Normal[DragonGem] do you want to retrieve? \nYou have " + client.Player.NDragonGem + " Normal[DragonGem] stored!")

                            .AddInput("Normal[DragonGem]:", 61)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[DragonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 61:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NDragonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NDragonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700011);


                                        data.AddText("You retrieved " + x + " Normal[DragonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[DragonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[FuryGem]
                case 62:
                    {
                        if (client.Player.NFuryGem > 0)
                        {
                            data.AddText("How many Normal[FuryGem] do you want to retrieve? \nYou have " + client.Player.NFuryGem + " Normal[FuryGem] stored!")

                            .AddInput("Normal[FuryGem]:", 63)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[FuryGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 63:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NFuryGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NFuryGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700021);


                                        data.AddText("You retrieved " + x + " Normal[FuryGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[FuryGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[RainbowGem]
                case 64:
                    {
                        if (client.Player.NRainbowGem > 0)
                        {
                            data.AddText("How many Normal[RainbowGem] do you want to retrieve? \nYou have " + client.Player.NRainbowGem + " Normal[RainbowGem] stored!")

                            .AddInput("Normal[RainbowGem]:", 65)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[RainbowGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 65:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NRainbowGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NRainbowGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700031);


                                        data.AddText("You retrieved " + x + " Normal[RainbowGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[RainbowGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[KylinGem]
                case 66:
                    {
                        if (client.Player.NKylinGem > 0)
                        {
                            data.AddText("How many Normal[KylinGem] do you want to retrieve? \nYou have " + client.Player.NKylinGem + " Normal[KylinGem] stored!")

                            .AddInput("Normal[KylinGem]:", 67)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[KylinGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 67:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NKylinGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NKylinGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700041);


                                        data.AddText("You retrieved " + x + " Normal[KylinGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[KylinGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[VioletGem]
                case 68:
                    {
                        if (client.Player.NVioletGem > 0)
                        {
                            data.AddText("How many Normal[VioletGem] do you want to retrieve? \nYou have " + client.Player.NVioletGem + " Normal[VioletGem] stored!")

                            .AddInput("Normal[VioletGem]:", 69)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[VioletGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 69:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NVioletGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NVioletGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700051);


                                        data.AddText("You retrieved " + x + " Normal[VioletGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[VioletGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[MoonGem]
                case 70:
                    {
                        if (client.Player.NMoonGem > 0)
                        {
                            data.AddText("How many Normal[MoonGem] do you want to retrieve? \nYou have " + client.Player.NMoonGem + " Normal[MoonGem] stored!")

                            .AddInput("Normal[MoonGem]:", 71)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[MoonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 71:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NMoonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NMoonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700061);


                                        data.AddText("You retrieved " + x + " Normal[MoonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[MoonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Normal[TortoiseGem]
                case 72:
                    {
                        if (client.Player.NTortoiseGem > 0)
                        {
                            data.AddText("How many Normal[TortoiseGem] do you want to retrieve? \nYou have " + client.Player.NTortoiseGem + " Normal[TortoiseGem] stored!")

                            .AddInput("Normal[TortoiseGem]:", 73)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Normal[TortoiseGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 73:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.NTortoiseGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.NTortoiseGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700071);


                                        data.AddText("You retrieved " + x + " Normal[TortoiseGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Normal[TortoiseGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #endregion
                #region Refined[Gem]
                #region Refined[PhoenixGem]
                case 75:
                    {
                        if (client.Player.RPhoenixGem > 0)
                        {
                            data.AddText("How many Refined[PhoenixGem] do you want to retrieve? \nYou have " + client.Player.RPhoenixGem + " Refined[PhoenixGem] stored!")

                            .AddInput("Refined[PhoenixGem]:", 76)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[PhoenixGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 76:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RPhoenixGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RPhoenixGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700002);


                                        data.AddText("You retrieved " + x + " Refined[PhoenixGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[PhoenixGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[DragonGem]
                case 77:
                    {
                        if (client.Player.RDragonGem > 0)
                        {
                            data.AddText("How many Refined[DragonGem] do you want to retrieve? \nYou have " + client.Player.RDragonGem + " Refined[DragonGem] stored!")

                            .AddInput("Refined[DragonGem]:", 78)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[DragonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 78:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RDragonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RDragonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700012);


                                        data.AddText("You retrieved " + x + " Refined[DragonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[DragonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[FuryGem]
                case 79:
                    {
                        if (client.Player.RFuryGem > 0)
                        {
                            data.AddText("How many Refined[FuryGem] do you want to retrieve? \nYou have " + client.Player.RFuryGem + " Refined[FuryGem] stored!")

                            .AddInput("Refined[FuryGem]:", 80)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[FuryGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 80:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RFuryGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RFuryGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700022);


                                        data.AddText("You retrieved " + x + " Refined[FuryGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[FuryGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[RainbowGem]
                case 81:
                    {
                        if (client.Player.RRainbowGem > 0)
                        {
                            data.AddText("How many Refined[RainbowGem] do you want to retrieve? \nYou have " + client.Player.RRainbowGem + " Refined[RainbowGem] stored!")

                            .AddInput("Refined[RainbowGem]:", 82)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[RainbowGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 82:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RRainbowGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RRainbowGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700032);


                                        data.AddText("You retrieved " + x + " Refined[RainbowGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[RainbowGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[KylinGem]
                case 83:
                    {
                        if (client.Player.RKylinGem > 0)
                        {
                            data.AddText("How many Refined[KylinGem] do you want to retrieve? \nYou have " + client.Player.RKylinGem + " Refined[KylinGem] stored!")

                            .AddInput("Refined[KylinGem]:", 84)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[KylinGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 84:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RKylinGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RKylinGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700042);


                                        data.AddText("You retrieved " + x + " Refined[KylinGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[KylinGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[VioletGem]
                case 85:
                    {
                        if (client.Player.RVioletGem > 0)
                        {
                            data.AddText("How many Refined[VioletGem] do you want to retrieve? \nYou have " + client.Player.RVioletGem + " Refined[VioletGem] stored!")

                            .AddInput("Refined[VioletGem]:", 86)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[VioletGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 86:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RVioletGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RVioletGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700052);


                                        data.AddText("You retrieved " + x + " Refined[VioletGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[VioletGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[MoonGem]
                case 87:
                    {
                        if (client.Player.RMoonGem > 0)
                        {
                            data.AddText("How many Refined[MoonGem] do you want to retrieve? \nYou have " + client.Player.RMoonGem + " Refined[MoonGem] stored!")

                            .AddInput("Refined[MoonGem]:", 88)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[MoonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 88:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RMoonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RMoonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700062);


                                        data.AddText("You retrieved " + x + " Refined[MoonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[MoonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Refined[TortoiseGem]
                case 89:
                    {
                        if (client.Player.RTortoiseGem > 0)
                        {
                            data.AddText("How many Refined[TortoiseGem] do you want to retrieve? \nYou have " + client.Player.RTortoiseGem + " Refined[TortoiseGem] stored!")

                            .AddInput("Refined[TortoiseGem]:", 90)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Refined[TortoiseGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 90:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.RTortoiseGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.RTortoiseGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700072);


                                        data.AddText("You retrieved " + x + " Refined[TortoiseGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Refined[TortoiseGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #endregion
                #region Super[Gem]
                #region Super[PhoenixGem]
                case 91:
                    {
                        if (client.Player.SPhoenixGem > 0)
                        {
                            data.AddText("How many Super[PhoenixGem] do you want to retrieve? \nYou have " + client.Player.SPhoenixGem + " Super[PhoenixGem] stored!")

                            .AddInput("Super[PhoenixGem]:", 92)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[PhoenixGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 92:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.SPhoenixGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.SPhoenixGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700003);


                                        data.AddText("You retrieved " + x + " Super[PhoenixGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[PhoenixGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[DragonGem]
                case 93:
                    {
                        if (client.Player.SDragonGem > 0)
                        {
                            data.AddText("How many Super[DragonGem] do you want to retrieve? \nYou have " + client.Player.SDragonGem + " Super[DragonGem] stored!")

                            .AddInput("Super[DragonGem]:", 94)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[DragonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 94:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.SDragonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.SDragonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700013);


                                        data.AddText("You retrieved " + x + " Super[DragonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[DragonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[FuryGem]
                case 95:
                    {
                        if (client.Player.SFuryGem > 0)
                        {
                            data.AddText("How many Super[FuryGem] do you want to retrieve? \nYou have " + client.Player.SFuryGem + " Super[FuryGem] stored!")

                            .AddInput("Super[FuryGem]:", 96)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[FuryGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 96:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.SFuryGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.SFuryGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700023);


                                        data.AddText("You retrieved " + x + " Super[FuryGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[FuryGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[RainbowGem]
                case 97:
                    {
                        if (client.Player.SRainbowGem > 0)
                        {
                            data.AddText("How many Super[RainbowGem] do you want to retrieve? \nYou have " + client.Player.SRainbowGem + " Super[RainbowGem] stored!")

                            .AddInput("Super[RainbowGem]:", 98)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[RainbowGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 98:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.SRainbowGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.SRainbowGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700033);


                                        data.AddText("You retrieved " + x + " Super[RainbowGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[RainbowGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[KylinGem]
                case 99:
                    {
                        if (client.Player.SKylinGem > 0)
                        {
                            data.AddText("How many Super[KylinGem] do you want to retrieve? \nYou have " + client.Player.SKylinGem + " Super[KylinGem] stored!")

                            .AddInput("Super[KylinGem]:", 100)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[KylinGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 100:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.SKylinGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.SKylinGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700043);


                                        data.AddText("You retrieved " + x + " Super[KylinGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[KylinGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[VioletGem]
                case 101:
                    {
                        if (client.Player.SVioletGem > 0)
                        {
                            data.AddText("How many Super[VioletGem] do you want to retrieve? \nYou have " + client.Player.SVioletGem + " Super[VioletGem] stored!")

                            .AddInput("Super[VioletGem]:", 102)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[VioletGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 102:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.SVioletGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.SVioletGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700053);


                                        data.AddText("You retrieved " + x + " Super[VioletGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[VioletGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[MoonGem]
                case 103:
                    {
                        if (client.Player.SMoonGem > 0)
                        {
                            data.AddText("How many Super[MoonGem] do you want to retrieve? \nYou have " + client.Player.SMoonGem + " Super[MoonGem] stored!")

                            .AddInput("Super[MoonGem]:", 104)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[MoonGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 104:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.SMoonGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.SMoonGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700063);


                                        data.AddText("You retrieved " + x + " Super[MoonGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[MoonGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Super[TortoiseGem]
                case 105:
                    {
                        if (client.Player.STortoiseGem > 0)
                        {
                            data.AddText("How many Super[TortoiseGem] do you want to retrieve? \nYou have " + client.Player.STortoiseGem + " Super[TortoiseGem] stored!")

                            .AddInput("Super[TortoiseGem]:", 106)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any Super[TortoiseGem] stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 106:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.STortoiseGem >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.STortoiseGem -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 700073);


                                        data.AddText("You retrieved " + x + " Super[TortoiseGem]!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough Super[TortoiseGem] stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #endregion
                #endregion

                case 1:
                    {
                        byte i = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 720027)
                                i++;
                        }
                        if (i > 0)
                        {
                            if (client.Player.MetScrolls + i <= 255)
                            {
                                client.Player.MetScrolls += i;
                                for (int j = 0; j < i; j++)
                                    client.Inventory.Remove(720027, i, stream);

                                client.SendSysMesage("You successfully stored " + i + " MeteorScrolls! You have " + client.Player.MetScrolls + " MeteorScrolls stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 MetScrolls stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any MeteorScrolls!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.MetScrolls > 0)
                        {
                            data.AddText("How many MeteorScrolls do you want to retrieve? You have " + client.Player.MetScrolls + " MeteorScrolls stored!")

                            .AddInput("MeteorScrolls:", 11)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any MeteorScrolls stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 11:
                    {

                        byte x;
                        if (byte.TryParse(Input, out x))
                        {
                            if (x > 0)
                            {
                                if (client.Player.MetScrolls >= x)
                                {
                                    if (client.Inventory.HaveSpace(x))
                                    {
                                        client.Player.MetScrolls -= x;
                                        for (byte i = 0; i < x; i++)
                                            client.Inventory.Add(stream, 720027);


                                        data.AddText("You retrieved " + x + " MeteorScrolls!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough MeteorScrolls stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        byte ix = 0;
                        foreach (var item in client.Inventory.ClientItems.Values)
                        {
                            if (item.ITEM_ID == 720028)
                                ix++;
                        }
                        if (ix > 0)
                        {
                            if (client.Player.DBscrolls + ix <= 255)
                            {
                                client.Player.DBscrolls += ix;
                                for (int jx = 0; jx < ix; jx++)
                                    client.Inventory.Remove(720028, ix, stream);

                                client.SendSysMesage("You successfully stored " + ix + " DBscrolls! You have " + client.Player.DBscrolls + " DBscrolls stored!.", MsgMessage.ChatMode.System);

                            }
                            else
                                client.SendSysMesage("You can't have more than 255 DBscrolls stored!", MsgMessage.ChatMode.System);

                        }
                        else
                        {
                            client.SendSysMesage("You don't have any DBscrolls!", MsgMessage.ChatMode.System);

                        }
                        break;
                    }
                case 20:
                    {
                        if (client.Player.DBscrolls > 0)
                        {
                            data.AddText("How many DBscrolls do you want to retrieve? You have " + client.Player.DBscrolls + " DBscrolls stored!")

                            .AddInput("DBscrolls:", 21)
                            .AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have any DBscrolls stored!")
                             .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 21:
                    {

                        byte o;
                        if (byte.TryParse(Input, out o))
                        {
                            if (o > 0)
                            {
                                if (client.Player.DBscrolls >= o)
                                {
                                    if (client.Inventory.HaveSpace(o))
                                    {
                                        client.Player.DBscrolls -= o;
                                        for (byte ix = 0; ix < o; ix++)
                                            client.Inventory.Add(stream, 720028);


                                        data.AddText("You retrieved " + o + " DBscrolls!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        data.AddText("You don't have enough space in inventory!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                    }
                                }
                                else
                                {

                                    data.AddText("You don't have enough DBscrolls stored!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {


                                data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {



                            data.AddText("Enter a valid amount!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        #endregion
        #region welcomemessage
        [NpcAttribute(NpcID.WelcomeMessage)]
        public static void WelcomeMessage(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Welcome to DIVINE SIEGE CONQUER!\n");
                        data.AddText("1. Follow us on Facebook – Stay updated with the latest news, events, and announcements.\n");
                        data.AddText("2. Join our Discord Server – Be a part of our growing community, make allies, and never miss important updates.\n");
                        data.AddText("3. Support the Server – Vote for DIVINE SIEGE CO. every 12 hours on ExtremeTop100 to help us rise in the rankings.\n");
                        data.AddText("4. Need Help? – Visit our official website and read our Guide Manual for answers to common questions and beginner support.\n");
                        data.AddText("5. Fair Play Policy – This server is managed with fairness and integrity. Bribery or attempts to influence GMs will not be tolerated. All players will be treated equally.\n");
                        data.AddText("Always remember:\n\"The Strong Shall Live, and the Weak Shall Die.\"");
                        data.AddOption("OK.~Thank~you.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 140 && client.Player.Reborn >= 2)
                        {

                            if (Database.VoteSystem.CanVote(client))
                            {
                                client.SendSysMesage(ServerKernel.XtremeTopLink, MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.white);
                                client.Player.StartVote = true;
                                client.LastVote = DateTime.Now;
                                client.Player.vote = DateTime.Now;
                                client.Player.StartVoteStamp = Extensions.Time32.Now.AddSeconds(60);


                                client.Player.SendMsgBox("Enter the code and please wait for your vote to be validated by the system", 60, MsgStaticMessage.Messages.Vote);
                                // client.CreateDialog(stream, "Enter the code and please wait for your vote to be validated by the system: " , "I~see");
                            }
                            else
                            {
                                //client.SendSysMesage(ServerKernel.XtremeTopLink, MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.white);
                                client.CreateDialog(stream, "This character already voted in the past 12 hours. Your next vote time. "
                              , "I~see");

                            }
                        }
                        else
                        {
                            data.AddText("I'm sorry,but it appears you don't meet the requirements to be eligible to vote. Please return when you reach level 100 after your first rebirth");
                            data.AddOption("I~see.", 255)
                            .AddAvatar(3)
                            .FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Dungeon Boss Boost Event
        [NpcAttribute(NpcID.DungeonDomination)]
        public static void DungeonDomination(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        //bool righthour = DateTime.Now.Hour == 6 || DateTime.Now.Hour == 16;
                        //bool rightmin = DateTime.Now.Minute == 32;
                        var GMap = Database.Server.ServerMaps[3080];
                        var mobs = GMap.View.GetAllMapRoles(MapObjectType.Monster).Where(p => (p as MonsterRole).Family.SpawnCount <= 0 && p.Alive);

                        //if (righthour && rightmin)
                        //{
                        //    if (mobs.Count() == 0)
                        //    {
                        //        for (int i = 0; i < 1; i++)
                        //        {
                        //            ushort X = 0, Y = 0;
                        //            GMap.GetRandCoord(ref X, ref Y);
                        //            Database.Server.AddMapMonster(stream, GMap, 19896, 62, 72, 1, 1, 1);
                        //            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("The Dungeon Bosses have spawned! Hurry to kill them.", Game.MsgServer.MsgMessage.MsgColor.red, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                        //            client.SendSysMesage("The Dungeon Bosses have spawned! Hurry to kill them.", ChatMode.System);

                        //        }
                        //    }
                        //}

                        if (mobs.Count() == 0)
                        {
                            data.Text("Hi Boss! If you are interested in Dungeon Boss\n");
                            data.Text("Respawned to continue the grind,\n");
                            data.Text("Then you have to kill them all:\n");
                            data.Text("------------------------------------------------------\n");
                            data.Text("spawn schedule : Everyday at (06:32, 16:32)\n");
                            data.Text("------------------------------------------------------\n");
                            //data.Text("Prizes:\n");
                            //data.Text("Stage1: (1xPowerExpball,1x(+3)Stone 1xSuperGem and 5xDbs)\n");
                            //data.Text("Stage2: (2xPowerExpball,2x(+3)Stone 2xSuperGem and 10xDbs, 1x1H-VIP)\n");
                            //data.Text("Stage3: (3xPowerExpball,3x(+3)Stone 3xSuperGem and 15xDbs, 2x1H-VIP)\n");
                            //data.Text("Stage4: (4xPowerExpball,4x(+3)Stone 4xSuperGem and 20xDbs, 3x1H-VIP, 1x1D-VIP)\n");
                            //data.Text("------------------------------------------------------\n");
                            data.AddOption("Statue: No Bosses.", 255);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.Text("Hi Boss! If you are interested in Dungeon Boss\n");
                            data.Text("Respawned to continue the grind,\n");
                            data.Text("Then you have to kill them all:\n");
                            data.Text("------------------------------------------------------\n");
                            data.Text("spawn schedule : Everyday at (06:32, 16:32)\n");
                            data.Text("------------------------------------------------------\n");
                            //data.Text("Prizes:\n");
                            //data.Text("Stage1: (1xPowerExpball,1x(+3)Stone 1xSuperGem and 5xDbs)\n");
                            //data.Text("Stage2: (2xPowerExpball,2x(+3)Stone 2xSuperGem and 10xDbs, 1x1H-VIP)\n");
                            //data.Text("Stage3: (3xPowerExpball,3x(+3)Stone 3xSuperGem and 15xDbs, 2x1H-VIP)\n");
                            //data.Text("Stage4: (4xPowerExpball,4x(+3)Stone 4xSuperGem and 20xDbs, 3x1H-VIP, 1x1D-VIP)\n");
                            //data.Text("------------------------------------------------------\n");
                            data.AddOption("Statue: Bosses Live.", 1);
                            data.FinalizeDialog();

                        }
                        break;
                    }
                case 1:
                    {
                        //var GMap = Database.Server.ServerMaps[3080];
                        //ushort X = 0, Y = 0;
                        //GMap.GetRandCoord(ref X, ref Y);
                        client.Teleport(117, 75, 3080);
                        break;
                    }
            }
        }
        #endregion
        #region Garments store 2/3/4/5
        [NpcAttribute(NpcID.Level2Garment)]
        public static unsafe void Level1Garment(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                                Type = ActionType.OpenGuiNpc,
                                Timestamp = (int)client.ActiveNpc,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y,
                                dwParam3 = client.Player.Map
                            };
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }

                    }

            }
        }
        [NpcAttribute(NpcID.Level3Garment)]
        public static unsafe void Level3Garment(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                                Type = ActionType.OpenGuiNpc,
                                Timestamp = (int)client.ActiveNpc,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y,
                                dwParam3 = client.Player.Map
                            };
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }

                    }

            }
        }
        [NpcAttribute(NpcID.Level4Garment)]
        public static unsafe void Level4Garment(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                                Type = ActionType.OpenGuiNpc,
                                Timestamp = (int)client.ActiveNpc,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y,
                                dwParam3 = client.Player.Map
                            };
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }

                    }

            }
        }
        [NpcAttribute(NpcID.Level5Garment)]
        public static unsafe void Level5Garment(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                                Type = ActionType.OpenGuiNpc,
                                Timestamp = (int)client.ActiveNpc,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y,
                                dwParam3 = client.Player.Map
                            };
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }

                    }

            }
        }

        #endregion
        #region 2nd reborn quest
        [NpcAttribute(NpcID.Arthur)]
        public static void Arthur(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        {
                            data.AddText("You can get Ghost Horns from the Hill Spirits. When you got one i can make an Evil Tooth for you")
                                .AddOption("i want Evil Tooth", 1)
                                 .AddOption("I want ImmortalStone", 2)
                                 .AddOption("Make An ImpureVigor.", 3)
                                 .AddOption("Get my PureVigor, Proceed to Stage 2.", 4)
                                 .AddOption("Teleport~to~Twin~City", 5)
                       .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                       .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(722722, 3))
                            {
                                client.Inventory.Remove(722722, 3, stream);
                                client.Inventory.Add(stream, 722721);
                                data.AddText("You successfully exchange the (GhostHorn) for an EvilTooth!")
                           .AddOption("Thank you.", 255).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I'm sorry, you need at least x3 GhostHorn in order for me to help you.")
                          .AddOption("I see.", 255).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                       .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(722726, 3))
                            {
                                client.Inventory.Remove(722726, 3, stream);
                                client.Inventory.Add(stream, 722728);
                                data.AddText("You successfully exchange the FeatherStone for an ImmortalStone!")
                           .AddOption("Thank you.", 255).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I'm sorry, you need at least x3 FeatherStone in order for me to help you.")
                          .AddOption("I see.", 255).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                data.AddText("Please make 3 more space in your inventory.")
                       .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(722729, 3))
                            {
                                client.Inventory.Remove(722729, 3, stream);
                                client.Inventory.Add(stream, 722730);
                                data.AddText("You successfully exchange the VigorFragment for an ImpureVigor!")
                           .AddOption("Thank you.", 255).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I'm sorry, you need at least x3 VigorFragment in order for me to help you.")
                          .AddOption("I see.", 255).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.Quest2rbStage >= 2)
                        {
                            data.AddText("You already in 2nd Stage.").AddOption("oh sorry", 255).FinalizeDialog();
                            return;
                        }

                        if (client.Inventory.Contain(722731, 3))
                        {
                            data.AddText("You have done 1st Stage, Now lets talk about the 2nd Quest!")
                                .AddOption("Begin the 2nd Stage", 41)
                                 .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You did'nt finish the 1st Stage! You don't have x3 Pure Vigor to continue 2nd Stage.").AddOption("oh sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
                case 41:
                    {
                        if (client.Inventory.Contain(722731, 3))
                        {
                            client.Inventory.Remove(722731, 3, stream);
                            client.Player.Quest2rbStage += 1;
                            //Program.DiscordQuestRebirth.Enqueue("Congratulations! " + client.Player.Name + " is now in Stage 2 for Second Rebirth Quest! .");
                            data.AddText($"You are now on Stage {client.Player.Quest2rbStage}, Kill all the mobs and collect points 70,000 Points")
                             .AddOption("I`ll~do~it~now!.", 255).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("You did'nt finish the 1st Stage! You don't have x3 Pure Vigor to continue 2nd Stage.").AddOption("oh sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Bruce)]
        public static void Bruce(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Quest2rbStage == 2 && client.Player.Quest2rbS2Point >= 70000)
                        {
                            data.AddText("You have done have dont the 1st Stage and Second stage now lets talk about the third now you must kill this monster in the order \n 1: Andrew 2: Peter 3: Philip 4: Timothy \n 5: Daphne 6: Victorie 7: Wayne 8: Theodore")
                                .AddOption("begin the third sage", 1)
                                 .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();
                        }
                        else if (client.Player.Quest2rbStage == 2 && client.Player.Quest2rbS2Point <= 70000)
                        {
                            data.AddText($"You only got {client.Player.Quest2rbS2Point} Points, go kill more mobs and get more than 70,000 Points").AddOption("oh sorry", 255).FinalizeDialog();
                            return;
                        }
                        else if (client.Player.Quest2rbStage == 3)
                        {
                            data.AddText("You already on Stage 3!. You must kill this monster in the order \n 1: Andrew \n 2: Peter \n 3: Philip \n 4: Timothy \n 5: Daphne \n 6: Victorie \n 7: Wayne \n 8: Theodore").AddOption("oh sorry", 255).FinalizeDialog(); ;
                            return;
                        }
                        else
                        {
                            data.AddText("You did'nt finish the 1st Stage! You don't have x3 Pure Vigor to continue 2nd Stage. \n Talk to Arthur and give x3 PureVigor [Quest Stage(2)]").AddOption("oh sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {

                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "fastflash" });
                        client.Player.Quest2rbStage += 1;
                        client.SendSysMesage("go slayer the bosses then come to me");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.EarthSeal)]
        public static void EarthSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("A HillSpirit will be released you want continue?")
                            .AddOption("Yes", 1)
                            .AddOption("No", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Moss, 1) && client.Inventory.Contain(Database.ItemType.SoulAroma, 1)
                            && client.Inventory.Contain(Database.ItemType.DreamGrass, 1))
                        {
                            if (client.Map.ContainMobID(3632))
                            {
                                data.AddText("Hill Spirit is already spawn, find and kill him first before you summon!").AddOption("oh~sorry", 255).FinalizeDialog();
                                return;
                            }


                            client.Inventory.Remove(Database.ItemType.Moss, 1, stream);
                            client.Inventory.Remove(Database.ItemType.SoulAroma, 1, stream);
                            client.Inventory.Remove(Database.ItemType.DreamGrass, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3632, 450, 876, 1, 1, 1);//ghost  horn
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("The HillSpirit have spawned by " + client.Player.Name + " in the " + client.Map.Name + "! Hurry to kill them.", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Service).GetArray(stream));
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WaterSeal)]
        public static void WaterSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You need an Evil Tooh to open the water seal , Attention When the seal is open A SwiftDevil will come out!")
                            .AddOption("Oky Open it", 1)
                            .AddOption("no", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Moss, 1) && client.Inventory.Contain(Database.ItemType.SoulAroma, 1)
                            && client.Inventory.Contain(Database.ItemType.DreamGrass, 1) && client.Inventory.Contain(Database.ItemType.EvilTooth, 1))
                        {
                            if (client.Map.ContainMobID(3633))
                            {
                                data.AddText("The SwiftDevil is already alive kill it first, before you spawn a new one!").AddOption("oh~sorry", 255).FinalizeDialog();
                                return;
                            }

                            client.Inventory.Remove(Database.ItemType.Moss, 1, stream);
                            client.Inventory.Remove(Database.ItemType.SoulAroma, 1, stream);
                            client.Inventory.Remove(Database.ItemType.DreamGrass, 1, stream);
                            client.Inventory.Remove(Database.ItemType.EvilTooth, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3633, 886, 443, 1, 1, 1);//ghost  horn
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("The SwiftDevil have spawned by " + client.Player.Name + " in the " + client.Map.Name + "! Hurry to kill them.", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Service).GetArray(stream));
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass, EviTooh").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FireSeal)]
        public static void FireSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("When the seal is open A Banshee will come out! Are you ready")
                            .AddOption("yes", 1)
                            .AddOption("not yet", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Moss, 1) && client.Inventory.Contain(Database.ItemType.SoulAroma, 1)
                            && client.Inventory.Contain(Database.ItemType.DreamGrass, 1) && client.Inventory.Contain(Database.ItemType.ImmortalStone, 1))
                        {

                            if (client.Map.ContainMobID(3634))
                            {
                                data.AddText("The Banshee is already alive kill it first, before you spawn a new one!").AddOption("oh~sorry", 255).FinalizeDialog();
                                return;
                            }
                            client.Inventory.Remove(Database.ItemType.Moss, 1, stream);
                            client.Inventory.Remove(Database.ItemType.SoulAroma, 1, stream);
                            client.Inventory.Remove(Database.ItemType.DreamGrass, 1, stream);
                            client.Inventory.Remove(Database.ItemType.ImmortalStone, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3634, 927, 937, 1, 1, 1);//ghost  horn
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass, ImmortalStone").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.SatanSeal)]
        public static void SatanSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Satan is Imprisoned here , you need a squama bead to open this seal. would you like to open it and summon satan right away?")
                            .AddOption("Yeah", 1)
                            .AddOption("I've go to go.", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(722727, 1))
                        {
                            var GMap = Database.Server.ServerMaps[1700];
                            if (GMap.ContainMobID(3644))
                            {
                                client.CreateBoxDialog("You must kill the Satan first!");
                                return;
                            }
                            else if (GMap.ContainMobID(3645))
                            {
                                client.CreateBoxDialog("You must kill the Beast Satan first!");
                                return;
                            }
                            else if (GMap.ContainMobID(3646))
                            {
                                client.CreateBoxDialog("You must kill the Fury Satan first!");
                                return;
                            }

                            if (client.Player.Quest2rbBossesOrderby != 8 && client.Player.Quest2rbStage != 3)
                            {
                                data.AddText("You must kill the 8 Bosses in Order, before summoning Satan!").AddOption("oh~sorry", 255).FinalizeDialog();
                                return;
                            }

                            client.Inventory.Remove(722727, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3644, 335, 334, 1, 1, 1);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                            //Program.DiscordQuestRebirth.Enqueue("Congratulations! " + client.Player.Name + " Spawn the Satan on Satan Seal .");
                        }
                        else
                        {
                            data.AddText("Sorry you don't have Squama Bead in your inventory!").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Stanleyq)]
        public static void Stanleyq(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Quest2rbStage <= 1)
                        {
                            data.AddText("You did'nt finish the 1st Stage! You don't have x3 Pure Vigor to continue 2nd Stage. \n Talk to Arthur and give x3 PureVigor [Quest Stage(2)]").AddOption("oh sorry", 255).FinalizeDialog();
                            return;
                        }

                        if (client.Player.Quest2rbBossesOrderby == 8)
                        {
                            data.AddText("great hero you have dont the third sage and now i want you bring back to me SquamaBead from killing any monster his/her names contains Lord.")
                                 .AddOption("well done.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You havn't kill the bosses ! go kill them and come to me again .").AddOption("oh sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.secondquest)]
        public static void secondquest(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Reborn == 1 && client.Player.Level >= 110)
                        {


                            data.AddText("Good. You've met the requirements for the second rebirth . You'll face tough challange till you compelete the big quest. Once you manage to get reborn you will receive unique aura , be able to learn bless, and enjoy many benefits.")
                       .AddOption("Hear about the quest", 1)
                       .AddOption("2 Second Reborn", 4)
                        .AddOption("I`ll~think~it~over.", 255)
                        .AddAvatar(105)
                        .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("sorry you are not even a reborn ! comback later when you be a reborn because this is dangerous place")
                  .AddOption("I`ll~think~it~over.", 255)
                  .AddAvatar(105)
                  .FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Team != null)
                        {
                            foreach (var members in client.Team.Temates)
                            {
                                GameClient leader = client.Team.Leader;
                                if (members.client != null)
                                {
                                    if (client.Player.UID != leader.Player.UID)
                                    { client.CreateBoxDialog("You are not the team leader."); return; }

                                    //if (members.client.Player.Reborn == 2)
                                    //    { client.CreateBoxDialog($"Your party member {members.client.Player.Name} is already 2nd Rebirth!."); return; } 

                                    if (members.client.Player.UID != client.Player.UID)
                                    {
                                        if (Role.Core.GetDistance(client.Player.X, client.Player.Y, members.client.Player.X, members.client.Player.Y) < 18)
                                        {
                                            members.client.Teleport(608, 632, 1700);
                                        }
                                    }
                                }
                            }
                        }

                        //if (client.Player.Reborn == 2)
                        //{ client.CreateBoxDialog("You are not allowed because you are already 2nd Rebirth!."); return; }

                        client.Teleport(608, 632, 1700);
                        break;
                    }
                case 4:
                    {
                        if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1))
                            {
                                data.AddText("You don't worry, it's not gonna hurt you a bit when getting the third life. You just need an exemption token and it's all going to be fine.")
                             .AddOption("Here is the ExemptionToken.", 3)
                             .AddOption("I`ll~think~about~it.", 255)
                             .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have ExemptionToken.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~are~ineligible~for~second~rebirth.~Please~wait~until~you~are~a~level~120~reborn~person.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        }



                        break;
                    }
                case 3:
                    {
                        data.AddText("Select the class you want to reborn in.")
                    .AddOption("Trojan.", 11)
                    .AddOption("Warrior.", 21)
                    .AddOption("Archer.", 41)
                    .AddOption("WaterTaoist.", 132)
                    .AddOption("FireTaoist.", 142)
                    .AddOption("I`ll~think~about~it.", 255)
                    .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 11:
                case 21:
                case 41:
                case 132:
                case 142:
                case 51:
                    {

                        if (!client.Inventory.HaveSpace(4))
                        {
                            data.AddText("Sorry, but you need atleast 4 free spaces in your inventory.")
            .AddOption("I~see.", 255)
            .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1))
                            {
                                client.Inventory.Remove(721259, 1, stream);
                                if (client.RebornGem != 0)
                                {
                                    client.Inventory.Add(stream, (uint)(700000 + client.RebornGem), 1);
                                    client.RebornGem = 0;

                                }
                                else
                                {
                                    foreach (var item in client.Equipment.CurentEquip)
                                    {
                                        if (item.Bless == 0)
                                        {
                                            item.Bless = 1;
                                            item.Mode = Role.Flags.ItemMode.Update;
                                            item.Send(client, stream);
                                            break;
                                        }
                                    }
                                }
                                switch (Option)
                                {
                                    case 161:
                                    case 11:
                                    case 21:
                                    case 51:
                                    case 61:
                                    case 71:
                                    case 81:
                                        {
                                            client.Inventory.Add(stream, 410077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Poison);
                                            break;
                                        }
                                    case 41:
                                        {
                                            client.Inventory.Add(stream, 500077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Shield);
                                            break;
                                        }
                                    case 132:
                                    case 142:

                                        {
                                            client.Inventory.Add(stream, 421077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.MP);
                                            break;
                                        }
                                }

                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have CelatialStone.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1))
                            {
                                client.Inventory.Remove(723701, 1, stream);
                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have ExemptionToken.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CleanSing)]
        public static void CleanSing(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("there is floating light in the stove you can't see it  clearly . what are you coming for ?")
                            .AddOption("Cleanse my ImpureVigor", 1)
                            .AddOption("just passing by.", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.ImpureVigor, 1))
                        {
                            if (client.Map.ContainMobID(3635))
                            {
                                data.AddText("The Cleansing Devil is alive, you need to kill it first before spawn a new one!").AddOption("oh~sorry", 255).FinalizeDialog();
                                return;
                            }

                            if (client.Map.ID == 1700 && client.Player.X == 710 && client.Player.Y == 743)
                            {
                                data.AddText("You cannot spawn while you're standing on there spawn area! Move a little").AddOption("oh~sorry", 255).FinalizeDialog();
                                return;
                            }
                            client.Inventory.Remove(Database.ItemType.ImpureVigor, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3635, 710, 743, 1, 1, 1);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 ImpureVigor").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Celestine
        [NpcAttribute(NpcID.Celestine)]
        public static void Celestine(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(700001, 1) && client.Inventory.Contain(700011, 1) && client.Inventory.Contain(700021, 1)
                            && client.Inventory.Contain(700031, 1) && client.Inventory.Contain(700041, 1) && client.Inventory.Contain(700051, 1)
                            && client.Inventory.Contain(700061, 1))
                        {
                            if (client.Inventory.Contain(721258, 1))
                            {
                                client.Inventory.Remove(700001, 1, stream);
                                client.Inventory.Remove(700031, 1, stream);
                                client.Inventory.Remove(700061, 1, stream);
                                client.Inventory.Remove(700011, 1, stream);
                                client.Inventory.Remove(700041, 1, stream);
                                client.Inventory.Remove(700021, 1, stream);
                                client.Inventory.Remove(700051, 1, stream);
                                client.Inventory.Remove(721258, 1, stream);
                                client.Inventory.Add(stream, 721259);

                                data.AddText("Aha! You must come for Celestial Stone! Check your inventory! It`s there! Now, take it to Eternity (298,217), if you wish to get 1st rebirth.");
                                data.AddOption("OK.~Thank~you.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Although~you~get~seven~normal~gems,~I~cannot~refine~the~CelestialStone~for~you~without~the~CleanWater.~");
                                data.AddOption("I~will~get~it~ready.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("People~are~pursuing~greater~achievement~during~their~lives,~but~none~can~make~it~due~to~the~limit~of~human~constitution.");
                            data.AddOption("What~does~it~mean?", 1);
                            data.AddOption("I~don`t~believe~it.");
                            data.AddAvatar(15);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Mortals~are~mundane.~Only~getting~rid~of~it~can~help~them~accomplish~their~aims.");
                        data.AddText("If~you~are~high~level~enough,~you~can~get~reborn~to~learn~more~and~stronger~skills.");
                        data.AddOption("I~am~satisfied.");
                        data.AddOption("How~to~get~reborn?", 2);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("It~is~difficult.~First,~you~should~reach~certain~level.~Second,~you~need~a~Celestial~Stone.");
                        data.AddOption("How~to~get~CelestialStone?", 3);
                        data.AddOption("Forget~it.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("CelestialStone~is~made~of~7~gems:~VioletGem,~KylinGem,~RainbowGem,~MoonGem,~PhoenixGem,~FuryGem,~DragonGem,~and~CleanWater.");
                        data.AddOption("What~is~Clean~Water?", 4);
                        data.AddOption("It~is~difficult.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        data.AddText("It~is~used~to~get~rid~of~your~mundaneness,~and~then~you~won`t~be~affected~by~the~environment.");
                        data.AddText("By~the~way,~Clean~Water~comes~from~celestial~rinsing.");
                        data.AddOption("What~are~gems~used~for?", 5);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("Only~the~seven~gems~can~protect~you~during~the~rebirth.");
                        data.AddOption("I~will~collect~them~now.", 6);
                        data.AddOption("I~changed~my~mind.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("It~is~easy~to~get~the~gems.~But~CleanWater¡­");
                        data.AddOption("But~what?", 7);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        data.AddText("The~Adventure~island~is~the~headstream~of~CleanWater.~But~it~is~occupied~by~WaterEvil~and~he~uses~spell~to~hide~the~stream.");
                        data.AddOption("What~can~I~do?", 8);
                        data.AddOption("I~will~give~up.");
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        data.AddText("WaterEvilElder~will~go~to~get~the~water~every~certain~time.~If~you~defeat~him,~you~may~get~the~water.");
                        data.AddText("But~he~is~very~hard~to~deal~with.");
                        data.AddOption("I~see.~Thank~you.");
                        data.AddOption("Anything~else?", 9);
                        data.AddAvatar(15);
                        data.FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(700001, 1) && client.Inventory.Contain(700011, 1) && client.Inventory.Contain(700021, 1)
                           && client.Inventory.Contain(700031, 1) && client.Inventory.Contain(700041, 1) && client.Inventory.Contain(700051, 1)
                           && client.Inventory.Contain(700061, 1))
                        {
                            if (client.Inventory.Contain(721258, 1))
                            {
                                client.Inventory.Remove(700001, 1, stream);
                                client.Inventory.Remove(700031, 1, stream);
                                client.Inventory.Remove(700061, 1, stream);
                                client.Inventory.Remove(700011, 1, stream);
                                client.Inventory.Remove(700041, 1, stream);
                                client.Inventory.Remove(700021, 1, stream);
                                client.Inventory.Remove(700051, 1, stream);
                                client.Inventory.Remove(721258, 1, stream);
                                client.Inventory.Add(stream, 721259);
                                data.AddText("Aha! You must come for Celestial Stone! Check your inventory! It`s there! Now, take it to Eternity (298,217), if you wish to get 1st rebirth.");
                                data.AddOption("OK.~Thank~you.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Although~you~get~seven~normal~gems,~I~cannot~refine~the~CelestialStone~for~you~without~the~CleanWater.~");
                                data.AddOption("I~will~get~it~ready.");
                                data.AddAvatar(15);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("People~are~pursuing~greater~achievement~during~their~lives,~but~none~can~make~it~due~to~the~limit~of~human~constitution.");
                            data.AddOption("What~does~it~mean?", 1);
                            data.AddOption("I~don`t~believe~it.");
                            data.AddAvatar(15);
                            data.FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region MoonBox Quest
        //[6100] Maggie
        [NpcAttribute(NpcID.Maggie)]
        public static void Maggie(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721010, 1) && client.Inventory.Contain(721011, 1) && client.Inventory.Contain(721012, 1)
                            && client.Inventory.Contain(721013, 1) && client.Inventory.Contain(721014, 1) && client.Inventory.Contain(721015, 1))
                        {
                            dialog.AddText("Wow. I can't believe you were able to obtain all six tokens. I will use these tokens to teleport you");
                            dialog.AddText("to the life tatic where you can help some poor soul. When you teleport, the tokens will be formed into a soul jade.");
                            dialog.AddText("Give this jade to a any of LonelyGhost so save the ghosts soul. You will recieve a moonbox for your kindness. Are you ready?");
                            dialog.AddOption("Yes teleport me", 3);
                            dialog.AddOption("not yet", 255);
                            dialog.AddAvatar(5);
                            dialog.FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Hello " + client.Player.Name + ". My name is Maggie. I tried to conquer these tatics many years ago and was killed. ")
                            .AddText("I chose to gaurd the entrance in the afterlife to stop others from following in my footsteps. If you chose to ")
                            .AddText("ignore my warning, I will send you in. I cannot control what tatic I send you to unless you have all tokens.")
                            .AddOption("Tokens?", 1)
                            .AddOption("This is too dangerous, I must leave at once.", 255).AddAvatar(5).FinalizeDialog();
                        }
                        break;
                    }

                case 1:
                    {
                        dialog.AddText("There are six different tokens you must gain from killing monsters. The monsters in each tatic will drop a different ")
                            .AddText("token. Once you have all six, I can can channel them for you and teleport you to the life tatic where you can help save ")
                            .AddText("some poor souls. I should warn you, there is one more tatic you can be sent to called the Death Tatic. Like the name suggests,")
                            .AddText("if you get sent their, you will die. Good luck adventurer.")
                            .AddOption("Send me to a tatic", 2)
                            .AddOption("This is too dangerous, I must leave at once.", 255).AddAvatar(5).FinalizeDialog();
                        break;

                    }

                case 2:
                    {
                        if (Role.Core.Rate(30))
                        {
                            client.Teleport(211, 156, 1049);
                        }
                        else
                        {
                            var taticNum = Program.GetRandom.Next(0, 101);
                            //Send to a tatic based off random number
                            if (taticNum < 17)
                                client.Teleport(211, 156, 1043);
                            else if (taticNum < 33)
                                client.Teleport(211, 156, 1044);
                            else if (taticNum < 49)
                                client.Teleport(211, 156, 1045);
                            else if (taticNum < 65)
                                client.Teleport(211, 156, 1046);
                            else if (taticNum < 81)
                                client.Teleport(211, 156, 1047);
                            else
                                client.Teleport(211, 156, 1048);
                        }
                        break;
                    }

                case 3:
                    {
                        if (client.Inventory.Contain(721010, 1) && client.Inventory.Contain(721011, 1) && client.Inventory.Contain(721012, 1)
                    && client.Inventory.Contain(721013, 1) && client.Inventory.Contain(721014, 1) && client.Inventory.Contain(721015, 1))
                        {
                            //remove the 6 tokens
                            client.Inventory.Remove(721010, 1, stream);
                            client.Inventory.Remove(721011, 1, stream);
                            client.Inventory.Remove(721012, 1, stream);
                            client.Inventory.Remove(721013, 1, stream);
                            client.Inventory.Remove(721014, 1, stream);
                            client.Inventory.Remove(721015, 1, stream);
                            // add the soul item 

                            client.Inventory.Add(stream, 721072, 1);
                            client.Teleport(211, 156, 1050);
                        }
                        break;
                    }
            }
        }
        // [6120 - 6126] Ghost
        #region Ghost
        [NpcAttribute(NpcID.Ghost)]
        public static void Ghost(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721010, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I am able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out", 1)
                            .AddOption("Thanks", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721010, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("you dont have the token to teleport to next map !")
                          .AddOption("I will get one", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost1)]
        public static void Ghost1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721011, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I am able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out", 1)
                            .AddOption("Thanks", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721011, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("you dont have the token to teleport to next map !")
                          .AddOption("I will get one", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }


        [NpcAttribute(NpcID.Ghost2)]
        public static void Ghost2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721012, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I am able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out", 1)
                            .AddOption("Thanks", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721012, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("you dont have the token to teleport to next map !")
                          .AddOption("I will get one", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost3)]
        public static void Ghost3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721013, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I am able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out", 1)
                            .AddOption("Thanks", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721013, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("you dont have the token to teleport to next map !")
                          .AddOption("I will get one", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost4)]
        public static void Ghost4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721014, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I am able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out", 1)
                            .AddOption("Thanks", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721014, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("you dont have the token to teleport to next map !")
                          .AddOption("I will get one", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }
        [NpcAttribute(NpcID.Ghost5)]
        public static void Ghost5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721015, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I am able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out", 1)
                            .AddOption("Thanks", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721015, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("you dont have the token to teleport to next map !")
                          .AddOption("I will get one", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost6)]
        public static void Ghost6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        dialog.AddText("I am so sorry but I cannot help you. You must die like i did in this tatic.")
                        .AddOption("Thanks", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
            }
        }
        #endregion

        //[6200] Fortuneteller
        [NpcAttribute(NpcID.Fortuneteller)]
        public static void Fortuneteller(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("I can tell your future. Would you like me to tell you what awaits you?")
                            .AddOption("Tell me", 1)
                            .AddOption("I prefer the mystery.", 255).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Teleport(29, 30, 1042);
                        break;
                    }
            }
        }

        // for [6110 - 6116] GuardianGod
        #region GuardianGod
        [NpcAttribute(NpcID.GuardianGod)]
        public static void GuardianGod(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Peace Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GuardianGod1)]
        public static void GuardianGod1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Chaos Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod2)]
        public static void GuardianGod2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Deserted Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod3)]
        public static void GuardianGod3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Prosperous Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod4)]
        public static void GuardianGod4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Disturbed Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod5)]
        public static void GuardianGod5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Calmed Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod6)]
        public static void GuardianGod6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("I am so sorry to tell you that you are in the Death Tatic. There is no way to leave this place besides death.")
                        .AddOption("Oh my", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        #endregion
        //[7660 - 7665] LonelyGhost
        #region LonelyGhost
        [NpcAttribute(NpcID.LonelyGhost6)]
        public static void LonelyGhost6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.AddText("We have been trapped here for many years. Few challengers have a chance to arrive here. You are a real conqueror.");
                    dialog.AddOption("Who are you?", 1);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    dialog.AddText("We were from an old Kingdom. Our rivals made the mystic tactics. We failed to break through them and died.");
                    dialog.AddOption("I see", 2);
                    dialog.FinalizeDialog();
                    break;
                case 2:
                    dialog.AddText("I'm trapped here and cannot get revived. Since you have passed the tactics, would you like to help me get reborn?");
                    dialog.AddOption("How can I help you?", 3);
                    dialog.FinalizeDialog();
                    break;
                case 3:
                    dialog.AddText("We cannot get reborn unless someone would like to take us out. One person can take only one ghost at a time. Will you help me?");
                    dialog.AddOption("No problem", 4);
                    dialog.AddOption("Sorry, I'm very busy", 255);
                    dialog.FinalizeDialog();
                    break;
                case 4:
                    dialog.AddText("You only need to spare a little time. I want to get reborn very much. Please kindly have mercy for me.");
                    dialog.AddOption("I shall help you", 5);
                    dialog.AddOption("I want to leave here", 10);
                    dialog.FinalizeDialog();
                    break;
                case 5:
                    dialog.AddText("I appreciate your help. Now I can get reborn when I teleport you out. I'll give you a MoonBox as a reward for your help. Use it to get my rare items.");
                    dialog.AddOption("Thank you, let me go now", 6);
                    dialog.AddOption("I shall leave later", 255);
                    dialog.FinalizeDialog();
                    break;
                case 6:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(26, 36, 1042);
                            dialog.AddText("Thank you once again! Here's your reward!");
                            dialog.AddOption("Thanks", 255);
                            dialog.FinalizeDialog();
                        }
                        else
                        {
                            client.Teleport(26, 36, 1042);
                            dialog.AddText("How did you get in here without a SoulJade?! You must bring me a SoulJade!")
                          .AddOption("I see", 255).FinalizeDialog();
                        }
                        break;

                    }
                case 10:
                    {
                        dialog.AddText("Are you sure you want to leave without getting your reward?");
                        dialog.AddOption("I shall stay", 255);
                        dialog.AddOption("I am sure", 11);
                        dialog.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.Teleport(26, 36, 1042);

                        client.Inventory.Remove(721072, 1, stream);
                        dialog.AddText("You have been teleported back to Maggie!");
                        dialog.AddOption("Thank you", 255);
                        dialog.FinalizeDialog();
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.LonelyGhost)]
        public static void LonelyGhost(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }


        [NpcAttribute(NpcID.LonelyGhost1)]
        public static void LonelyGhost1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost2)]
        public static void LonelyGhost2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost3)]
        public static void LonelyGhost3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost4)]
        public static void LonelyGhost4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost5)]
        public static void LonelyGhost5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }
        #endregion
        #endregion
        #region Guild Beast
        [NpcAttribute(NpcID.GuildBeast)]
        public static void GuildBeast(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("I was sent here to protect the castle from the terrible beast that's hidden inside.")
                        .AddText(" I shall only let the strongest players fight it. Therefore, only the guild leader of the guild that ")
                        .AddText("won the the GuildWar can summon the GuildBeast! However, 1,000,000 silvers from the GuildFund have to be given to me!")
                        .AddOption("Summon the GuildBeast", 1)
                        .AddOption("Claim My Prize", 2)
                        .AddOption("Just passing by", 255).AddAvatar(213).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID
                            && client.Player.MyGuild != null
                            && client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader
                            && MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            if (!client.Player.SpawnGuildBeast)
                            {
                                if (client.Player.MyGuildMember.MoneyDonate >= 500000)
                                {
                                    client.Player.MyGuildMember.MoneyDonate -= 500000;
                                    client.Player.SpawnGuildBeast = true;
                                    dialog.AddText("Thanks you for your contribution! The GuildBeast will spawn at 20:00! Make sure you get ready to fight it!")
                                    .AddOption("Thanks", 255).AddAvatar(213).FinalizeDialog();
                                }
                                else
                                {
                                    dialog.AddText("You don't have enough guild fund!")
                                        .AddOption("i see", 255).AddAvatar(213).FinalizeDialog();

                                }
                            }
                            else
                            {
                                dialog.AddText("You have already paid to summon the GuildBeast! It will appear at 20:00!")
                                .AddOption("I see", 255).AddAvatar(213).FinalizeDialog();
                            }
                        }
                        else if (client.Player.GuildID == MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID && client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            dialog.AddText("Only the leader of the guild that won the Guild War can summon the Guild Beast!" +
                                "also The GuildBeast cannot be spawned during the Guild War!")
                            .AddOption("I see", 255).AddAvatar(213).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Only the leader of the guild that won the Guild War can summon the Guild Beast!")
                       .AddOption("I see", 255).AddAvatar(213).FinalizeDialog();
                            break;
                        }
                        break;
                    }
                case 2:
                    {
                        if (
                        client.Player.GuildID == Game.MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID
                                         && client.Player.MyGuild != null
                                         && client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader
                                         || client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader &&
                                         Game.MsgTournaments.MsgSchedules.GuildWar.Proces == Game.MsgTournaments.ProcesType.Dead)
                        {
                            if (client.Player.GuildBeastClaimd)
                            {


                                client.Player.GuildBeastClaimd = false;
                                client.SendSysMesage("You have rewarded a DragonBall from GuildBest because is no one kill him!");
                                client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                            }
                            else
                            {
                                dialog.AddText("sorry the player kill the guildbeast while you are trolling and they claim the prize")
                                    .AddOption("comon~man", 255)
                                    .FinalizeDialog();

                            }
                        }
                        else
                        {
                            dialog.AddText("well you must be a guild leader of the guild win last guild war to claim the prize")
                                .AddOption("well", 255)
                                .FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region ArmyToken

        [NpcAttribute(NpcID.TwinAramy)]
        public static void TwinAramy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello.  I have lost my Army Token and it has brung shame to my family.  This is my only chance to redeem myself.  Can you retrieve it?")
                        .AddOption("Count me in", 255)
                        .AddOption("I got the Army Token", 1)
                        .AddOption("Just passing by", 255).AddAvatar(15).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                   .AddOption("Let me check.", 255).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721117, 1))
                        {
                            client.Inventory.Remove(721117, 1, stream);
                            Role.Player.Reward(client, stream, "Exchange ArmyToken");
                            data.AddText("Wow, you actually did it.  You have brung great honor today young boy.  Thanks so much.  Here is your reward.")
                           .AddOption("Thanks!", 255).AddAvatar(15).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You do not have the required item")
                            .AddOption("Whatever", 255).AddAvatar(15).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region SnakeKing

        [NpcAttribute(NpcID.Snake)]
        public static void Snake(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you want to leave?")
                        .AddOption("Yes", 1)
                        .AddOption("Just passing by", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(723, 573, 1015);
                        break;
                    }
            }
        }

        [Npc(NpcID.GreenSnake)]
        public static void GreenSnake(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("What beautiful scenery! I feel so lucky to meet you here, so my problem of starvation can be solved. Come here, baby!");
                    data.AddOption("Be~off,~or~I`ll~kill~you!", 1);
                    data.AddOption("I`m~gone,~bye!", byte.MaxValue);
                    data.AddAvatar(110).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("Wait, I`m only joking! If you spare my life, I`ll lead you to a marvellous place with treasures everywhere! You can take what you want if you are able to break through the Snake Array.");
                    data.AddOption("What~is~snake~array?", 2);
                    data.AddAvatar(110).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Don`t kill me, and I`ll explain. It`s a kind of battle array formed by 17 islands. Our boss watches the last one. Beat the boss down, and the treasure will be yours!");
                    data.AddOption("Show~me~the~way.", 3);
                    data.AddAvatar(110).FinalizeDialog();
                    break;
                case 3:
                    data.AddText("Um, I don`t mean to question your ability. However, you may pay for your greed with your life. I`ve seen that a lot, before.");
                    data.AddOption("I~fear~nothing.", 4);
                    data.AddOption("I~changed~my~mind.", byte.MaxValue);
                    data.AddAvatar(110).FinalizeDialog();
                    break;
                case 4:
                    client.Teleport(444, 355, 1063);
                    break;
            }
        }
        #endregion
        #region SkyPass
        public static void MikeMain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var skypass = id - 2016 + 1;
            var skypassrand = Program.GetRandom.Next(2);
            const uint mapid = 1040;
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("hello, we brothers watch the battle stages of different levels on this floor. which stage you need");
                        dialog.Text("to conquer depends on your ability . when you test starts, you must defeat the monsters on the stage and collect a PassToken to continue you challange so ?");
                        dialog.Option("im ready", Convert.ToByte(skypass));
                        dialog.Option("teleport me to twincity", 6);
                        dialog.AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (skypassrand == 1)
                            client.Teleport(543, 330, mapid);
                        else client.Teleport(368, 588, mapid);
                        break;
                    }
                case 2:
                    {
                        if (skypassrand == 1)
                            client.Teleport(492, 280, mapid);
                        else client.Teleport(320, 540, mapid);
                        break;
                    }
                case 3:
                    {
                        if (skypassrand == 1)
                            client.Teleport(436, 224, mapid);
                        else client.Teleport(272, 492, mapid);
                        break;
                    }
                case 4:
                    {
                        if (skypassrand == 1)
                            client.Teleport(393, 181, mapid);
                        else client.Teleport(224, 444, mapid);
                        break;
                    }
                case 5:
                    {
                        if (skypassrand == 1)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 721109, 1);
                                dialog.AddText("here you go , deliver this SkyPrizeToken! to god cloud and claim your reward").FinalizeDialog();
                                client.Teleport(141, 240, mapid);

                            }
                            else
                            {
                                dialog.AddText("please make some room from your inventory!")
                                    .AddOption("oh sorry", 255);
                            }
                        }
                        else client.Teleport(176, 396, mapid);
                        break;
                    }
                case 6:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Mike)]
        public static void Mike(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("This is the way to sky pass are you here to challange the sky pass?");
                        dialog.Option("please show me the way", 1);
                        dialog.Option("just passing by", 255);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.Text("don't rush into dangers ! the sky pass was desinged by my master, \n the God Cloud he trapped horrific monsters in the pass to test out the real hero.");
                        dialog.Option("can i have a look?", 2);
                        dialog.Option("i'm leave", 255);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.Text("sure ! everyone has a chance to challange it . if you pass 5 floors at a time, you will see my great master.");
                        dialog.Option("im up for it?", 3);
                        dialog.Option("i'm leave", 255);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.Text("the pass consists of 5 Floors , and each floor is guarded by the monsters of different level");
                        dialog.Option("Lets go", 5);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(721109, 1) || client.Inventory.Contain(721100, 1)
                            && client.Inventory.Contain(721101, 1) || client.Inventory.Contain(721102, 1)
                            && client.Inventory.Contain(721103, 1) || client.Inventory.Contain(721108, 1))
                        {
                            dialog.Text("no cheathing ! A true hero must hunt for his own tokens inside the sky pass ! please get rid of those !");
                            dialog.Option("sorry ", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            client.Teleport(596, 384, 1040);
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MikeFinishSkypass)]
        public static void MikeFinishSkypass(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("ah , you must be the hero who broke through 5 tough floors in one time ! you deserve to be rewarded . \n for your great perseverance ! i hope to see you again");
                        dialog.Option("Claim my reward", 1);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721109, 1))
                        {
                            dialog.Text("there are two Treasure boxes here , 5 Meteors in the first box. and the second box has a chance of giviing 7 meteors, 1 Dragonball or some money !\n which would you like to receive?");
                            dialog.Option("Box 1", 2);
                            dialog.Option("Box 2", 3);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("I'm sorry but i shall only reward those who have a SkyPrizeToken!");
                            dialog.Option("teleport me to twincity", 4);
                            dialog.Option("lemme think !", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            dialog.Text("here you go , enjoy!");
                            dialog.Option("thanks!", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 5);
                            client.Inventory.Remove(721109, 1, stream);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.Text("please make some room in your inventory");
                            dialog.Option("oh ok !", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (Role.Core.ChanceSuccess(30))
                            {
                                client.Player.Money += 250000;
                                dialog.Text("Congratulations ! you have received 250,000 silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Teleport(428, 378, 1002);
                            }
                            else if (Role.Core.ChanceSuccess(15))
                            {
                                dialog.Text("Congratulations ! you have received5 Meteors! ");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Inventory.Add(stream, Database.ItemType.Meteor, 5);
                                client.Inventory.Remove(721109, 1, stream);
                                client.Teleport(428, 378, 1002);
                            }
                            else if (Role.Core.ChanceSuccess(30))
                            {
                                client.Player.Money += 1000000;
                                dialog.Text("Congratulations ! you have received 1,000,000 silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has complete the skypass quest and Received 1,000,000 silver!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                client.Teleport(428, 378, 1002);
                            }
                            else if (Role.Core.ChanceSuccess(0.005))
                            {
                                dialog.Text("Congratulations ! you have received 1 DragonBall silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has complete the skypass quest and Received 1 DragonBall!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                client.Teleport(428, 378, 1002);
                            }
                            else
                            {
                                client.Player.Money += 100000;
                                dialog.Text("Congratulations ! you have received 100,000 silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Teleport(428, 378, 1002);
                            }
                        }
                        else
                        {
                            dialog.Text("please make 5 room free in your inventory");
                            dialog.Option("oh ok !", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        public static void MikeSkypass(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var skypass = id - 2011 + 1;
            if (id == 2015)
                skypass += 4;
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721099 + skypass, 1))
                        {

                            dialog.Text("i can take you out of here if you give me your PassToken" + skypass);
                            dialog.Option("Yea", Convert.ToByte(skypass));
                            dialog.AddAvatar(30).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("i'm sorry but it seem you don't have a PassToken. Hunt one first and I'll help you getting out." + skypass);
                            dialog.Option("Common", 255);
                            dialog.AddAvatar(30).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(721100, 1, stream);
                        client.Teleport(595, 383, 1040);
                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(721101, 1, stream);
                        client.Teleport(543, 330, 1040);
                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(721102, 1, stream);
                        client.Teleport(492, 280, 1040);
                        break;
                    }
                case 4:
                    {
                        client.Inventory.Remove(721103, 1, stream);
                        client.Teleport(436, 224, 1040);
                        break;
                    }
                case 9:
                    {
                        client.Inventory.Remove(721108, 1, stream);
                        client.Teleport(393, 181, 1040);
                        break;
                    }
            }
        }

        #endregion
        #region MeteorTear
        [NpcAttribute(NpcID.Minner)]
        public static void Minner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.Contain(721000, 1) && !client.Inventory.Contain(721001, 1) && !client.Inventory.Contain(721002, 1))
                        {
                            dialog.Text("i'm so sad, i Haven't seen my sister for a while and didn't get any notices from hear , she should be in Phonix Castle. tell me if you see her");
                            dialog.AddOption("sure i will", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(721000, 1) && !client.Inventory.Contain(721001, 1) && !client.Inventory.Contain(721002, 1))
                        {
                            dialog.Text("i'm so sad, i Haven't seen my sister for a while and didn't get any notices from hear");
                            dialog.AddOption("i got a letter from Milly", 1);
                            dialog.AddOption("sorry i'm busy", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        else if (!client.Inventory.Contain(721000, 1) && client.Inventory.Contain(721001, 1) && !client.Inventory.Contain(721002, 1))
                        {
                            dialog.Text("go meet Joe in Desert City near Mystic Castle entrace.");
                            dialog.AddOption("well", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(721002, 1))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                dialog.Text("please free some room from your inventory");
                                dialog.AddOption("ok", 255);
                                return;
                            }
                            client.Inventory.Remove(721002, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorTear, 1);
                            dialog.Text("oh, thanks for delivering that to joe . take this meator tear as reward for your courage!");
                            dialog.AddOption("Thanks", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        dialog.Text("oh. thanks you but i miss my darling jo. im sure she's in the desert. i would appreciate if you gave him this Guardian Star. it meens a lot for me");
                        dialog.AddOption("sure ", 2);
                        dialog.AddOption("im busy!", 255);
                        dialog.AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(721000, 1))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Remove(721000, 1, stream);
                                client.Inventory.Add(stream, 721001, 1);
                                dialog.Text("thank you so much take this guardian star and meet Joe in desert near the Mystic Castle entrace.");
                                dialog.AddOption("i'm going", 255);
                                dialog.AddAvatar(3).FinalizeDialog();
                            }
                            else
                            {
                                dialog.Text("free some space from your inventory");
                                dialog.AddOption("ok", 255);
                                dialog.AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.Text("lol you don't have the letter!");
                            dialog.AddOption("i'm going sorry", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Milly)]
        public static void Milly(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Hello stranger . i haven't seen my sister for a while and i got a letter for her would you like to deliver it for me please?");
                        dialog.Option("ofc sure", 1);
                        dialog.Option("no i'm bussy", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.Contain(721000, 1) && !client.Inventory.Contain(721001, 1))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 721000, 1);
                                dialog.Text("Here ! take this letter and meet my sister Minner in Bird Island.");
                                dialog.Option("oky", 255);
                            }
                            else
                            {
                                dialog.Text("please free some room from you'r inventory");
                                dialog.Option("oky", 255);
                            }
                        }
                        else
                        {
                            dialog.Text("i'm already gave you the latter . go see my sister in BirdIsland");
                            dialog.Option("oky", 255);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Joe)]
        public static void Joe(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.Contain(721001, 1))
                        {
                            dialog.Text("this desert is killing me it's so hot!");
                            dialog.Option("yes it is", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("i can tell you already have the Guardian Star however i will ask you to get me a meteor and an Amrita .... the sun is killing me!");
                            dialog.Option("Take them", 1);
                            dialog.Option("i see", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(1000030, 1) && client.Inventory.Contain(Database.ItemType.Meteor, 1)
                            && client.Inventory.Contain(721001, 1))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Remove(1000030, 1, stream);
                                client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                client.Inventory.Remove(721001, 1, stream);
                                client.Inventory.Add(stream, 721002, 1);
                                dialog.Text("oh yea i feel refreshed now! here take this Sad meteor and give it to Minner.");
                                dialog.Option("Oky", 255);
                                dialog.AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                dialog.Text("please free some room from your inventory!");
                                dialog.Option("ok", 255);
                                dialog.AddAvatar(67).FinalizeDialog();
                            }
                        }
                        break;
                    }
                    //case 2:
                    //    {
                    //        client.Player.LootDragonBall = !client.Player.LootDragonBall;
                    //        break;
                    //    }
            }
        }

        #endregion
        #region AdvancedZone
        [NpcAttribute(NpcID.AdvancedZone)]
        public static void AdvancedZone(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Do you want to enter the Advanced Zone? be careful they are many dangers ahead!");
                        dialog.Option("yea", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(1350, 1198, 1205);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MeteorZoneEnter)]
        public static void MeteorZoneEnter(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("i don't see many adventurers out this far! if you'd like i can teleport you to the next map, be warned though that none have ever returned from this depths since you can't use scroll inside !");
                        dialog.Option("Send Me in", 1);
                        dialog.Option("no thnaks", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(1039, 717, 1210);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MeteorZoneLeave)]
        public static void MeteorZoneLeave(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("i can't believe you've made it this far! you deserve my help do you want me to take you to twicity? !");
                        dialog.Option("yes please", 1);
                        dialog.Option("no thanks", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }

        #endregion
        #region AncientDevil
        [NpcAttribute(NpcID.Exorcist)]
        public static void Exorcist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("A demon is sealed by the strength of the seals gradually disappearing, he will return to himself soon, can you help me fixing its seal?")
                        .AddOption("How can I help you?", 1)
                        .AddOption("Nevermind", 255).AddAvatar(243).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("The devil is in deep sleep. We must do so on this occasion!")
                        .AddText(" The amulet is what we want! There are 5 amulet that must be harvested by killing the monster that corresponds to your class.")
                        .AddText(" After you gather the 5 Amulets you have to summon the AncientDevil by right clicking them! Be careful with his guards tho, ")
                        .AddText("you have to enable PK mode to kill them. Will you help us?")
                        .AddOption("Count me in", 2)
                        .AddOption("Let me think it over", 255).AddAvatar(243).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(189, 233, 1082);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WaterGuard)]
        public static void WaterGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I am the Water Guard, if you are a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that steal the amulet. Once you're done you'll have to give me the Cert. and I'll give you the Amulet in exchange.")
                        .AddOption("Take me in", 1)
                       .AddOption("I've got the WaterCert.", 2)
                       .AddOption("Just passing by", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 130 && client.Player.Class <= 135)
                        {
                            client.Teleport(168, 295, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not A Water").AddOption("oh", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710019, 1))
                        {
                            client.Inventory.Remove(710019, 1, stream);
                            client.Inventory.Add(stream, 710014, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WaterCert.! Get inside and kill the Devil for it!")
                                .AddOption("i see", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.FireGuard)]
        public static void FireGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I am the Fire Guard, if you are a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that steal the amulet. Once you're done you'll have to give me the Cert. and I'll give you the Amulet in exchange.")
                        .AddOption("Take me in", 1)
                       .AddOption("I've got the FireCert.", 2)
                       .AddOption("Just passing by", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 140 && client.Player.Class <= 145)
                        {
                            client.Teleport(295, 168, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not A Fire").AddOption("oh", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710018, 1))
                        {
                            client.Inventory.Remove(710018, 1, stream);
                            client.Inventory.Add(stream, 710013, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WaterCert.! Get inside and kill the Devil for it!")
                                .AddOption("i see", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.TrojanGuard)]
        public static void TrojanGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I am the Trojan Guard, if you are a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that steal the amulet. Once you're done you'll have to give me the Cert. and I'll give you the Amulet in exchange.")
                        .AddOption("Take me in", 1)
                       .AddOption("I've got the TrojanCert.", 2)
                       .AddOption("Just passing by", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 10 && client.Player.Class <= 15)
                        {
                            client.Teleport(076, 175, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not A Trojan").AddOption("oh", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710017, 1))
                        {
                            client.Inventory.Remove(710017, 1, stream);
                            client.Inventory.Add(stream, 710012, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WaterCert.! Get inside and kill the Devil for it!")
                                .AddOption("i see", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.ArcherGuard)]
        public static void ArcherGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I am the Archer Guard, if you are a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that steal the amulet. Once you're done you'll have to give me the Cert. and I'll give you the Amulet in exchange.")
                        .AddOption("Take me in", 1)
                       .AddOption("I've got the ArcherCert.", 2)
                       .AddOption("Just passing by", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 40 && client.Player.Class <= 45)
                        {
                            client.Teleport(323, 302, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not A Archer").AddOption("oh", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710020, 1))
                        {
                            client.Inventory.Remove(710020, 1, stream);
                            client.Inventory.Add(stream, 710015, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a ArcherCert.! Get inside and kill the Devil for it!")
                                .AddOption("i see", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.WarriorGuard)]
        public static void WarriorGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I am the Warrior Guard, if you are a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that steal the amulet. Once you're done you'll have to give me the Cert. and I'll give you the Amulet in exchange.")
                        .AddOption("Take me in", 1)
                       .AddOption("I've got the WarriorCert.", 2)
                       .AddOption("Just passing by", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 20 && client.Player.Class <= 25)
                        {
                            client.Teleport(152, 081, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not A Warrior").AddOption("oh", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710016, 1))
                        {
                            client.Inventory.Remove(710016, 1, stream);
                            client.Inventory.Add(stream, 710011, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WarriorCert.! Get inside and kill the Devil for it!")
                                .AddOption("i see", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }
        #endregion
        #region BlueMouse
        [NpcAttribute(NpcID.GeneralJudd)]
        public static void GeneralJudd(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Thieves stole precious artefacts from the Mansion! The Aster Necklace, Pinetum Picture, and the Royal Sword! together with the Secret Command of Twin City's ruler. We have sent soldier to trace back the lost items.")
                        .AddOption("Did you get any clues?", 1)
                        .AddOption("I want to claim my prize!", 6)
                        .AddOption("Poor guy.", 255)
                        .AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Yeah. The thieves were captured. But we did not find out the lost items.I heard a rumor about blue mice, but I can't leave my post to investigate. Could you search for our items in the Phoenix Castle Mine")
                        .AddOption("Yes sure.", 2)
                        .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.AddText("The King pormises big rewards for those who can retrieve the lost items. Do you want to go to Castle mine cave? I knew an old miner outside the mine had seen it.")
                        .AddOption("Yes sure.", 3)
                        .AddOption("I am quite busy now.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.AddText("Good! OldMiner has a kind of special needle to catch the mouse. Hope you can find the lost items soon.")
                        .AddOption("Ok. I will visit OldMiner now.", 4)
                        .AddOption("Sorry that I can't help you.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        dialog.AddText("Thank you very much for your kindness. For any treasure you retrieve, I will repay you something. Good Luck.")
                        .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(722515, 1)
                            && !client.Inventory.Contain(722512, 1)
                            && !client.Inventory.Contain(722513, 1)
                            && !client.Inventory.Contain(722514, 1))
                        {
                            client.Inventory.Remove(722515, 1, stream);
                            if (Role.Core.Rate(Global.LUCKY_BLUE_MOUSE_RATE))
                            {
                                client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                //Program.DiscordBlueMouse.Enqueue("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a Dragonball!");
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a Dragonball!", "ALLUSERS", "Server", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                            }
                            else
                            {
                                client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                                dialog.AddText("Here you are!. Good Luck.")
                      .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();
                            }
                        }

                        else if (client.Inventory.Contain(722514, 1)
                            && client.Inventory.Contain(722513, 1)
                            && client.Inventory.Contain(722512, 1))
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. try to free 3 space")
                                 .AddOption("i see", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722514, 1, stream);
                                client.Inventory.Remove(722513, 1, stream);
                                client.Inventory.Remove(722512, 1, stream);
                                if (Role.Core.Rate(Global.LUCKY_BLUE_MOUSE_RATE))
                                {
                                    client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                    //Program.DiscordBlueMouse.Enqueue("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a Dragonball!");
                                    Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a Dragonball!", "ALLUSERS", "Server", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                                }
                                else
                                {
                                    client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                                    //Program.DiscordBlueMouse.Enqueue("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a x1 MeteorScroll!");
                                    dialog.AddText("Here you are!. Good Luck.")
                          .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();
                                }
                            }

                        }

                        else if (client.Inventory.Contain(722514, 1) && client.Inventory.Contain(722513, 1))
                        {
                            if (!client.Inventory.HaveSpace(5))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. try to free 5 space")
                                 .AddOption("i see", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722514, 1, stream);
                                client.Inventory.Remove(722513, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 5);
                                //Program.DiscordBlueMouse.Enqueue("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a x5 Meteors!");
                                dialog.AddText("Here you are!. Good Luck.")
                      .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }
                        else if (client.Inventory.Contain(722513, 1) && client.Inventory.Contain(722512, 1))
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. try to free 3 space")
                                 .AddOption("i see", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722512, 1, stream);
                                client.Inventory.Remove(722513, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                //Program.DiscordBlueMouse.Enqueue("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a x3 Meteors!");
                                dialog.AddText("Here you are!. Good Luck.")
                      .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }
                        else if (client.Inventory.Contain(722514, 1))
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. try to free 3 space")
                                 .AddOption("i see", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722514, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                //Program.DiscordBlueMouse.Enqueue("As Lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a x3 Meteors!");
                                dialog.AddText("Here you are!. Good Luck.")
                      .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }
                        else if (client.Inventory.Contain(722513, 1))
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. try to free 2 space")
                                 .AddOption("i see", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722513, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                                dialog.AddText("Here you are!. Good Luck.")
                      .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }
                        else if (client.Inventory.Contain(722512, 1))
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. try to free 2 space")
                                 .AddOption("i see", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722512, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                                dialog.AddText("Here you are!. Good Luck.")
                      .AddOption("Thanks, Bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OldMiner)]
        public static void OldMiner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You must use Silver or Gold Needle to catch this kind of mouse. I do have the stuff. If you want, I can exchange Silver Needle for a DeagonGem, PhoenixGem, KylinGem, or RainbowGem; and exchange Gold Needle for FuryGem, MoonGem or VioletGem.")
                        .AddOption("What is the difference?", 1)
                        .AddOption("I want Silver Needle.", 2)
                        .AddOption("I want Gold Needle.", 3)
                        .AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("It is said that some have seen Blue Mice scurrying in the forest mine cave, carying precious treasures. I have never seen such a thing myself, but have found large mice tracks in the deeper mines! The mouse must be bigger than a dog!")
                        .AddOption("Yeah, why not?", 2)
                        .AddOption("I don't believe it.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.AddText("You must use Silver or Gold Needle to catch this kind of mouse. I do have the stuff. If you want, I can exchange Silver Needle for a DeagonGem, PhoenixGem, KylinGem, or RainbowGem; and exchange Gold Needle for FuryGem, MoonGem or VioletGem.")
                        .AddOption("What is the difference?", 3)
                        .AddOption("I want Silver Needle.", 4)
                        .AddOption("I want Gold Needle.", 5).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.AddText("The chance of getting treasures is a little bit higher if you use GoldNeedle. But it's invariable that you must be patient.")
                        .AddOption("So I want GoldNeedle.", 5)
                        .AddOption("Even so, I want SilverNeedle.", 4)
                        .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.Contain(722510, 3))
                        {
                            if (client.Inventory.Contain(700011, 1))
                            {
                                client.Inventory.Remove(700011, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting..")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700001, 1))
                            {
                                client.Inventory.Remove(700001, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting..")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700031, 1))
                            {
                                client.Inventory.Remove(700031, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting..")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700041, 1))
                            {
                                client.Inventory.Remove(700041, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting..")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("In order to receive a Silver Needle you must bring me a DragonGem, PhoenixGem, KylinGem, or RainbowGem!")
                                .AddOption("Ok, I will get it ready soon", 255)
                                .AddOption("Take a Gold Needle instead", 5)
                                  .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but you can carry only 3 needle of each kind at a time.")
                      .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (!client.Inventory.Contain(722511, 3))
                        {
                            if (client.Inventory.Contain(700021, 1))
                            {
                                client.Inventory.Remove(700021, 1, stream);
                                client.Inventory.Add(stream, 722511, 1);
                                dialog.AddText("Here you are. Good luck with the hunting..")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700061, 1))
                            {
                                client.Inventory.Remove(700061, 1, stream);
                                client.Inventory.Add(stream, 722511, 1);
                                dialog.AddText("Here you are. Good luck with the hunting..")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700051, 1))
                            {
                                client.Inventory.Remove(700051, 1, stream);
                                client.Inventory.Add(stream, 722511, 1);
                                dialog.AddText("Here you are. Good luck with the hunting..")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("In order to receive a GoldNeedle you must bring me a FuryGem, a VioletGem or a MoonGem!")
                                .AddOption("Ok, I will get it ready soon", 255)
                                .AddOption("Take a Silver Needle instead", 4)
                                  .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but you can carry only 3 needle of each kind at a time.")
                      .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        //  [NpcAttribute(NpcID.BlueMouse)]
        public static void BlueMouse(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var npc = client.Player.View.Roles(Role.MapObjectType.Npc).Where(p => p.UID == id).First();
            if (npc != null)
                client.Map.RemoveNpc(npc as Npc, stream);

            var Maps = new uint[] { 1502, 1503 };
            Game.MsgNpc.Npc bluenpc = Game.MsgNpc.Npc.Create();
            bluenpc.UID = (uint)NpcID.BlueMouse;
            bluenpc.ObjType = Role.MapObjectType.Npc;
            bluenpc.NpcType = Role.Flags.NpcType.Talker;
            bluenpc.Mesh = 6890;
            bluenpc.Map = Maps[Program.GetRandom.Next(0, 2)];
            switch (Program.GetRandom.Next(1, 9))
            {
                case 1:
                    {
                        bluenpc.X = 157;
                        bluenpc.Y = 109;
                        break;
                    }
                case 2:
                    {
                        bluenpc.X = 130;
                        bluenpc.Y = 119;
                        break;
                    }
                case 3:
                    {
                        bluenpc.X = 114;
                        bluenpc.Y = 152;
                        break;
                    }
                case 4:
                    {
                        bluenpc.X = 79;
                        bluenpc.Y = 132;
                        break;
                    }
                case 5:
                    {
                        bluenpc.X = 87;
                        bluenpc.Y = 111;
                        break;
                    }
                case 6:
                    {
                        bluenpc.X = 40;
                        bluenpc.Y = 60;
                        break;
                    }
                case 7:
                    {
                        bluenpc.X = 100;
                        bluenpc.Y = 100;
                        break;
                    }
                case 8:
                    {
                        bluenpc.X = 105;
                        bluenpc.Y = 50;
                        break;
                    }
            }
            Database.Server.ServerMaps[bluenpc.Map].AddNpc(bluenpc);
            #region B2
            var bluenpc2 = Game.MsgNpc.Npc.Create();
            bluenpc2.UID = (uint)NpcID.BlueMouse2;
            bluenpc2.ObjType = Role.MapObjectType.Npc;
            bluenpc2.NpcType = Role.Flags.NpcType.Talker;
            bluenpc2.Mesh = 6890;
            bluenpc2.Map = Maps[Program.GetRandom.Next(0, 2)];
            switch (Program.GetRandom.Next(1, 9))
            {
                case 1:
                    {
                        bluenpc2.X = 157;
                        bluenpc2.Y = 109;
                        break;
                    }
                case 2:
                    {
                        bluenpc2.X = 130;
                        bluenpc2.Y = 119;
                        break;
                    }
                case 3:
                    {
                        bluenpc2.X = 114;
                        bluenpc2.Y = 152;
                        break;
                    }
                case 4:
                    {
                        bluenpc2.X = 79;
                        bluenpc2.Y = 132;
                        break;
                    }
                case 5:
                    {
                        bluenpc2.X = 87;
                        bluenpc2.Y = 111;
                        break;
                    }
                case 6:
                    {
                        bluenpc2.X = 40;
                        bluenpc2.Y = 60;
                        break;
                    }
                case 7:
                    {
                        bluenpc2.X = 100;
                        bluenpc2.Y = 100;
                        break;
                    }
                case 8:
                    {
                        bluenpc2.X = 105;
                        bluenpc2.Y = 50;
                        break;
                    }
            }
            Database.Server.ServerMaps[bluenpc2.Map].AddNpc(bluenpc2);
            #endregion
            #region b3
            var bluenpc3 = Game.MsgNpc.Npc.Create();
            bluenpc3.UID = (uint)NpcID.BlueMouse3;
            bluenpc3.ObjType = Role.MapObjectType.Npc;
            bluenpc3.NpcType = Role.Flags.NpcType.Talker;
            bluenpc3.Mesh = 6890;
            bluenpc3.Map = Maps[Program.GetRandom.Next(0, 2)];
            switch (Program.GetRandom.Next(1, 9))
            {
                case 1:
                    {
                        bluenpc3.X = 157;
                        bluenpc3.Y = 109;
                        break;
                    }
                case 2:
                    {
                        bluenpc3.X = 130;
                        bluenpc3.Y = 119;
                        break;
                    }
                case 3:
                    {
                        bluenpc3.X = 114;
                        bluenpc3.Y = 152;
                        break;
                    }
                case 4:
                    {
                        bluenpc3.X = 79;
                        bluenpc3.Y = 132;
                        break;
                    }
                case 5:
                    {
                        bluenpc3.X = 87;
                        bluenpc3.Y = 111;
                        break;
                    }
                case 6:
                    {
                        bluenpc3.X = 40;
                        bluenpc3.Y = 60;
                        break;
                    }
                case 7:
                    {
                        bluenpc3.X = 100;
                        bluenpc3.Y = 100;
                        break;
                    }
                case 8:
                    {
                        bluenpc3.X = 105;
                        bluenpc3.Y = 50;
                        break;
                    }
            }
            Database.Server.ServerMaps[bluenpc3.Map].AddNpc(bluenpc3);
            client.Player.View.Role(false);

            #endregion
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(722510, 1))//silver neddle
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                dialog.AddText("You need at least 2 free spaces in your inventory before trying to catch me!").
                                    AddOption("well", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else if (Role.Core.Rate(70))
                            {
                                client.Player.AddFlag(MsgServer.MsgUpdate.Flags.Freeze, 3, true);
                                dialog.AddText("Oh, my god! Narrowly escaped! Bye, bye!").
                                AddOption("Damn", 255).AddAvatar(7).FinalizeDialog();

                            }
                            else
                            {
                                client.Inventory.Remove(722510, 1, stream);
                                if (Role.Core.Rate(7))
                                {
                                    client.Inventory.Add(stream, 722515, 1);
                                    dialog.AddText("Congratulations you received the Secret Command!").
                              AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else if (Role.Core.Rate(10))
                                {
                                    client.Inventory.Add(stream, 722512, 1);
                                    client.Inventory.Add(stream, 722513, 1);
                                    dialog.AddText("Congratulations you received the Aster Necklace, Pinetum Picture!").
                              AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else if (Role.Core.Rate(20))
                                {
                                    client.Inventory.Add(stream, 722512, 1);
                                    dialog.AddText("Congratulations you received the Aster Necklace").
                              AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else
                                {

                                    client.Inventory.Add(stream, 722513, 1);
                                    dialog.AddText("Congratulations you received the Pinetum Picture!").
                              AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();

                                }
                            }
                        }
                        else if (client.Inventory.Contain(722511, 1))//Gold neddle
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("You need at least 3 free spaces in your inventory before trying to catch me!").
                                    AddOption("well", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else if (Role.Core.Rate(60))
                            {
                                client.Player.AddFlag(MsgServer.MsgUpdate.Flags.Freeze, 3, true);
                                dialog.AddText("Oh, my god! Narrowly escaped! Bye, bye!").
                                AddOption("Damn", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                client.Inventory.Remove(722511, 1, stream);
                                if (Role.Core.Rate(1.4))
                                {
                                    client.Inventory.Add(stream, 722515, 1);
                                    dialog.AddText("Congratulations you received the Secret Command!").
                                      AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else
                                {
                                    if (Role.Core.Rate(10))
                                    {
                                        client.Inventory.Add(stream, 722512, 1);
                                        client.Inventory.Add(stream, 722513, 1);
                                        dialog.AddText("Congratulations you received the Aster Necklace, Pinetum Picture!").
                                  AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();
                                    }

                                    if (Role.Core.Rate(30))
                                    {
                                        client.Inventory.Add(stream, 722512, 1);
                                        dialog.AddText("Congratulations you received the Aster Necklace").
                                  AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();
                                    }
                                    else if (Role.Core.Rate(25))
                                    {
                                        client.Inventory.Add(stream, 722513, 1);
                                        dialog.AddText("Congratulations you received the Pinetum Picture!").
                                  AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        client.Inventory.Add(stream, 722514, 1);
                                        dialog.AddText("Congratulations you received the Royal Sword!").
                                  AddOption("Thanks", 255).AddAvatar(7).FinalizeDialog();

                                    }
                                }
                            }
                        }
                        else
                        {

                            client.Player.AddFlag(MsgServer.MsgUpdate.Flags.Freeze, 3, true);
                            dialog.AddText("You don't have any needle! Good luck catching me without it ahah!").
                                   AddOption("LOL ", 255).AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region CaptureTheFlag
        [NpcAttribute(NpcID.CaptureTheFlag)]
        public static void CaptureTheFlag(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What~can~I~do~for~you?")
                            .AddOption("Sign up Capture The Flag.", 5)
                            .AddOption("Claim~the~CTF~Reward.", 4)
                                                .AddOption("Just~passing~by.", 255)
                                                .AddAvatar(123).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CaptureTheFlag.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            if (client.Player.MyGuild != null && client.Player.MyGuild.CTF_Rank >= 1 && client.Player.MyGuild.CTF_Rank <= 9)
                            {
                                if (client.Player.MyGuildMember.CTF_Claimed == 1)
                                {
                                    data.AddText("Sorry, you already claimed the reward.")
            .AddOption("Ah~yes.", 255).AddAvatar(110).FinalizeDialog();
                                    break;
                                }
                                if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader)
                                {
                                    if (client.Player.MyGuild.ClaimCtfReward == 1)
                                    {
                                        data.AddText("Sorry, you already claimed the reward.")
        .AddOption("Ah~yes.", 255).AddAvatar(110).FinalizeDialog();
                                        break;
                                    }
                                    client.Player.MyGuild.ClaimCtfReward = 1;
                                    //client.Player.ConquerPoints += (int)client.Player.MyGuild.GetLeaderReward()[0];
                                    client.Player.Money += (int)client.Player.MyGuild.GetLeaderReward()[1];
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                    client.Player.MyGuildMember.CTF_Claimed = 1;
                                    Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLider from " + client.Player.MyGuild.GuildName + " was rewarded "
                                        + client.Player.MyGuild.GetLeaderReward()[0].ToString() + " ConquerMoney for the domination the CaptureTheFlag rank No."
                                    + client.Player.MyGuild.CTF_Rank.ToString() + " .", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                                }
                                else
                                {
                                    //client.Player.ConquerPoints += (int)client.Player.MyGuildMember.RewardConquerPoints;
                                    client.Player.Money += (int)client.Player.MyGuildMember.RewardMoney;

                                    client.Player.MyGuildMember.CTF_Claimed = 1;

                                    client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, your guild is not top 9.")
             .AddOption("Ah~yes.", 255).AddAvatar(110).FinalizeDialog();
                            }

                        }


                        break;
                    }
                case 6:
                    {
                        client.Teleport(232, 385, 3868);
                        break;
                    }
                case 5:
                    {
                        if (client.Player.MyGuild == null)
                        {
                            data.AddText("Sorry you not have Guild.")
                    .AddAvatar(123).FinalizeDialog();
                            break;
                        }
                        if (!MsgTournaments.MsgSchedules.CaptureTheFlag.Join(client, stream))
                        {
                            data.AddText("The Capture The Flag will open at Every Saturday,21:00-22:00.")
                     .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (Game.MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Alive)
                        {
                            byte RandTele = (byte)Program.GetRandom.Next(1, 14);
                            switch (RandTele)
                            {
                                case 1: client.Teleport(326, 374, 1038); break;
                                case 2: client.Teleport(299, 371, 1038); break;
                                case 3: client.Teleport(293, 352, 1038); break;
                                case 4: client.Teleport(262, 337, 1038); break;
                                case 5: client.Teleport(285, 324, 1038); break;
                                case 6: client.Teleport(315, 289, 1038); break;
                                case 7: client.Teleport(323, 268, 1038); break;
                                case 8: client.Teleport(351, 282, 1038); break;
                                case 9: client.Teleport(371, 305, 1038); break;
                                case 10: client.Teleport(370, 326, 1038); break;
                                case 11: client.Teleport(357, 335, 1038); break;
                                case 12: client.Teleport(333, 330, 1038); break;
                                default: client.Teleport(322, 321, 1038); break;
                            }
                        }
                        else
                        {
                            client.Teleport(349, 340, 1038);
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("A~statue~costs~50,000~silver.~Are~you~sure~that~you~want~to~buy?")
                        .AddOption("Yeah.", 3)
                        .AddOption("No,~thanks.", 255)
                        .AddAvatar(123).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.Money >= 50000)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(123).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 720020);
                            client.Player.Money -= 50000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);

                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~50000~silver.")
                       .AddOption("I~see.", 255)
                       .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.CityWar)]
        public static void CityWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What~can~I~do~for~you?\n");
                        if (MsgSchedules.CityWar.Proces != ProcesType.Alive)
                        {
                            data.AddText("CityWar Winners:\n");
                            byte i = 0;
                            foreach (var bas in MsgSchedules.CityWar.Bases.Values.OrderBy(x => x.Npc.UID))
                            {
                                if (i == 0)
                                    data.AddText($"Phoenix City: [ {(bas.CapturerID == 0 ? "None" : Guild.GuildPoll[bas.CapturerID].GuildName)} ] - [ {(bas.claimed ? "Claimed" : "Not Claimed")} ]\n");
                                else if (i == 1)
                                    data.AddText($"Ape City: [ {(bas.CapturerID == 0 ? "None" : Guild.GuildPoll[bas.CapturerID].GuildName)} ] - [ {(bas.claimed ? "Claimed" : "Not Claimed")} ]\n");
                                else if (i == 2)
                                    data.AddText($"Desert City: [ {(bas.CapturerID == 0 ? "None" : Guild.GuildPoll[bas.CapturerID].GuildName)} ] - [ {(bas.claimed ? "Claimed" : "Not Claimed")} ]\n");
                                else if (i == 3)
                                    data.AddText($"Bird Island: [ {(bas.CapturerID == 0 ? "None" : Guild.GuildPoll[bas.CapturerID].GuildName)} ] - [ {(bas.claimed ? "Claimed" : "Not Claimed")} ]\n");
                                i++;
                            }
                        }
                        data.AddOption("Sign up CityWar.", 5)
                        .AddOption("Claim~the~City War.", 4)
                        .AddOption("Claim~top~5~Killer/Reviver!", 6)
                                            .AddOption("Just~passing~by.", 255)
                                            .AddAvatar(251).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (Game.MsgTournaments.MsgSchedules.CityWar.Proces == MsgTournaments.ProcesType.Dead)
                        {

                            if (client.Player.MyGuild != null)
                            {

                                if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader)
                                {
                                    var pole = MsgSchedules.CityWar.Bases.Values.FirstOrDefault(x => x.CapturerID == client.Player.GuildID && x.claimed == false);
                                    if (pole != null)
                                    {
                                        //client.Player.ConquerPoints += 100;
                                        client.Player.Money += 100;
                                        pole.claimed = true;
                                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLider from " + client.Player.MyGuild.GuildName + " was rewarded "
                                            + 100 + " ConquerMoney for the domination the CityWar .", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                                    }
                                    else
                                    {
                                        data.AddText("Sorry, i don't have any prize for you.")
                            .AddOption("Ah~yes.", 255).AddAvatar(251).FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, your guild is not top 9.")
             .AddOption("Ah~yes.", 255).AddAvatar(251).FinalizeDialog();
                            }

                        }


                        break;
                    }
                case 5:
                    {
                        if (client.Player.MyGuild == null)
                        {
                            data.AddText("Sorry you not have Guild.")
                    .AddAvatar(251).FinalizeDialog();
                            break;
                        }
                        if (MsgTournaments.MsgSchedules.CityWar.Proces != ProcesType.Alive)
                        {
                            data.AddText("The CityWar will open at Everyday ,15:00-16:00.")
                     .AddAvatar(251).FinalizeDialog();
                            break;
                        }
                        client.Teleport(350, 249, 2058);
                        break;
                    }
                case 6:
                    {
                        if (MsgSchedules.CityWar.Proces == ProcesType.Dead)
                        {
                            if (!AtributesStatus.IsWater(client.Player.Class))
                            {
                                var top5kills = MsgSchedules.CityWar.Scoreboards.Values.Where(x => !AtributesStatus.IsWater(x.Class)).OrderByDescending(x => x.MainPoints).Take(5);
                                var rank = 1;
                                bool Exists = false;

                                foreach (var user in top5kills)
                                {
                                    if (client.Player.UID == user.UID)
                                    {
                                        Exists = true;
                                        break;
                                    }
                                    rank++;
                                }
                                if (Exists == false)
                                {
                                    client.CreateBoxDialog("you're not in top 5 killers.");
                                    break;
                                }
                                if (rank == 1 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 1000;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 2 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 800;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 3 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 600;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 4 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 400;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 5 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 200;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else
                                {
                                    client.CreateBoxDialog("You already claimed your reward!");
                                }
                            }
                            else
                            {
                                var top5rev = MsgSchedules.CityWar.Scoreboards.Values.Where(x => AtributesStatus.IsWater(x.Class)).OrderByDescending(x => x.MainPoints).Take(5);
                                var rank = 1;
                                bool Exists = false;
                                foreach (var user in top5rev)
                                {
                                    if (client.Player.UID == user.UID)
                                    {
                                        Exists = true;
                                        break;
                                    }
                                    rank++;
                                }
                                if (Exists == false)
                                {
                                    client.CreateBoxDialog("you're not in top 5 reviver.");
                                    break;
                                }
                                if (rank == 1 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 1000;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 2 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 800;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 3 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 600;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 4 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 400;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 5 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Player.Money += 200;
                                    MsgSchedules.CityWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else
                                {
                                    client.CreateBoxDialog("You already claimed your reward!");
                                }
                            }

                        }
                        break;
                    }

            }
        }
        #endregion
        #region ClassicGoods
        //[NpcAttribute(NpcID.ClassicGod)]
        //public static void ClassicGod(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        //{
        //    Dialog data = new Dialog(client, stream);

        //    switch (Option)
        //    {
        //        case 0:
        //            {
        //                data.AddText("I am the Classic God. I can give you rewards in return for Classic Points that you have earned. Type @ClassicPoints to check yours.")
        //           .AddOption("Check my Online Points", 1)
        //           .AddOption("Trade in 1 Classic Point", 2)
        //           .AddOption("Just passing by. ", 255)
        //           .AddAvatar(63).FinalizeDialog();


        //                break;
        //            }
        //        case 1:
        //            {

        //                data.AddText("Currently you have " + client.Player.ClassicPoints + " Classic Points! Make sure you keep your account logged in so you can exchange them for rewards!")
        //                .AddOption("Thanks. ", 255)
        //                .AddAvatar(63).FinalizeDialog();
        //                break;
        //            }
        //        case 2:
        //            {
        //                if (client.Player.ClassicPoints >= 1 && client.Inventory.HaveSpace(2))
        //                {
        //                    client.Player.ClassicPoints -= 1;  // roll order: garment, cloudbox, clouddiamond, dbscroll, virtue pts, vote pts, metscroll
        //                    if (MyMath.Success(1))
        //                    {

        //                        var RndAccessory = Database.ItemType.NormalGarments;
        //                        var Position = Program.GetRandom.Next(0, RndAccessory.Count);
        //                        var ReceiveItem = RndAccessory.ToArray()[Position];
        //                        client.Inventory.Add(stream, ReceiveItem);

        //                        client.SendSysMesage("You gained a random Garment!", MsgMessage.ChatMode.System);
        //                        Program.SendGlobalPackets.Enqueue(new MsgMessage("" + client.Player.Name + " turned in a Classic Point to ClassicGod and won a random Garment!", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeftSystem).GetArray(stream));
        //                    }
        //                    else if (MyMath.Success(5))
        //                    {
        //                        client.Inventory.Add(stream, 720028, 1, 1);
        //                        client.SendSysMesage("You gained a DBScroll!", MsgMessage.ChatMode.System);

        //                    }
        //                    else if (MyMath.Success(1.25))
        //                    {

        //                        client.Inventory.Add(stream, 720028, 2, 1);
        //                        client.SendSysMesage("You gained 2 DBScrolls!", MsgMessage.ChatMode.System);
        //                        Program.SendGlobalPackets.Enqueue(new MsgMessage("" + client.Player.Name + " turned in a Classic Point to ClassicGod and won 2 DBScrolls!", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeftSystem).GetArray(stream));
        //                    }
        //                    else if (MyMath.Success(20))
        //                    {
        //                        client.Player.VirtutePoints += 2000;
        //                        client.SendSysMesage("You gained 2,000 Virtue Points!", MsgMessage.ChatMode.System);

        //                    }
        //                    else if (MyMath.Success(7.5))
        //                    {
        //                        client.Player.VirtutePoints += 2000;
        //                        client.SendSysMesage("You gained 2,000 Virtue Points!", MsgMessage.ChatMode.System);

        //                    }
        //                    else if (MyMath.Success(0.9))
        //                    {
        //                        client.Player.VirtutePoints += 2000;
        //                        client.SendSysMesage("You gained 2,000 Virtue Points!", MsgMessage.ChatMode.System);
        //                        Program.SendGlobalPackets.Enqueue(new MsgMessage("" + client.Player.Name + " turned in a Classic Point to ClassicGod and won 2 ClassicPoints!", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeftSystem).GetArray(stream));
        //                    }
        //                    else if (MyMath.Success(12.5))
        //                    {
        //                        client.Player.Money += 250000;//ba
        //                        client.SendSysMesage("You gained 250,000 silvers!", MsgMessage.ChatMode.System);

        //                    }
        //                    else if (MyMath.Success(5))
        //                    {
        //                        client.Player.Money += 500000;
        //                        client.SendSysMesage("You gained 500,000 silvers!", MsgMessage.ChatMode.System);

        //                    }
        //                    else if (MyMath.Success(3))
        //                    {
        //                        client.Player.Money += 1000000;
        //                        client.SendSysMesage("You gained 1,000,000 silvers!", MsgMessage.ChatMode.System);

        //                    }
        //                    else if (MyMath.Success(15))
        //                    {

        //                        client.Inventory.Add(stream, 720027, 2, 1);
        //                        client.SendSysMesage("You gained 2 MeteorScrolls!", MsgMessage.ChatMode.System);

        //                    }
        //                    else
        //                    {
        //                        client.Inventory.Add(stream, 720027, 1, 1);
        //                        client.SendSysMesage("You gained a MeteorScroll!", MsgMessage.ChatMode.System);

        //                    }
        //                }
        //                else
        //                {
        //                    client.SendSysMesage("You don't have 1 Classic Point or you don't have 2 spaces in your inventory.", MsgMessage.ChatMode.System);

        //                }
        //                break;
        //            }

        //    }
        //}
        #endregion
        #region SocketsSpammer
        [NpcAttribute(NpcID.SocketsSpammer)]
        public static void SocketsSpammer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hi. You can try to open one or two socket in your gears by spamming MeteorScrolls, It maybe your lucky day!. More MeatorsScrolls more better chance. Would you like to try?")
                            //.AddOption("1 MeteorScroll", 1)
                            //.AddOption("5 MeteorScrolls", 2)
                            .AddOption("10 MeteorScrolls", 3)
                            .AddOption("I~was~just~leaving.", 255).AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 1:
                case 2:
                case 3:
                    {
                        if (Option == 1 || Option == 2 || Option == 3)
                        {
                            data.AddText("Choose the equipment you want to try to open socket into it.")
                            .AddOption("Headgear", (byte)(Option * 10 + 1))
                            .AddOption("Necklace/Bag", (byte)(Option * 10 + 2))
                            .AddOption("Armor", (byte)(Option * 10 + 3))
                            .AddOption("Weapon", (byte)(Option * 10 + 4))
                            .AddOption("Shield", (byte)(Option * 10 + 5))
                            .AddOption("Ring", (byte)(Option * 10 + 6))
                            .AddOption("Boots", (byte)(Option * 10 + 8))
                            .AddAvatar(48).FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                    {
                        MsgGameItem Item = null;
                        client.Equipment.TryGetEquip((Role.Flags.ConquerItem)(Option - 10), out Item);
                        if (Option >= 11 && Option <= 18)
                        {
                            //if (Item.Bound == 1)
                            //{
                            //    data.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                            //    data.AddOption("Oh,~I~see.~Farewell.");
                            //    data.AddAvatar(63).FinalizeDialog();
                            //    break;
                            //}
                            if (Option == 15)
                            {
                                if (Item == null)
                                {
                                    data.AddText("You don't have a shield/weapon.")
                                .AddOption("I~see.")
                                .AddAvatar(48).FinalizeDialog();
                                }
                            }
                            if (Item != null)
                            {
                                if (Item.SocketOne == Role.Flags.Gem.NoSocket || Item.SocketTwo == Role.Flags.Gem.NoSocket)
                                {
                                    if (!client.Agree)
                                    {
                                        data.AddText("Are you sure that you want to spam 1 MeteorScroll ?")
                                .AddOption("Yes, i'm sure.", Convert.ToByte(Option))
                                .AddOption("No, thanks.")
                                .AddAvatar(48).FinalizeDialog();
                                        client.Agree = true;
                                    }
                                    else
                                    {
                                        client.Agree = false;
                                        if (client.Inventory.Contain(720027, 1))
                                        {
                                            for (byte i = 0; i < 1; i++)
                                                client.Inventory.Remove(720027, 1, stream);
                                            if (Item.SocketOne == Role.Flags.Gem.NoSocket)
                                            {
                                                if (Common.PercentSuccess(15))
                                                {
                                                    Item.SocketOne = Role.Flags.Gem.EmptySocket;
                                                    Item.Mode = Role.Flags.ItemMode.Update;
                                                    Item.Send(client, stream);
                                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                                    data.AddText("Congratulate, You have got 1 socket.")
                                            .AddOption("Thank you.")
                                            .AddAvatar(48).FinalizeDialog();
                                                    string amessaj = "";
                                                    if (Role.Core.IsBoy(client.Player.Body))
                                                        amessaj = "his";
                                                    else if (Role.Core.IsGirl(client.Player.Body))
                                                        amessaj = "her";
                                                    TheChosenProject.Game.MsgServer.MsgMessage messaj2 = new TheChosenProject.Game.MsgServer.MsgMessage("Congratulations, " + client.Player.Name + " get 1 Socket in " + amessaj + ", " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " !", TheChosenProject.Game.MsgServer.MsgMessage.MsgColor.red, TheChosenProject.Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage);
                                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("As a very lucky player, " + client.Player.Name + " has added the 1 socket to his/her " + Database.Server.ItemsBase[Item.ITEM_ID].Name + "", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession5");

                                                }
                                            }
                                            else if (Item.SocketTwo == Role.Flags.Gem.NoSocket)
                                            {
                                                if (Common.PercentSuccess(7))
                                                {
                                                    Item.SocketTwo = Role.Flags.Gem.EmptySocket;
                                                    Item.Mode = Role.Flags.ItemMode.Update;
                                                    Item.Send(client, stream);
                                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                                    data.AddText("Congratulate, You have got 2 socket.")
                               .AddOption("Thank you.")
                               .AddAvatar(48).FinalizeDialog();
                                                    string amessaj = "";
                                                    if (Role.Core.IsBoy(client.Player.Body))
                                                        amessaj = "his";
                                                    else if (Role.Core.IsGirl(client.Player.Body))
                                                        amessaj = "her";
                                                    TheChosenProject.Game.MsgServer.MsgMessage messaj2 = new TheChosenProject.Game.MsgServer.MsgMessage("Congratulations, " + client.Player.Name + " get 2 Socket in " + amessaj + ", " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " !", TheChosenProject.Game.MsgServer.MsgMessage.MsgColor.red, TheChosenProject.Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage);
                                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("As a very lucky player, " + client.Player.Name + " has added the 2 socket to his/her " + Database.Server.ItemsBase[Item.ITEM_ID].Name + "", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession4");

                                                }
                                            }
                                        }
                                        else
                                        {
                                            data.AddText("You must have 1 Meteorscroll to craft it!")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                                        }
                                    }
                                }
                                else
                                {
                                    data.AddText("This item is already two socket.")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You don't have any equipment in that slot.")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                    {
                        MsgGameItem Item = null;
                        client.Equipment.TryGetEquip((Role.Flags.ConquerItem)(Option - 20), out Item);
                        if (Option >= 21 && Option <= 28)
                        {
                            //if (Item.Bound == 1)
                            //{
                            //    data.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                            //    data.AddOption("Oh,~I~see.~Farewell.");
                            //    data.AddAvatar(63).FinalizeDialog();
                            //    break;
                            //}
                            if (Option == 25)
                            {
                                if (Item == null)
                                {
                                    data.AddText("You don't have a shield/weapon.")
                                .AddOption("I~see.")
                                .AddAvatar(48).FinalizeDialog();
                                }
                            }
                            if (Item != null)
                            {
                                if (Item.SocketOne == Role.Flags.Gem.NoSocket || Item.SocketTwo == Role.Flags.Gem.NoSocket)
                                {
                                    if (!client.Agree)
                                    {
                                        data.AddText("Are you sure that you want to spam 5 MeteorScrolls ?")
                                .AddOption("Yes, i'm sure.", Convert.ToByte(Option))
                                .AddOption("No, thanks.")
                                .AddAvatar(48).FinalizeDialog();
                                        client.Agree = true;
                                    }
                                    else
                                    {
                                        client.Agree = false;
                                        if (client.Inventory.Contain(720027, 5))
                                        {
                                            for (byte i = 0; i < 5; i++)
                                                client.Inventory.Remove(720027, 1, stream);
                                            if (Item.SocketOne == Role.Flags.Gem.NoSocket)
                                            {
                                                if (Common.PercentSuccess(15))
                                                {
                                                    Item.SocketOne = Role.Flags.Gem.EmptySocket;
                                                    Item.Mode = Role.Flags.ItemMode.Update;
                                                    Item.Send(client, stream);
                                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                                    data.AddText("Congratulate, You have got 1 socket.")
                               .AddOption("Thank you.")
                               .AddAvatar(48).FinalizeDialog();
                                                    string amessaj = "";
                                                    if (Role.Core.IsBoy(client.Player.Body))
                                                        amessaj = "his";
                                                    else if (Role.Core.IsGirl(client.Player.Body))
                                                        amessaj = "her";
                                                    TheChosenProject.Game.MsgServer.MsgMessage messaj2 = new TheChosenProject.Game.MsgServer.MsgMessage("Congratulations, " + client.Player.Name + " get 1 Socket in " + amessaj + ", " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " !", TheChosenProject.Game.MsgServer.MsgMessage.MsgColor.red, TheChosenProject.Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage);
                                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("As a very lucky player, " + client.Player.Name + " has added the 1 socket to his/her " + Database.Server.ItemsBase[Item.ITEM_ID].Name + "", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession5");

                                                }
                                            }
                                            else if (Item.SocketTwo == Role.Flags.Gem.NoSocket)
                                            {
                                                if (Common.PercentSuccess(7))
                                                {
                                                    Item.SocketTwo = Role.Flags.Gem.EmptySocket;
                                                    Item.Mode = Role.Flags.ItemMode.Update;
                                                    Item.Send(client, stream);
                                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                                    data.AddText("Congratulate, You have got 2 socket.")
                               .AddOption("Thank you.")
                               .AddAvatar(48).FinalizeDialog();
                                                    string amessaj = "";
                                                    if (Role.Core.IsBoy(client.Player.Body))
                                                        amessaj = "his";
                                                    else if (Role.Core.IsGirl(client.Player.Body))
                                                        amessaj = "her";
                                                    TheChosenProject.Game.MsgServer.MsgMessage messaj2 = new TheChosenProject.Game.MsgServer.MsgMessage("Congratulations, " + client.Player.Name + " get 2 Socket in " + amessaj + ", " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " !", TheChosenProject.Game.MsgServer.MsgMessage.MsgColor.red, TheChosenProject.Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage);
                                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("As a very lucky player, " + client.Player.Name + " has added the 2 socket to his/her " + Database.Server.ItemsBase[Item.ITEM_ID].Name + "", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession4");

                                                }
                                            }
                                        }
                                        else
                                        {
                                            data.AddText("You must have 5 Meteorscrolls to craft it!")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                                        }
                                    }
                                }
                                else
                                {
                                    data.AddText("This item is already two socket.")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You don't have any equipment in that slot.")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                    {
                        MsgGameItem Item = null;
                        client.Equipment.TryGetEquip((Role.Flags.ConquerItem)(Option - 30), out Item);
                        if (Option >= 31 && Option <= 38)
                        {
                            //if (Item.Bound == 1)
                            //{
                            //    data.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                            //    data.AddOption("Oh,~I~see.~Farewell.");
                            //    data.AddAvatar(63).FinalizeDialog();
                            //    break;
                            //}
                            if (Option == 35)
                            {
                                if (Item == null)
                                {
                                    data.AddText("You don't have a shield/weapon.")
                                .AddOption("I~see.")
                                .AddAvatar(48).FinalizeDialog();
                                }
                            }
                            if (Item != null)
                            {
                                if (Item.SocketOne == Role.Flags.Gem.NoSocket || Item.SocketTwo == Role.Flags.Gem.NoSocket)
                                {
                                    if (!client.Agree)
                                    {
                                        data.AddText("Are you sure that you want to spam 10 MeteorScroll ?")
                                .AddOption("Yes, i'm sure.", Convert.ToByte(Option))
                                .AddOption("No, thanks.")
                                .AddAvatar(48).FinalizeDialog();
                                        client.Agree = true;
                                    }
                                    else
                                    {
                                        client.Agree = false;
                                        if (client.Inventory.Contain(720027, 10))
                                        {
                                            for (byte i = 0; i < 10; i++)
                                                client.Inventory.Remove(720027, 1, stream);
                                            if (Item.SocketOne == Role.Flags.Gem.NoSocket)
                                            {
                                                if (Common.PercentSuccess(ServerKernel.ONE_SOC_RATE))//15
                                                {
                                                    Item.SocketOne = Role.Flags.Gem.EmptySocket;
                                                    Item.Mode = Role.Flags.ItemMode.Update;
                                                    Item.Send(client, stream);
                                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                                    data.AddText("Congratulate, You have got 1 socket.")
                               .AddOption("Thank you.")
                               .AddAvatar(48).FinalizeDialog();
                                                    string amessaj = "";
                                                    if (Role.Core.IsBoy(client.Player.Body))
                                                        amessaj = "his";
                                                    else if (Role.Core.IsGirl(client.Player.Body))
                                                        amessaj = "her";
                                                    TheChosenProject.Game.MsgServer.MsgMessage messaj2 = new TheChosenProject.Game.MsgServer.MsgMessage("Congratulations, " + client.Player.Name + " get 1 Socket in " + amessaj + ", " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " !", TheChosenProject.Game.MsgServer.MsgMessage.MsgColor.red, TheChosenProject.Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage);
                                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("As a very lucky player, " + client.Player.Name + " has added the 1 socket to his/her " + Database.Server.ItemsBase[Item.ITEM_ID].Name + "", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession5");

                                                }
                                            }
                                            else if (Item.SocketTwo == Role.Flags.Gem.NoSocket)
                                            {
                                                if (Common.PercentSuccess(ServerKernel.TWO_SOC_RATE))//7
                                                {
                                                    Item.SocketTwo = Role.Flags.Gem.EmptySocket;
                                                    Item.Mode = Role.Flags.ItemMode.Update;
                                                    Item.Send(client, stream);
                                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);

                                                    data.AddText("Congratulate, You have got 2 socket.")
                               .AddOption("Thank you.")
                               .AddAvatar(48).FinalizeDialog();
                                                    string amessaj = "";
                                                    if (Role.Core.IsBoy(client.Player.Body))
                                                        amessaj = "his";
                                                    else if (Role.Core.IsGirl(client.Player.Body))
                                                        amessaj = "her";
                                                    TheChosenProject.Game.MsgServer.MsgMessage messaj2 = new TheChosenProject.Game.MsgServer.MsgMessage("Congratulations, " + client.Player.Name + " get 2 Socket in " + amessaj + ", " + Database.Server.ItemsBase[Item.ITEM_ID].Name + " !", TheChosenProject.Game.MsgServer.MsgMessage.MsgColor.red, TheChosenProject.Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage);
                                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("As a very lucky player, " + client.Player.Name + " has added the 2 socket to his/her " + Database.Server.ItemsBase[Item.ITEM_ID].Name + "", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "accession4");

                                                }
                                            }
                                        }
                                        else
                                        {
                                            data.AddText("You must have 10 Meteorscrolls to craft it!")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                                        }
                                    }
                                }
                                else
                                {
                                    data.AddText("This item is already two socket.")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You don't have any equipment in that slot.")
                               .AddOption("I~see.")
                               .AddAvatar(48).FinalizeDialog();
                            }
                        }
                        break;
                    }
            }
        }
        #endregion
        #region GeneralSam
        [NpcAttribute(NpcID.GeneralSam)]
        public static void GeneralSam(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("No matter how plain a weapon may be, if reinforcement can be done on it, it will be powerful. You need to bring me DragonBall if you want me to open up the 1st")
                            .AddText("~Socket in your main weapon. While after that, 5 DragonBalls is needed to make the 2nd Socket in that main weapon. Want help?")
                            .AddOption("Make~the~1st~Socket.", 1)
                            .AddOption("Make~the~2nd~Socket.", 10)
                            .AddOption("I~was~just~leaving.", 255).AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("I`ll charge a DragonBall to make the 1st Socket in your main weapon. Are you ready?")
                            .AddOption("Yes!", 2)
                            .AddOption("Wait,~I`m~not~ready,~yet!", 255)
                            .AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        MsgGameItem Item = null;
                        if (!client.Equipment.TryGetEquip(Role.Flags.ConquerItem.RightWeapon, out Item))
                        {
                            data.AddText("Wait, you must be wearing an main weapon first.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        if (Item.SocketOne != Role.Flags.Gem.NoSocket)
                        {
                            data.AddText("Wait, you`ve already opened up the 1st Socket in your main weapon. No need to do it again!")
                            .AddOption("I~see.", 255)
                            .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(1088000, 1, Item.Bound))
                        {
                            data.AddText("Wait, you need DragonBall same bound state as your weapon.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Remove(1088000, 1, stream);
                        Item.SocketOne = Role.Flags.Gem.EmptySocket;
                        Item.Mode = Role.Flags.ItemMode.Update;
                        Item.Send(client, stream);
                        client.Equipment.QueryEquipment(client.Equipment.Alternante);
                        break;
                    }
                case 10:
                    {
                        data.AddText("Are you sure you want to pay a 5 DragonBalls to open up the 2nd Socket in your main weapon?")
                            .AddOption("Yes!", 12)
                            .AddOption("Wait,~I`m~not~ready,~yet!", 255)
                            .AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        MsgGameItem Item = null;
                        if (!client.Equipment.TryGetEquip(Role.Flags.ConquerItem.RightWeapon, out Item))
                        {
                            data.AddText("Wait, you must be wearing an main weapon first.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        if (Item.SocketOne == Role.Flags.Gem.NoSocket)
                        {
                            data.AddText("Wait, you need to have 1 sock main weapon first.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        if (Item.SocketTwo != Role.Flags.Gem.NoSocket)
                        {
                            data.AddText("Wait, you`ve already had the 2nd Socket of your main weapon opened up. No need to do it again!")
                            .AddOption("I~see.", 255)
                            .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        if (!client.Inventory.Contain(1088000, 5))
                        {
                            data.AddText("Wait, you need 5 DragonBalls same bound state as your weapon.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(48).FinalizeDialog();
                            break;
                        }
                        client.Inventory.Remove(1088000, 5, stream);
                        Item.SocketTwo = Role.Flags.Gem.EmptySocket;
                        Item.Mode = Role.Flags.ItemMode.Update;
                        Item.Send(client, stream);
                        client.Equipment.QueryEquipment(client.Equipment.Alternante);
                        break;
                    }
            }
        }
        #endregion
        #region 1st reborn
        [Npc(NpcID.Eternity)]
        public unsafe static void Eternity(GameClient client, Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I devote all my life to the research of eternity. And finally I know the secret of rebirth! Well, anything I can help you with?")
                       .AddOption("1st~Rebirth.", 1)
                       .AddOption("Just~passing~by.", 255)
                       .AddAvatar(67).FinalizeDialog();

                        break;
                    }


                case 1:
                    {
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1) || client.Inventory.Contain(721259, 1, 1))
                            {
                                data.AddText("There are two kinds of reborns. One is the normal one and the second one is blessed.")
                                    .AddText("The normal reborn will give you the chance to get a Super Gem and the blessed reborn will set a -1 into one of your equipment that you wear during the reborn. What do you chose?")
                             .AddOption("Normal reborn.", 2)
                             .AddOption("Blessed reborn.", 3)
                             .AddOption("I`ll~think~about~it.", 255)
                             .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have CelestialStone.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~haven`t~reached~the~highest~rank~yet.~Please~work~harder. You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }

                case 2:
                    {
                        data.AddText("Select the super gem you desire.")
                      .AddOption("SuperPhoenixGem.", 203)
                      .AddOption("SuperDragonGem.", 213)
                      .AddOption("SuperFuryGem.", 223)
                      .AddOption("SuperRainbowGem.", 233)
                      .AddOption("SuperVioletGem.", 253)
                      .AddOption("SuperMoonGem.", 254)
                      .AddOption("SuperKylinGem", 243)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 203:
                case 213:
                case 223:
                case 233:
                case 253:
                case 254:
                case 243:
                    {
                        if (client.Player.Reborn == 0)
                        {
                            client.RebornGem = (uint)(Option % 100);
                            if (client.RebornGem == 54)
                                client.RebornGem = 63;
                        }
                        data.AddText("Select the class you want to reborn in.")
                      .AddOption("Trojan.", 11)
                      .AddOption("Warrior.", 21)
                      .AddOption("Archer.", 41)
                      .AddOption("WaterTaoist.", 132)
                      .AddOption("FireTaoist.", 142)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Select the class you want to reborn in.")
                    .AddOption("Trojan.", 11)
                    .AddOption("Warrior.", 21)
                    .AddOption("Archer.", 41)
                    .AddOption("WaterTaoist.", 132)
                    .AddOption("FireTaoist.", 142)
                    .AddOption("I`ll~think~about~it.", 255)
                    .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 11:
                case 21:
                case 41:
                case 132:
                case 142:
                    {

                        if (!client.Inventory.HaveSpace(4))
                        {
                            data.AddText("Sorry, but you need atleast 4 free spaces in your inventory.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 45 && ItemType.IsArrow(client.Equipment.LeftWeapon))
                        {
                            data.AddText("Sorry, but you need to remove arrow first.")
                              .AddOption("I~see.", 255)
                              .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1) || client.Inventory.Contain(721259, 1, 1))
                            {
                                client.Inventory.Remove(721259, 1, stream);
                                if (client.RebornGem != 0)
                                {
                                    client.Inventory.Add(stream, (uint)(700000 + client.RebornGem), 1);
                                    client.RebornGem = 0;

                                }
                                else
                                {
                                    foreach (var item in client.Equipment.CurentEquip)
                                    {

                                        {
                                            if (item.Bless == 0)
                                            {
                                                item.Bless = 1;
                                                item.Mode = Role.Flags.ItemMode.Update;
                                                item.Send(client, stream);
                                                break;
                                            }
                                        }
                                    }
                                }
                                switch (Option)
                                {

                                    case 11:
                                    case 21:
                                        {
                                            client.Inventory.Add(stream, 410077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Poison);
                                            break;
                                        }
                                    case 41:
                                        {
                                            if (client.Player.Class == 45)
                                            {
                                                client.Inventory.Add(stream, 500077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Stigma);//BAHAA
                                            }
                                            else
                                            {
                                                client.Inventory.Add(stream, 500077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.None);//BAHAA
                                            }
                                            break;
                                        }
                                    case 132:
                                    case 142:
                                        {
                                            client.Inventory.Add(stream, 421077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.MP);
                                            break;
                                        }
                                }

                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have CelatialStone.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1) || client.Inventory.Contain(723701, 1, 1))
                            {
                                client.Inventory.Remove(723701, 1, stream);
                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have ExemptionToken.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }


                        break;
                    }
            }
        }
        #endregion
        #region 2nd reborn

        [Npc(NpcID.Alex)]
        public unsafe static void Alex(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I devote all my life to the research of eternity. And finally I know the secret of rebirth! Well, anything I can help you with?");
                    //data.AddOption("1st~Rebirth.", 1);
                    data.AddOption("2nd~Rebirth.", 4);
                    //data.AddOption("Reincarnation.", 5);
                    //data.AddOption("Reallot~my~Attribute~Points.", 8);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 8:
                    data.AddText("Reborn~level~70+~players~can~redistribute~their~attribute~points~at~the~cost~of~a~dragonball.");
                    data.AddOption("I~will~reallot~my~points.", 9).AddOption("Let~me~think~it~over.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 9:
                    if (client.Player.Level >= 70 && client.Player.Reborn > 0)
                    {
                        if (client.Inventory.Contain(1088000u, 1u, 0))
                        {
                            client.Inventory.Remove(1088000u, 1u, stream);
                            client.Player.Agility = 0;
                            client.Player.Strength = 0;
                            client.Player.Vitality = 1;
                            client.Player.Spirit = 0;
                            client.CreateBoxDialog("You have successfully reloaded your attribute points.");
                            if (client.Player.Reborn == 0)
                            {
                                client.Player.Atributes = 0;
                                DataCore.AtributeStatus.ResetStatsNonReborn(client.Player);
                                if (AtributesStatus.IsWater(client.Player.Class))
                                {
                                    if (client.Player.Level > 110)
                                        client.Player.Atributes = (ushort)((client.Player.Level - 110) * 3 + client.Player.ExtraAtributes);
                                }
                                else if (client.Player.Level > 120)
                                {
                                    client.Player.Atributes = (ushort)((client.Player.Level - 120) * 3 + client.Player.ExtraAtributes);
                                }
                            }
                            else if (client.Player.Reborn == 1)
                            {
                                client.Player.Atributes = (ushort)(Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                            }
                            else
                            {
                                if (client.Player.SecoundeRebornLevel == 0)
                                    client.Player.SecoundeRebornLevel = 130;
                                client.Player.Atributes = (ushort)(Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) + Server.RebornInfo.ExtraAtributePoints(client.Player.SecoundeRebornLevel, client.Player.SecondClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                            }
                            client.Player.SendUpdate(stream, client.Player.Strength, MsgUpdate.DataType.Strength);
                            client.Player.SendUpdate(stream, client.Player.Agility, MsgUpdate.DataType.Agility);
                            client.Player.SendUpdate(stream, client.Player.Spirit, MsgUpdate.DataType.Spirit);
                            client.Player.SendUpdate(stream, client.Player.Vitality, MsgUpdate.DataType.Vitality);
                            client.Player.SendUpdate(stream, client.Player.Atributes, MsgUpdate.DataType.Atributes);
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have one DragonBall.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You~cannot~reallot~your~ability~points~unless~you~are~reborn~and~above~level~70.");
                        data.AddOption("I~see", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 5:
                    data.AddText("From now on, have total control of your life! If you've been Reborn twice and are at least Level 110, just bring me some Oblivion Dew and I'll help you become Reincarnated! After the Reincarnation, your class skills will revert to level 0,");
                    data.AddText("~but they`ll return to their previous levels when you reach Level 110, again. If your classes have been the same for all three lives, including your current one, you can learn the Pure Skills from your class trainer,");
                    data.AddText("~in the job center.");
                    data.AddOption("I~want~to~get~Reincarnated.", 6);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.Reborn == 2 && (client.Inventory.Contain(711083u, 1u, 1) || client.Inventory.Contain(711083u, 1u, 0)))
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 485u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                    }
                    else
                    {
                        data.AddText("You have not been Reborn twice. I`m afraid you will not withstand the power of the Oblivion Dew. Come to me when you get stronger.");
                        data.AddOption("Got~it!~Thanks!", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 1:
                    if (client.Player.Reborn == 0 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(721259u, 1u, 0) || client.Inventory.Contain(721259u, 1u, 1))
                        {
                            data.AddText("There are two kinds of reborns. One is the normal one and the second one is blessed.");
                            data.AddText("The normal reborn will give you the chance to get a Super Gem and the blessed reborn will set a -1 into one of your equipment that you wear during the reborn. What do you chose?");
                            data.AddOption("Normal reborn.", 2);
                            data.AddOption("Blessed reborn.", 3);
                            data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have CelestialStone.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You~haven`t~reached~the~highest~rank~yet.~Please~work~harder. You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 4:
                    if (client.Player.Reborn >= 1 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(723701u, 1u, 0) || client.Inventory.Contain(723701u, 1u, 1))
                        {
                            data.AddText("You don't worry, it's not gonna hurt you a bit when getting the third life. You just need an exemption token and it's all going to be fine.");
                            data.AddOption("Here is the ExemptionToken.", 3);
                            data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have ExemptionToken.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~you~are~ineligible~for~second~rebirth.~Please~wait~until~you~are~a~level~120~reborn~person.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("Select the super gem you desire.");
                    data.AddOption("SuperPhoenixGem.", 203);
                    data.AddOption("SuperDragonGem.", 213);
                    data.AddOption("SuperFuryGem.", 223);
                    data.AddOption("SuperRainbowGem.", 233);
                    data.AddOption("SuperVioletGem.", 253);
                    data.AddOption("SuperMoonGem.", 254);
                    data.AddOption("SuperKylinGem", 243);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 203:
                case 213:
                case 223:
                case 233:
                case 243:
                case 253:
                case 254:
                    if (client.Player.Reborn == 0)
                    {
                        client.RebornGem = (uint)((int)Option % 100);
                        if (client.RebornGem == 254)
                            client.RebornGem = 263u;
                    }
                    data.AddText("Select the class you want to reborn in.");
                    data.AddOption("Trojan.", 11);
                    data.AddOption("Warrior.", 21);
                    data.AddOption("Archer.", 41);
                    data.AddOption("WaterTaoist.", 132);
                    data.AddOption("FireTaoist.", 142);
                    //data.AddOption("Ninja.", 51);
                    //data.AddOption("Monk", 61);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 3:
                    data.AddText("Select the class you want to reborn in.");
                    data.AddOption("Trojan.", 11);
                    data.AddOption("Warrior.", 21);
                    data.AddOption("Archer.", 41);
                    data.AddOption("WaterTaoist.", 132);
                    data.AddOption("FireTaoist.", 142);
                    //data.AddOption("Ninja.", 51);
                    //data.AddOption("Monk", 61);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 11:
                case 21:
                case 41:
                case 51:
                case 61:
                case 71:
                case 81:
                case 132:
                case 142:
                case 161:
                    if (!client.Inventory.HaveSpace(4))
                    {
                        data.AddText("Sorry, but you need atleast 4 free spaces in your inventory.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    else if (client.Player.Reborn == 0 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(721259u, 1u, 0) || client.Inventory.Contain(721259u, 1u, 1))
                        {
                            client.Inventory.Remove(721259u, 1u, stream);
                            if (client.RebornGem != 0)
                                client.RebornGem = 0u;
                            else
                            {
                                MsgGameItem[] curentEquip;
                                curentEquip = client.Equipment.CurentEquip;
                                foreach (MsgGameItem item in curentEquip)
                                {
                                    if (item.Position != 12 && item.Bless == 0)
                                    {
                                        item.Bless = 1;
                                        item.Mode = Flags.ItemMode.Update;
                                        item.Send(client, stream);
                                        break;
                                    }
                                }
                            }
                            switch (Option)
                            {
                                case 11:
                                case 21:
                                case 51:
                                case 61:
                                case 71:
                                case 81:
                                case 161:
                                    client.Inventory.Add(stream, 410077u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false, Flags.ItemEffect.Poison);
                                    break;
                                case 41:
                                    if (client.Player.Class == 45)
                                        client.Inventory.Add(stream, 500077u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false, Flags.ItemEffect.Stigma);
                                    else
                                        client.Inventory.Add(stream, 500077u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false, Flags.ItemEffect.None);
                                    break;
                                case 132:
                                case 142:
                                    client.Inventory.Add(stream, 421077u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false, Flags.ItemEffect.MP);
                                    break;
                            }
                            Server.RebornInfo.Reborn(client.Player, Option, stream);
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have CelatialStone.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    else if (client.Player.Reborn == 1 && ((client.Player.Level >= 110 && client.Player.Class == 135) || ((client.Player.Level >= 120) & ((int)client.Player.Class % 10 == 5))))
                    {
                        if (client.Inventory.Contain(723701u, 1u, 0) || client.Inventory.Contain(723701u, 1u, 1))
                        {
                            client.Inventory.Remove(723701u, 1u, stream);
                            client.Inventory.Add(stream, 723756, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Server.RebornInfo.Reborn(client.Player, Option, stream);
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have ExemptionToken.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(67).FinalizeDialog();
                        }
                    }
                    break;
            }
        }
        #endregion
        #region BossDomination
        [NpcAttribute(NpcID.BossDomination)]
        public static void BossDomination(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        //bool righthour = DateTime.Now.Hour == 10 || DateTime.Now.Hour == 23;
                        //bool rightmin = DateTime.Now.Minute == 36;
                        var GMap = Database.Server.ServerMaps[3020];
                        var mobs = GMap.View.GetAllMapRoles(MapObjectType.Monster).Where(p => (p as MonsterRole).Family.SpawnCount <= 0 && p.Alive);

                        //if (righthour && rightmin)
                        //{
                        //    if (mobs.Count() == 0)
                        //    {
                        //        for (int i = 0; i < 4; i++)
                        //        {
                        //            ushort X = 0, Y = 0;
                        //            GMap.GetRandCoord(ref X, ref Y);
                        //            Database.Server.AddMapMonster(stream, GMap, 6699, X, Y, 1, 1, 1);
                        //            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Minotaurs at BossDomination has spawned join the event and, kill them!", Game.MsgServer.MsgMessage.MsgColor.red, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                        //            client.SendSysMesage("The Bosses Domination start! Hurry to kill them all.", ChatMode.System);
                        //            string MSG;
                        //            MSG = "Minotaurs at BossDomination has spawned join the event and, kill them!";
                        //            Program.SendGlobalPackets.Enqueue(new MsgMessage(MSG, MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk).GetArray(stream));

                        //        }
                        //    }
                        //}

                        if (mobs.Count() == 0)
                        {
                            data.Text("Bosses Domination event starts everyday at specific hours,\n");
                            data.Text("the prizes are horrible,\n the dreamhell is invaded by Gravebeast,\n");
                            data.Text("you have to kill all Minotaurs to spawn the Gravebeast\n");
                            data.Text("------------------------------------------------------\n");
                            data.Text("spawn schedule : Everyday at (10:36, 23:36)\n");
                            data.Text("------------------------------------------------------\n");
                            //data.Text("Prizes:\n");
                            //data.Text("Minotaurs: (3x+2Stone, 1xPowerExpball, LifeFruitBasket, 1H-VIP)\n");
                            //data.Text("Gravebeast: (3x +3Stone, 3x 1H-VIP, 3x 5KK GoldBullion, 1xUltimatePack)\n");
                            //data.Text("------------------------------------------------------\n");
                            data.AddOption("Statue: No Bosses.", 255);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.Text("Bosses Domination event starts everyday at specific hours,\n");
                            data.Text("the prizes are horrible,\n the dreamhell is invaded by Gravebeast,\n");
                            data.Text("you have to kill all Minotaurs to spawn the Gravebeast\n");
                            data.Text("------------------------------------------------------\n");
                            data.Text("spawn schedule : Everyday at (10:36, 23:36)\n");
                            data.Text("------------------------------------------------------\n");
                            //data.Text("Prizes:\n");
                            //data.Text("Minotaurs: (3x+2Stone, 1xPowerExpball, LifeFruitBasket, 1H-VIP)\n");
                            //data.Text("Gravebeast: (3x +3Stone, 3x 1H-VIP, 3x 5KK GoldBullion, 1xUltimatePack)\n");
                            //data.Text("------------------------------------------------------\n");
                            data.AddOption("Statue: Bosses Live.", 1);
                            data.FinalizeDialog();

                        }
                        break;
                    }
                case 1:
                    {
                        var GMap = Database.Server.ServerMaps[3020];
                        ushort X = 0, Y = 0;
                        GMap.GetRandCoord(ref X, ref Y);
                        client.Teleport(X, Y, 3020);
                        break;
                    }
            }
        }
        #endregion
        #region ProficiencyGod
        [NpcAttribute(NpcID.ProficiencyGod)]
        public static void ProficiencyGod(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            MsgProficiency prof;
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("ProficiencyToken~is~an~extremely~miraculous~item,~it~can~make~you~full~of~spirit~to~upgrade~the~proficiency~of~weapons~very~fast.")
                            .AddOption("~One-handed", 1)
                            .AddOption("~Two-handed", 2)
                            //.AddOption("~Boxing", 3)
                            .AddOption("~Shield", 90)
                            .AddOption("I~was~just~leaving.", 255).AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("ProficiencyToken~can~help~you~to~promote~the~proficiency~of~one-handed~weapon~up~to~level~12~level~by~level.~But~youshould~train~the~weapon~proficieny~to~level~1~first.")
                               .AddOption("~Blade.", 41)
                               .AddOption("~Sword.", 42)
                               .AddOption("~Backsword.", 40)
                               .AddOption("~Hook.", 43)
                               .AddOption("~Whip.", 44)
                               .AddOption("Next~page.", 5)
                               .AddOption("Just~passing~by.").AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        data.AddText("ProficiencyToken~can~help~you~to~promote~the~proficiency~of~one-handed~weapon~up~to~level~12~level~by~level.~But~youshould~train~the~weapon~proficieny~to~level~1~first.")
                               .AddOption("~Axe.", 45)
                               .AddOption("~Hammer.", 46)
                               .AddOption("~Club.", 48)
                               .AddOption("~Dagger.", 49)
                               .AddOption("~Scepter .", 39)
                               .AddOption("Back~to~previous~page.", 1)
                               .AddOption("Just~passing~by.").AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("ProficiencyToken~can~help~you~to~promote~the~proficiency~of~two-handed~weapon~up~to~level~12~level~by~level.~But~youshould~train~the~weapon~proficieny~to~level~1~first.")
                               .AddOption("~Bow.", 50)
                               .AddOption("~Glaive.", 51)
                               .AddOption("~Poleaxe.", 53)
                               .AddOption("~Longhammer.", 54)
                               .AddOption("~Spear.", 56)
                               .AddOption("Next~page.", 6)
                               .AddOption("Just~passing~by.").AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        data.AddText("ProficiencyToken~can~help~you~to~promote~the~proficiency~of~two-handed~weapon~up~to~level~12~level~by~level.~But~youshould~train~the~weapon~proficieny~to~level~1~first.")
                               .AddOption("~Wand.", 55)
                               .AddOption("~Halbert.", 58)
                               //.AddOption("~upgrade~the~proficiency~of~club.", 48)
                               //.AddOption("~upgrade~the~proficiency~of~dagger.", 49)
                               //.AddOption("~upgrade~the~proficiency~of~whip.", 44)
                               .AddOption("Back~to~previous~page.", 2)
                               .AddOption("Just~passing~by.").AddAvatar(48).FinalizeDialog();
                        break;
                    }
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 56:
                case 57:
                case 58:
                case 59:
                case 90:
                    {
                        client.MyProfs.ClientProf.TryGetValue((uint)(Option * 10), out prof);
                        if (prof != null && prof.Level >= 12)
                        {
                            data.AddText("I~am~sorry.~The~proficiency~is~level~12,~I~cannot~upgrade~it~with~ProficiencyToken~any~more.~Please~train~it~yourself.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        else if (prof != null && prof.Level >= 1)
                        {

                            ushort countb = (ushort)(prof.Level + 3);

                            if (client.Inventory.Contain(722384, countb))
                            {
                                client.Inventory.Remove(722384, countb, stream);
                                client.MyProfs.Add(stream, prof.ID, prof.Level + 1, prof.Experience, prof.PreviouseLevel);
                                client.SendSysMesage("With the help of ProficiencyGod, your proficiency has gained the magic power of the ProficiencyToken. The proficiency is 1 level up.");
                            }
                            //else if (client.Inventory.Contain(722383, 1))
                            //{
                            //    client.Inventory.Remove(722383, 1, stream);
                            //    client.MyProfs.Add(stream, prof.ID, prof.Level = 20, prof.Experience, prof.PreviouseLevel);
                            //    client.SendSysMesage("With the help of ProficiencyGod, your proficiency has gained the magic power of the ProficiencyToken. The proficiency is 1 level up.");
                            //}
                            else
                            {
                                data.AddText("I~am~sorry.~I~cannot~help~you~to~promote~the~proficiency~of~weapon~without~the~magic~power~of~" + countb + "~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~need~to~train~it~level~1~first~if~you~want~to~promote~it~with~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        break;
                    }
                case 55:
                    {
                        client.MyProfs.ClientProf.TryGetValue(561, out prof);
                        ushort countb = (ushort)(prof.Level + 3);
                        if (prof != null && prof.Level >= 12)
                        {
                            data.AddText("I~am~sorry.~The~proficiency~is~level~12,~I~cannot~upgrade~it~with~ProficiencyToken~any~more.~Please~train~it~yourself.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        else if (prof != null && prof.Level >= 1)
                        {
                            if (client.Inventory.Contain(722384, countb))
                            {
                                client.MyProfs.Add(stream, prof.ID, prof.Level + 1, prof.Experience, prof.PreviouseLevel);
                            }
                            //else if (client.Inventory.Contain(722383, 1))
                            //{
                            //    client.Inventory.Remove(722383, 1, stream);
                            //    client.MyProfs.Add(stream, prof.ID, prof.Level = 20, prof.Experience, prof.PreviouseLevel);
                            //    client.SendSysMesage("With the help of ProficiencyGod, your proficiency has gained the magic power of the ProficiencyToken. The proficiency is 1 level up.");
                            //}
                            else
                            {
                                data.AddText("I~am~sorry.~I~cannot~help~you~to~promote~the~proficiency~of~weapon~without~the~magic~power~of~" + countb + "~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~need~to~train~it~level~1~first~if~you~want~to~promote~it~with~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        break;
                    }
                case 40:
                    {
                        client.MyProfs.ClientProf.TryGetValue(421, out prof);
                        ushort countb = (ushort)(prof.Level + 3);
                        if (prof != null && prof.Level >= 12)
                        {
                            data.AddText("I~am~sorry.~I~cannot~help~you~to~promote~the~proficiency~of~weapon~without~the~magic~power~of~" + countb + "~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        else if (prof != null && prof.Level >= 1)
                        {
                            if (client.Inventory.Contain(722384, countb))
                            {
                                client.MyProfs.Add(stream, prof.ID, prof.Level + 1, prof.Experience, prof.PreviouseLevel);
                            }
                            //else if (client.Inventory.Contain(722383, 1))
                            //{
                            //    client.Inventory.Remove(722383, 1, stream);
                            //    client.MyProfs.Add(stream, prof.ID, prof.Level = 20, prof.Experience, prof.PreviouseLevel);
                            //    client.SendSysMesage("With the help of ProficiencyGod, your proficiency has gained the magic power of the ProficiencyToken. The proficiency is 1 level up.");
                            //}
                            else
                            {
                                data.AddText("I~am~sorry.~I~cannot~help~you~to~promote~the~proficiency~of~weapon~without~the~magic~power~of~" + countb + "~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~need~to~train~it~level~1~first~if~you~want~to~promote~it~with~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        break;
                    }
                case 39:
                    {
                        client.MyProfs.ClientProf.TryGetValue(481, out prof);
                        ushort countb = (ushort)(prof.Level + 3);
                        if (prof != null && prof.Level >= 12)
                        {
                            data.AddText("I~am~sorry.~I~cannot~help~you~to~promote~the~proficiency~of~weapon~without~the~magic~power~of~" + countb + "~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        else if (prof != null && prof.Level >= 1)
                        {
                            if (client.Inventory.Contain(722384, countb))
                            {
                                client.MyProfs.Add(stream, prof.ID, prof.Level + 1, prof.Experience, prof.PreviouseLevel);
                            }
                            //else if (client.Inventory.Contain(722383, 1))
                            //{
                            //    client.Inventory.Remove(722383, 1, stream);
                            //    client.MyProfs.Add(stream, prof.ID, prof.Level = 20, prof.Experience, prof.PreviouseLevel);
                            //    client.SendSysMesage("With the help of ProficiencyGod, your proficiency has gained the magic power of the ProficiencyToken. The proficiency is 1 level up.");
                            //}
                            else
                            {
                                data.AddText("I~am~sorry.~I~cannot~help~you~to~promote~the~proficiency~of~weapon~without~the~magic~power~of~" + countb + "~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~need~to~train~it~level~1~first~if~you~want~to~promote~it~with~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        client.MyProfs.ClientProf.TryGetValue(0, out prof);
                        ushort countb = (ushort)(prof.Level + 3);
                        if (prof != null && prof.Level >= 12)
                        {
                            data.AddText("I~am~sorry.~The~proficiency~is~level~12,~I~cannot~upgrade~it~with~ProficiencyToken~any~more.~Please~train~it~yourself.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        else if (prof != null && prof.Level >= 1)
                        {
                            if (client.Inventory.Contain(722384, countb))
                            {
                                client.MyProfs.Add(stream, prof.ID, prof.Level + 1, prof.Experience, prof.PreviouseLevel);
                            }
                            //else if (client.Inventory.Contain(722383, 1))
                            //{
                            //    client.Inventory.Remove(722383, 1, stream);
                            //    client.MyProfs.Add(stream, prof.ID, prof.Level = 20, prof.Experience, prof.PreviouseLevel);
                            //    client.SendSysMesage("With the help of ProficiencyGod, your proficiency has gained the magic power of the ProficiencyToken. The proficiency is 1 level up.");
                            //}
                            else
                            {
                                data.AddText("I~am~sorry.~I~cannot~help~you~to~promote~the~proficiency~of~weapon~without~the~magic~power~of~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~need~to~train~it~level~1~first~if~you~want~to~promote~it~with~ProficiencyToken.")
                                .AddOption("I~see.").AddAvatar(1).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region StoneCompose
        [NpcAttribute(NpcID.StoneCompose)]
        public static void StoneCompose(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Hello I am here to compose your stones. Every compose you will costs you three stones!")
                          .AddOption("+1~Stones[4]", 1)
                          .AddOption("+2~Stones[3].", 2)
                          .AddOption("+3~Stones[3].", 3)
                          .AddOption("+4~Stones[3].", 4)
                          //.AddOption("+5~Stones[3].", 5)
                          //.AddOption("+6~Stones[3].", 6)
                           //.AddOption("+7~Stones[3].", 7)
                           .AddOption("Just~passing~by.", 255)
                           .AddAvatar(105)
                           .FinalizeDialog();



                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(730001, 4))
                        {
                            client.Inventory.Remove(730001, 4, stream);
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 730002);
                            }
                            else
                            {
                                client.Inventory.AddReturnedItem(stream, 730002);
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(730002, 3))
                        {
                            client.Inventory.Remove(730002, 3, stream);
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 730003);
                            }
                            else
                            {
                                client.Inventory.AddReturnedItem(stream, 730003);
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(730003, 3))
                        {
                            client.Inventory.Remove(730003, 3, stream);
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 730004);
                            }
                            else
                            {
                                client.Inventory.AddReturnedItem(stream, 730004);
                            }
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(730004, 3))
                        {
                            client.Inventory.Remove(730004, 3, stream);
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 730005);
                            }
                            else
                            {
                                client.Inventory.AddReturnedItem(stream, 730005);
                            }
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(730005, 3))
                        {
                            client.Inventory.Remove(730005, 3, stream);
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 730006);
                            }
                            else
                            {
                                client.Inventory.AddReturnedItem(stream, 730006);
                            }
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(730006, 3))
                        {
                            client.Inventory.Remove(730006, 3, stream);
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 730007);
                            }
                            else
                            {
                                client.Inventory.AddReturnedItem(stream, 730007);
                            }
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Contain(730007, 3))
                        {
                            client.Inventory.Remove(730007, 3, stream);
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 730008);
                            }
                            else
                            {
                                client.Inventory.AddReturnedItem(stream, 730008);
                            }
                        }
                        break;
                    }
            }
        }
        #endregion
        [NpcAttribute(NpcID.Shopboy)]
        public static void Shopboy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Our~shop~is~famous~for~dyeing.~If~you~want~to~have~your~equipment~dyed,~please~wear~them~before~you~enter.~You")
                            .AddText("have~a~wide~choice~of~colors.~One~meteor~will~be~charged~before~you~try~the~colors.~Do~you~want~a~try?")
                        .AddOption("Yes,~here~is~a~DragonBall.", 1)
                        //.AddOption("Can~you~dye~my~armor~black?", 2)
                        .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            client.Teleport(22, 26, 1008);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~a~DragonBall.")
                      .AddOption("Oh.~I~am~sorry.", 255)
                      .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure.~Once~your~armor~is~dyed~black,~it~will~never~fade~no~matter~how~it~is~updated,~unless~I~dye~it~to~other")
                         .AddText("colors.~I~will~charge~1~dragonball~to~do~it.~")
                     .AddOption("Yes.~Here`s~a~Dragonball.", 3)
                     .AddOption("Let~me~think~it~over.", 255)
                     .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            MsgServer.MsgGameItem Armor;
                            if (client.Equipment.TryGetEquip(Role.Flags.ConquerItem.Armor, out Armor))
                            {
                                Armor.Color = Role.Flags.Color.Black;
                                Armor.Mode = Role.Flags.ItemMode.Update;
                                Armor.Send(client, stream);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~a~DragonBall.")
                      .AddOption("Oh.~I~am~sorry.", 255)
                      .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        #region CelestialTao
        [NpcAttribute(NpcID.CelestialTao)]
        public static void CelestialTao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Reborn~level~70+~players~can~redistribute~their~attribute~points~at~the~cost~of~a~dragonball.")
                        .AddOption("I~will~reallot~my~points.", 9)
                        .AddOption("Let~me~think~it~over.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level >= 70)
                        {
                            if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                            {
                                client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);

                                client.Player.Agility = 0;
                                client.Player.Strength = 0;
                                client.Player.Vitality = 1;
                                client.Player.Spirit = 0;

                                client.CreateBoxDialog("You have successfully reloaded your attribute points.");
                                if (client.Player.Reborn == 0)
                                {
                                    client.Player.Atributes = 0;
                                    Database.DataCore.AtributeStatus.ResetStatsNonReborn(client.Player);
                                    if (Database.AtributesStatus.IsWater(client.Player.Class))
                                    {
                                        if (client.Player.Level > 110)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 110) * 3 + client.Player.ExtraAtributes);
                                    }
                                    else
                                    {
                                        if (client.Player.Level > 120)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 120) * 3 + client.Player.ExtraAtributes);
                                    }
                                }
                                else if (client.Player.Reborn == 1)
                                {
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass)
                                        + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                else
                                {
                                    if (client.Player.SecoundeRebornLevel == 0)
                                        client.Player.SecoundeRebornLevel = 130;
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) +
                                        Database.Server.RebornInfo.ExtraAtributePoints(client.Player.SecoundeRebornLevel, client.Player.SecondClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                client.Player.SendUpdate(stream, client.Player.Strength, Game.MsgServer.MsgUpdate.DataType.Strength);
                                client.Player.SendUpdate(stream, client.Player.Agility, Game.MsgServer.MsgUpdate.DataType.Agility);
                                client.Player.SendUpdate(stream, client.Player.Spirit, Game.MsgServer.MsgUpdate.DataType.Spirit);
                                client.Player.SendUpdate(stream, client.Player.Vitality, Game.MsgServer.MsgUpdate.DataType.Vitality);
                                client.Player.SendUpdate(stream, client.Player.Atributes, Game.MsgServer.MsgUpdate.DataType.Atributes);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have one DragonBall.")
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~cannot~reallot~your~ability~points~unless~you~are~reborn~and~above~level~70.")
                  .AddOption("I~see", 255)
                  .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region rare Shop
        [NpcAttribute(NpcID.ConstumerAssec)]
        public static unsafe void ConstumerAssec(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                                Type = ActionType.OpenGuiNpc,
                                Timestamp = (int)client.ActiveNpc,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y,
                                dwParam3 = client.Player.Map
                            };
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }

                    }

            }
        }
        [Npc(NpcID.RareGarments)]
        public unsafe static void RareGarments(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello! " + client.Player.Name + ", you can try our new garments and accessory that you can donate for it or found them from hunting to")
                        //.AddOption("Change DBScroll to DSPoints!", 1)
                        //.AddOption("Open the donations shop!", 2)
                        .AddOption("View the rare store!", 3)
                        .AddOption("Just passing by.", byte.MaxValue)
                        .AddAvatar(63)
                        .FinalizeDialog();
                    break;
                case 1:
                    {
                        data.AddText("Hello! " + client.Player.Name + ", your x1 DBScroll is equivalent to 1 DSPoints, to by garments and accessory that make you look like fanionista. Currently you have (" + client.Player.ChampionPoints.ToString("0,0") + " DSPoints)")
                        .AddOption("Okay!, take my DBScroll!", 121)
                        //.AddOption("Open the donations shop!", 2)
                        //.AddOption("View the rare store!", 3)
                        .AddOption("Just passing by.", byte.MaxValue)
                        .AddAvatar(63)
                        .FinalizeDialog();
                        break;
                    }
                case 121:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBallScroll, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBallScroll, 1, stream);
                            client.Player.ChampionPoints++;
                            client.CreateBoxDialog($"Congratulations, You've successfully change your DragonBallScroll to 1DSPoints you have now {client.Player.ChampionPoints.ToString("0,0")} DSPoints");
                        }
                        else
                        {
                            data.AddText("You don't have x1 DBScroll on your inventory!")
                            .AddOption("Just passing by.", byte.MaxValue)
                            .AddAvatar(63)
                            .FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 464u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 3:
                    client.Teleport(22, 22, 1009u);
                    break;

            }
        }

        [NpcAttribute(NpcID.ConstumerGarment)]
        public static unsafe void ConstumerGarment(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                                Type = ActionType.OpenGuiNpc,
                                Timestamp = (int)client.ActiveNpc,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y,
                                dwParam3 = client.Player.Map
                            };
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }

                    }
            }
        }
        #endregion
        #region BoxKey
        [NpcAttribute(NpcID.VictoryChest)]
        public static void VictoryChest(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            return;
            if (client.Player.KeyBoxTRY == 0)
            {
                data.AddText("------------------------------------------------------\n")
                                .AddText("Sorry, you need to get some rest come back tomorrow..\n")
                                .AddText("------------------------------------------------------")
                                .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                return;
            }
            if (client.Player.Level != 130 && client.Player.Reborn != 2)
            {
                data.AddText("------------------------------------------------------\n")
                              .AddText("Sorry, you need to get level 130, 2nd reborn\n")
                              .AddText("------------------------------------------------------")
                              .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("------------------------------------------------------\n")
                            .AddText("Requirement: find the chest key and open it, 3 time per day\n")
                            .AddText("Rewards: +3 Stone, +2 Stone, 10,000,000 Silver, 410 ConquerPoints or 1075 ConquerPoints.\n")
                            .AddText("------------------------------------------------------")
                            .AddText("Ps, Keys Can Be Found From All Monsters just enjoy your hunt!.\n")
                            .AddOption("Unlock~this~chest.", 1)
                            .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 1:
                    {

                        if (client.Inventory.Contain(721876, 1))
                        {
                            client.Player.KeyBoxTRY--;

                            if (client.Player.QuestGUI.CheckQuest(20200, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                if (!client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.OPEN_3_BOXS, 3))
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.OPEN_3_BOXS, 1);
                                else
                                    client.CreateBoxDialog("You`ve~open~the~3~box's.~Now~go~find~DailyQuestEnvoy!.");
                            }
                            switch (Program.GetRandom.Next(1, 6))
                            {
                                case 1:
                                    {
                                        if (client.Inventory.HaveSpace(1))
                                        {
                                            client.Inventory.Remove(721876, 1, stream);

                                            client.Inventory.Add(stream, 730003, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.None, false, "", 0);
                                            client.SendSysMesage("You~received~a~+3~Stone!");
                                            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hell Yeah   " + client.Player.Name + " he/she received a +3 Stone while opening  Box at [TwinCity]!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                        }
                                        else
                                        {
                                            client.SendSysMesage("Your~inventory~is~full.");
                                        }
                                        break;
                                    }
                                case 2:
                                    {
                                        if (client.Inventory.HaveSpace(1))
                                        {
                                            client.Inventory.Remove(721876, 1, stream);

                                            client.Inventory.Add(stream, 730002, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.None, false, "", 0);
                                            client.SendSysMesage("You~received~a~+2~Stone!");
                                            //Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hell Yeah   " + client.Player.Name + " he/she received a +2 Stone while opening  Box at [TwinCity]!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                        }
                                        else
                                        {
                                            client.SendSysMesage("Your~inventory~is~full.");
                                        }
                                        break;

                                    }
                                case 3:
                                    {
                                        client.Inventory.Remove(721876, 1, stream);
                                        client.Player.Money += 410000;

                                        client.SendSysMesage("You~received~410,000 ConquerMoney!");
                                        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hell Yeah   " + client.Player.Name + " he/she received 410,000 ConquerMoney while opening  Box at [TwinCity]!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Inventory.Remove(721876, 1, stream);
                                        client.Player.Money += 10000000;
                                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                        client.SendSysMesage("You~received~10,000,000 Silver!");
                                        break;
                                    }
                                case 5:
                                    {
                                        if (client.Inventory.HaveSpace(3))
                                        {
                                            client.Inventory.Remove(721876, 1, stream);

                                            client.Inventory.Add(stream, 1088000, 3, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.None, false, "", 0);
                                            client.SendSysMesage("You~received~a~3~DragonBalls!");
                                        }
                                        else
                                        {
                                            client.SendSysMesage("Your~inventory~is~full.");
                                        }
                                        break;
                                    }
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        }
                        else
                        {
                            client.SendSysMesage("Sorry, but you don't have the box key ....");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.VictoryChest2)]
        public static void VictoryChest2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            return;
            if (client.Player.KeyBoxTRY == 0)
            {
                data.AddText("------------------------------------------------------\n")
                                .AddText("Sorry, you need to get some rest come back tomorrow..\n")
                                .AddText("------------------------------------------------------")
                                .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                return;
            }
            if (client.Player.Level != 130 && client.Player.Reborn != 2)
            {
                data.AddText("------------------------------------------------------\n")
                              .AddText("Sorry, you need to get level 130, 2nd reborn\n")
                              .AddText("------------------------------------------------------")
                              .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("------------------------------------------------------\n")
                            .AddText("Requirement: find the chest key and open it, 3 time per day\n")
                            .AddText("Rewards: +3 Stone, +2 Stone, 10,000,000 Silver, 410 ConquerPoints or 1075 ConquerPoints., \n")
                            .AddText("------------------------------------------------------")
                            .AddText("Ps, Keys Can Be Found From All Monsters just enjoy your hunt!.\n")
                            .AddOption("Unlock~this~chest.", 1)
                            .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721876, 1))
                        {
                            client.Player.KeyBoxTRY--;
                            if (client.Player.QuestGUI.CheckQuest(20200, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            {
                                if (!client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.OPEN_3_BOXS, 3))
                                    client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.OPEN_3_BOXS, 1);
                                else
                                    client.CreateBoxDialog("You`ve~open~the~3~box's.~Now~go~find~DailyQuestEnvoy!.");
                            }
                            switch (Program.GetRandom.Next(1, 6))
                            {
                                case 1:
                                    {
                                        if (client.Inventory.HaveSpace(1))
                                        {
                                            client.Inventory.Remove(721876, 1, stream);

                                            client.Inventory.Add(stream, 730003, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.None, false, "", 0);
                                            client.SendSysMesage("You~received~a~+3~Stone!");
                                            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hell Yeah   " + client.Player.Name + " he/she received a +3 Stone while opening  Box at [TwinCity]!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                        }
                                        else
                                        {
                                            client.SendSysMesage("Your~inventory~is~full.");
                                        }
                                        break;
                                    }
                                case 2:
                                    {
                                        if (client.Inventory.HaveSpace(1))
                                        {
                                            client.Inventory.Remove(721876, 1, stream);

                                            client.Inventory.Add(stream, 730002, 1, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.None, false, "", 0);
                                            client.SendSysMesage("You~received~a~+2~Stone!");
                                            //Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hell Yeah   " + client.Player.Name + " he/she received a +2 Stone while opening  Box at [TwinCity]!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                        }
                                        else
                                        {
                                            client.SendSysMesage("Your~inventory~is~full.");
                                        }
                                        break;

                                    }
                                case 3:
                                    {
                                        client.Inventory.Remove(721876, 1, stream);
                                        client.Player.Money += 410000;
                                        client.SendSysMesage("You~received~410,000 ConquerPoints!");
                                        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hell Yeah   " + client.Player.Name + " he/she received 410,000 ConquerMoney while opening  Box at [TwinCity]!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                        break;
                                    }
                                case 4:
                                    {
                                        client.Inventory.Remove(721876, 1, stream);
                                        client.Player.Money += 10000000;

                                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                        client.SendSysMesage("You~received~10,000,000 Silver!");
                                        break;
                                    }
                                case 5:
                                    {
                                        if (client.Inventory.HaveSpace(3))
                                        {
                                            client.Inventory.Remove(721876, 1, stream);

                                            client.Inventory.Add(stream, 1088000, 3, 1, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.None, false, "", 0);
                                            client.SendSysMesage("You~received~a~3~DragonBalls!");
                                        }
                                        else
                                        {
                                            client.SendSysMesage("Your~inventory~is~full.");
                                        }
                                        break;
                                    }
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        }
                        else
                        {
                            client.SendSysMesage("Sorry, but you don't have the box key ....");
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Waiting Lobby
        [NpcAttribute(NpcID.WaitingLobby)]

        public static void WaitingLobby(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey this is the waiting lobby for the events.\n")
                                            .AddText("The upcoming event is the : " + (client.EventBase != null ? client.EventBase.EventTitle : "None") + "\n")
                                            .AddText("When the event starts all the players will be spawned in!\n")
                                            .AddOption("Okay", 255)
                                            .AddAvatar(30)
                                            .FinalizeDialog();
                        break;
                    }


            }
        }

        #endregion
        [NpcAttribute(NpcID.ExitCycloneRace)]
        public static void ExitCycloneRace(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (Role.Core.GetDistance(client.Player.X, client.Player.Y, 995, 736) <= 3)
            {
                if (client.EventBase != null)
                {
                    if (client.EventBase.IDMessage == MsgStaticMessage.Messages.CycloneRace)
                    {
                        client.EventBase.Reward(client);
                        client.ExitToTwin();
                    }
                    else client.ExitToTwin();
                }
                else client.ExitToTwin();
            }
            else
            {
                client.CreateBoxDialog("The distance is too big between you and me.");
            }
        }

        [NpcAttribute(NpcID.EventsManager)]
        public static void EventsManager(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            data.AddAvatar(260);
            switch (Option)
            {
                case 0:
                    {
                        if ((MsgSchedules.CurrentTournament != null && MsgSchedules.CurrentTournament.Process != ProcesType.Dead) || Program.Events.Count > 0)
                        {
                            data.AddText("Would you like to signup for the event! These are the events running.");
                            if (Program.Events.Count > 0)
                            {
                                foreach (var ebase in Program.Events)
                                {
                                    if (ebase.Stage == MsgEvents.EventStage.Inviting)
                                    {
                                        data.AddOption(ebase.EventTitle + " [signup].", ebase.IDEvent);
                                    }
                                }
                            }
                            if (MsgSchedules.CurrentTournament != null && MsgSchedules.CurrentTournament.Process != ProcesType.Dead)
                                data.AddOption(MsgSchedules.CurrentTournament.Type.ToString() + " [signup].", 240);
                            data.AddOption("Not~interested.", 255)
                                .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There are no events running")
                            .AddOption("Alright.", 255)
                            .FinalizeDialog();
                        }
                        break;
                    }
                case 240:
                    {
                        if (MsgSchedules.CurrentTournament != null && MsgSchedules.CurrentTournament.Process != ProcesType.Dead)
                        {
                            //if (client.Player.Level != 137 && client.Player.Reborn != 2)
                            //{
                            //    data.AddText("--------------------------------------------------------------------------------\n")
                            //                  .AddText("Sorry, you need to get level 137 2nd reborn first.\n")
                            //                  .AddText("--------------------------------------------------------------------------------")
                            //                  .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                            //    return;
                            //}
                            if (!MsgSchedules.CurrentTournament.Join(client, stream))
                                data.AddText("You can`t join, the war is about to end.")
                                    .AddOption("Alright.", 255)
                                    .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("There are no events running")
                            .AddOption("Alright.", 255)
                            .FinalizeDialog();
                        }
                        break;
                    }
                default:
                    {
                        var ebase = Program.Events.Find(e => e.IDEvent == Option);
                        if (ebase != null)
                        {
                            //if (client.Player.Level != 137 && client.Player.Reborn != 2)
                            //{
                            //    data.AddText("--------------------------------------------------------------------------------\n")
                            //                  .AddText("Sorry, you need to get level 137 2nd reborn first.\n")
                            //                  .AddText("--------------------------------------------------------------------------------")
                            //                  .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                            //    return;
                            //}
                            if (ebase.Stage == MsgEvents.EventStage.Inviting)
                            {
                                ebase.AddPlayer(client);
                            }
                            else data.AddText("There are no events running!")
                           .AddOption("Alright.", 255)
                           .FinalizeDialog();
                        }
                        else data.AddText("There are no events running!")
                           .AddOption("Alright.", 255)
                           .FinalizeDialog();
                        break;
                    }
            }
        }
        [Npc(NpcID.PoleDomination)]
        public static void PoleDomination(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("This is the pole domination prize center npc. I can only award the prize to the winner guild leader");
                    data.AddOption("I~would~like~to~claim~it", 1);
                    data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    break;
                case 1:
                    {

                        foreach (var ev in Program.Events)
                        {
                            if (ev.EventTitle == "Team Deathmatch")
                            {
                                if (!ev.TeleportPlayersToMap(client, out string message))
                                {
                                    data.AddText(message);
                                    data.AddOption("I~would~like~to~claim~it", 1);
                                    data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                                }
                                break;
                            }
                        }

                        if (client.Player.MyGuild == null)
                        {
                            data.AddText("Just the GuildLeader can claim the reward!");
                            data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                            break;
                        }
                        if (client.Player.GuildRank != Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Just the GuildLeader can claim the reward!");
                            data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                            break;
                        }
                        uint prize;
                        prize = MsgSchedules.GuildDeathMatch.GetWinnerPrize(client.Player.MyGuild.GuildName);
                        if (prize == 0)
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area..");
                            data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                            break;
                        }
                        client.Player.Money += (int)prize;
                        IEventRewards.Add("PoleDomination", prize, 0u, "", "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                        MsgSchedules.GuildDeathMatch.RemoveWinner(client.Player.MyGuild.GuildName);
                        data.Text("You have claimed " + prize.ToString("0,0") + " Gold Congratulations!");
                        data.Option("Thank you!", byte.MaxValue);
                        data.AddAvatar(110).FinalizeDialog();
                        Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , " + client.Player.GuildRank.ToString() + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + prize.ToString("0,0") + " ConquerPoints for the domination the PoleDomination.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        break;
                    }
            }
        }



        [Npc(NpcID.MonthlyPKOut)]
        public static void MonthlyPKOut(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello , you're the last player alive?");
                    data.AddOption("Yes", 1);
                    data.AddOption("Teleport~to~Twin~City.", 2);
                    data.AddOption("Ah. wait", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                    break;
                case 1:
                    if (MsgSchedules.MonthlyPKWar.IsFinished() && MsgSchedules.MonthlyPKWar.Wasstarted)
                    {
                        if (MsgSchedules.MonthlyPKWar.TheLastPlayer())
                        {
                            if (client.Inventory.HaveSpace(21) && !MsgSchedules.MonthlyPKWar.Claimed)
                            {
                                MsgSchedules.MonthlyPKWar.GiveReward(client, stream);
                                break;
                            }
                            data.AddText("Please make 21 more spaces in your inventory");
                            data.AddOption("Let me check.", byte.MaxValue);
                            data.AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, the war is not finished, or other players are still alive.");
                            data.AddOption("Ah ok", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry, the war is not finished");
                        data.AddOption("Ah ok", byte.MaxValue);
                        data.AddAvatar(154);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("You wana to teleport back to TwinCity? You are sure?");
                    data.AddOption("Yes", 3);
                    data.AddOption("Ah no.", byte.MaxValue);
                    data.AddAvatar(154);
                    data.FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(330, 269, 1002u);
                    break;
            }
        }

        [Npc(NpcID.MonthlyPKJoin)]
        public static void MonthlyPKJoin(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText($"Hello there! The MonthlyPk War will take place during {ISchedule.Schedules[ISchedule.EventID.MonthlyPK].StartHour}:{ISchedule.Schedules[ISchedule.EventID.MonthlyPK].StartMinute} on {MsgSchedules.GetLastWeekdayOfMonthSTR(DateTime.Now, ISchedule.Schedules[ISchedule.EventID.MonthlyPK].DayOfWeek)},");
                    data.AddText($"and you will be admitted into tournament during {ISchedule.Schedules[ISchedule.EventID.MonthlyPK].StartHour}:{ISchedule.Schedules[ISchedule.EventID.MonthlyPK].StartMinute}, Come! You will be impressed.");
                    data.AddOption("Sign~me~up", 1);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(24).FinalizeDialog();
                    break;
                case 1:
                    if (MsgSchedules.MonthlyPKWar.AllowJoin())
                    {
                        client.Teleport(154, 223, 1505u);
                        break;
                    }
                    data.AddText($"Please sign up between {ISchedule.Schedules[ISchedule.EventID.MonthlyPK].StartHour}:{ISchedule.Schedules[ISchedule.EventID.MonthlyPK].StartMinute} on {MsgSchedules.GetLastWeekdayOfMonthSTR(DateTime.Now, ISchedule.Schedules[ISchedule.EventID.MonthlyPK].DayOfWeek)}.");
                    data.AddOption("I see. ", byte.MaxValue);
                    data.AddAvatar(24).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.DuelManager)]
        public static void DuelManager(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                case 10:
                    {
                        string winner;
                        winner = "None";
                        string loser;
                        loser = "None";
                        uint winner_score;
                        winner_score = 0u;
                        uint loser_score;
                        loser_score = 0u;
                        foreach (KeyValuePair<uint, string> lastwin in Server.Last_Winner_Duel)
                        {
                            winner = lastwin.Value;
                            winner_score = lastwin.Key;
                        }
                        foreach (KeyValuePair<uint, string> lastlose in Server.Last_Loser_Duel)
                        {
                            loser = lastlose.Value;
                            loser_score = lastlose.Key;
                        }
                        data.AddText("Hello " + client.Player.Name + ", I'm offering a special duel option where only hits with line skills like Fastblade are counted.");
                        data.AddText("\nPlease enter the number of chains you want in the duel.");
                        data.AddText($"Last duel: {winner} [{winner_score}] x [{loser_score}] {loser}");
                        data.AddInput("Chains (Max=255)", 1);

                        data.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (uint.TryParse(Input, out var Chains))
                        {
                            client.AddInputValue = Chains;
                            if (client.AddInputValue != 0 && client.AddInputValue <= ServerKernel.MAX_CHAINS_HITS)
                            {
                                data.AddText("Hello warrior! Only warriors who like to challenge their enemies \n");
                                data.AddText("and engage in various battles use this command in search of fights all the \n");
                                data.AddText("time If you wanted to challenge someone to a one-on-one fight, Just type the \n");
                                data.AddText("name of the player below and wait for him to accept.");
                                data.AddInput("Name", 2);
                                data.AddAvatar(10).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        uint Chains2;
                        Chains2 = client.AddInputValue;
                        GameClient n_client;
                        n_client = null;
                        n_client = GameClient.CharacterFromName(Input);
                        if (n_client == null || n_client.InQualifier() || n_client.IsWatching() || client.InQualifier() || client.IsWatching() || Chains2 == 0)
                            break;
                        //if (n_client.IP == client.IP)
                        //{
                        //    data.AddText("Player `" + n_client.Player.Name + "` it has the same IP address as you so you won't be able to battle it.");
                        //    data.AddOption("Try again?", 10);
                        //    data.AddAvatar(10).FinalizeDialog();
                        //    break;
                        //}
                        if (!MsgArena.ArenaPoll.ContainsKey(client.Player.UID))
                            MsgArena.ArenaPoll.TryAdd(client.Player.UID, client.ArenaStatistic);
                        if (!MsgArena.ArenaPoll.ContainsKey(n_client.Player.UID))
                            MsgArena.ArenaPoll.TryAdd(n_client.Player.UID, n_client.ArenaStatistic);
                        n_client.ArenaStatistic.DuelHitted = (client.ArenaStatistic.DuelHitted = (byte)Chains2);
                        client.ArenaStatistic.InDuelRoom = (n_client.ArenaStatistic.InDuelRoom = true);
                        client.ArenaStatistic.ArenaState = (n_client.ArenaStatistic.ArenaState = MsgArena.User.StateType.WaitForBox);
                        n_client.ArenaStatistic.AcceptBoxShow = (client.ArenaStatistic.AcceptBoxShow = DateTime.Now.AddSeconds(60.0));
                        MsgArena.Match match;
                        match = new MsgArena.Match(client, n_client, MsgSchedules.Arena.MatchCounter.Next);
                        match.SendSignUp(stream, client);
                        match.SendSignUp(stream, n_client);
                        MsgSchedules.Arena.MatchesRegistered.TryAdd(match.MatchUID, match);
                        break;
                    }
            }
        }
        #region Compose Gem
        [NpcAttribute(NpcID.ImperialJeweler)]
        public static void ImperialJeweler(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I can improve the enchant of an item and I can also improve the plus of an item. Please let me know how can I help you.")
                        .AddOption("Compose (15) Normal Gem to (1) Refined Gem", 1)
                        .AddOption("Compose (10) Refined Gem to (1) Super Gem", 2)
                        .AddOption("I will come later. ", 255)
                        .AddAvatar(64).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Choose what kind of normal gem do you want me to make Refined Gem?")
                        .AddOption("Kylin~Gems.", 3)
                        .AddOption("Rainbow~Gems.", 4)
                        .AddOption("Fury~Gems.", 5)
                        .AddOption("Dragon~Gems.", 6)
                        .AddOption("Phoenix~Gems.", 7)
                        .AddOption("Violet~Gems.", 8)
                        .AddOption("Next~Page.", 111)
                        .AddOption("I will come later. ", 255)
                        .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 111:
                    {
                        data.AddText("Choose what kind of normal gem do you want me to make Refined Gem?")
                        .AddOption("Moon~Gems.", 9)
                        .AddOption("Tortoise~Gems.", 10)
                         .AddOption("Previous~Page.", 1)
                        .AddOption("I will come later. ", 255)
                        .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Choose what kind of refined gem do you want me to make Super Gem?")
                        .AddOption("Kylin~Gems.", 13)
                        .AddOption("Rainbow~Gems.", 14)
                        .AddOption("Fury~Gems.", 15)
                        .AddOption("Phoenix~Gems.", 17)
                        .AddOption("Next~Page.", 222)
                        .AddOption("I will come later. ", 255)
                        .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 222:
                    {
                        data.AddText("Choose what kind of refined gem do you want me to make Super Gem?")
                        .AddOption("Dragon~Gems.", 16)
                         .AddOption("Violet~Gems.", 18)
                        .AddOption("Moon~Gems.", 19)
                        .AddOption("Tortoise~Gems.", 20)
                        .AddOption("Previous~Page.", 2)
                        .AddOption("I will come later. ", 255)
                        .AddAvatar(64).FinalizeDialog();
                        break;
                    }
                case 3: //Kylin Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 1500000)
                        {
                            if (client.Inventory.Contain(700041, 15))
                            {
                                client.Inventory.Remove(700041, 15, stream);
                                client.Player.Money -= 1500000;
                                client.Inventory.Add(stream, 700042, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Kylin Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 1,500,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 4: //Rainbow Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 1500000)
                        {
                            if (client.Inventory.Contain(700031, 15))
                            {
                                client.Inventory.Remove(700031, 15, stream);
                                client.Player.Money -= 1500000;
                                client.Inventory.Add(stream, 700032, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Rainbow Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 1,500,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 5: //Fury Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 1500000)
                        {
                            if (client.Inventory.Contain(700021, 15))
                            {
                                client.Inventory.Remove(700021, 15, stream);
                                client.Player.Money -= 1500000;
                                client.Inventory.Add(stream, 700022, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Fury Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 1,500,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 6: //Dragon Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 1500000)
                        {
                            if (client.Inventory.Contain(700011, 15))
                            {
                                client.Inventory.Remove(700011, 15, stream);
                                client.Player.Money -= 1500000;
                                client.Inventory.Add(stream, 700012, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Dragon Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 1,500,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 7: //Phoenix Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 1500000)
                        {
                            if (client.Inventory.Contain(700001, 15))
                            {
                                client.Inventory.Remove(700001, 15, stream);
                                client.Player.Money -= 1500000;
                                client.Inventory.Add(stream, 700002, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Phoenix Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 1,500,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 8: //Violet Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 1500000)
                        {
                            if (client.Inventory.Contain(700051, 15))
                            {
                                client.Inventory.Remove(700051, 15, stream);
                                client.Player.Money -= 1500000;
                                client.Inventory.Add(stream, 700052, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Violet Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 1,500,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 9: //Moon Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 1500000)
                        {
                            if (client.Inventory.Contain(700061, 15))
                            {
                                client.Inventory.Remove(700061, 15, stream);
                                client.Player.Money -= 1500000;
                                client.Inventory.Add(stream, 700062, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Moon Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 1,500,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 10: //Tortoise Gem Normal to Refined
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 20000000)
                        {
                            if (client.Inventory.Contain(700071, 15))
                            {
                                Game.MsgFloorItem.MsgItemPacket effect = Game.MsgFloorItem.MsgItemPacket.Create();
                                client.Inventory.Remove(700071, 15, stream);
                                client.Player.Money -= 20000000;
                                client.Inventory.Add(stream, 700072, 1);
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("#07#42 It was a pleasure to negotiate with [" + client.Player.Name + "], you he gain Refined Tortoise Gem with Jewerly [GemCompose].", "ALLUSERS", "[System]", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                                effect.m_UID = (uint)Game.MsgFloorItem.MsgItemPacket.EffectMonsters.Night;
                                effect.DropType = MsgDropID.Earth;
                                client.Send(stream.ItemPacketCreate(effect));
                            }
                            else
                            {
                                data.AddText("You don't have enough Tortoise Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(64).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 20,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(64).FinalizeDialog();
                        }
                        break;
                    }
                case 13: //Kylin Gem Normal to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 3000000)
                        {
                            if (client.Inventory.Contain(700042, 10))
                            {
                                client.Inventory.Remove(700042, 10, stream);
                                client.Player.Money -= 3000000;
                                client.Inventory.Add(stream, 700043, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Kylin Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 3,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 14: //Rainbow Gem Normal to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 3000000)
                        {
                            if (client.Inventory.Contain(700032, 10))
                            {
                                client.Inventory.Remove(700032, 10, stream);
                                client.Player.Money -= 3000000;
                                client.Inventory.Add(stream, 700033, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Rainbow Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 3,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 15: //Fury Gem Normal to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 3000000)
                        {
                            if (client.Inventory.Contain(700022, 10))
                            {
                                client.Inventory.Remove(700022, 10, stream);
                                client.Player.Money -= 3000000;
                                client.Inventory.Add(stream, 700023, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Fury Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 3,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 16: //Dragon Gem Normal to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 3000000)
                        {
                            if (client.Inventory.Contain(700012, 10))
                            {
                                client.Inventory.Remove(700012, 10, stream);
                                client.Player.Money -= 3000000;
                                client.Inventory.Add(stream, 700013, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Dragon Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 3,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 17: //Phoenix Gem Normal to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 3000000)
                        {
                            if (client.Inventory.Contain(700002, 10))
                            {
                                client.Inventory.Remove(700002, 10, stream);
                                client.Player.Money -= 3000000;
                                client.Inventory.Add(stream, 700003, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Phoenix Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 3,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 18: //Violet Gem Normal to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 3000000)
                        {
                            if (client.Inventory.Contain(700052, 10))
                            {
                                client.Inventory.Remove(700052, 10, stream);
                                client.Player.Money -= 3000000;
                                client.Inventory.Add(stream, 700053, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Violet Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 3,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 19: //Moon Gem Normal to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 3000000)
                        {
                            if (client.Inventory.Contain(700062, 10))
                            {
                                client.Inventory.Remove(700062, 10, stream);
                                client.Player.Money -= 3000000;
                                client.Inventory.Add(stream, 700063, 1);
                            }
                            else
                            {
                                data.AddText("You don't have enough Moon Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 3,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 20: //Tortoise Gem Ref to Super
                    {
                        if (client.Inventory.HaveSpace(1) && client.Player.Money >= 50000000)
                        {
                            if (client.Inventory.Contain(700072, 10))
                            {
                                Game.MsgFloorItem.MsgItemPacket effect = Game.MsgFloorItem.MsgItemPacket.Create();
                                client.Inventory.Remove(700072, 10, stream);
                                client.Player.Money -= 50000000;
                                client.Inventory.Add(stream, 700073, 1);
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("#07#42 It was a pleasure to negotiate with [" + client.Player.Name + "], you he gain Super Tortoise Gem with Jewerly [GemCompose].", "ALLUSERS", "[System]", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                                effect.m_UID = (uint)Game.MsgFloorItem.MsgItemPacket.EffectMonsters.Night;
                                effect.DropType = MsgDropID.Earth;
                                client.Send(stream.ItemPacketCreate(effect));
                            }
                            else
                            {
                                data.AddText("You don't have enough Tortoise Gems.")
                                .AddOption("I see.", 255)
                                .AddAvatar(64).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don't have enough space in your inventory or you don't have 50,000,000 gold")
                            .AddOption("I see.", 255)
                            .AddAvatar(64).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region ImperialJeweler (gem compose)
        //[Npc(NpcID.ImperialJeweler)]
        //public static void ImperialJeweler(GameClient client, Packet stream, byte Option, string Input, uint id)
        //{
        //    Dialog dialog;
        //    dialog = new Dialog(client, stream);
        //    switch (Option)
        //    {
        //        case 0:
        //            dialog.Text("Are you still plagued by a lack of Refined Gems? Well, I have a deal for you! There`s a chance for you to get piles of Refined Gems!");
        //            dialog.Text("~If you can give me 15 Normal Gems, you can trade for 1 Refined Gem and 15 Refiend Gems, you can trade for 1 Super Gem! However, I have no idea which Super Gem you will get.");
        //            dialog.Text("~All I can say is that you won`t get a Super Thunder Gem or Super Glory Gem. You can check how many gems you have given to me, whenever you like. Good luck!!");
        //            dialog.Option("I~want~to~hand~in~Normal~gems.", 3);
        //            dialog.Option("I~want~to~hand~in~Refined~gems.", 4);
        //            dialog.Option("Not~interested.", byte.MaxValue);
        //            dialog.AddAvatar(33);
        //            dialog.FinalizeDialog();
        //            break;
        //        case 3:
        //            dialog.Text("Are you still plagued by a lack of Refined Gems? Well, I have a deal for you! There`s a chance for you to get piles of Refined Gems!");
        //            dialog.Text("~If you can give me 15 Normal Gems, you can trade for 1 Refined Gem! However, I have no idea which Refined Gem you will get.");
        //            dialog.Text("~All I can say is that you won`t get a Refined Thunder Gem or Refined Glory Gem. You can check how many gems you have given to me, whenever you like. Good luck!!");
        //            dialog.Option("Trade~for~a~Refined~Gem.", 1);
        //            dialog.Option("Check~how~many~gems~I~gave.", 2);
        //            dialog.Option("Not~interested.", byte.MaxValue);
        //            dialog.AddAvatar(33);
        //            dialog.FinalizeDialog();
        //            break;
        //        case 4:
        //            dialog.Text("Are you still plagued by a lack of Super Gems? Well, I have a deal for you! There`s a chance for you to get piles of Super Gems!");
        //            dialog.Text("~If you can give me 15 Refined Gems, you can trade for 1 Super Gem! However, I have no idea which Super Gem you will get.");
        //            dialog.Text("~All I can say is that you won`t get a Super Thunder Gem or Super Glory Gem. You can check how many gems you have given to me, whenever you like. Good luck!!");
        //            dialog.Option("Trade~for~a~Super~Gem.", 5);
        //            dialog.Option("Check~how~many~gems~I~gave.", 6);
        //            dialog.Option("Not~interested.", byte.MaxValue);
        //            dialog.AddAvatar(33);
        //            dialog.FinalizeDialog();
        //            break;
        //        case 5:
        //            if (ItemType.AmountRefiendGems(client) >= 15)
        //            {
        //                Random r2;
        //                r2 = new Random();
        //                int j;
        //                j = r2.Next(100);
        //                if (j >= 0 && j <= 9)
        //                {
        //                    foreach (uint Trade21 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade21, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700003u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Phoenix Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //                else if (j >= 10 && j <= 19)
        //                {
        //                    foreach (uint Trade20 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade20, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700013u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Dragon Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //                else if (j >= 30 && j <= 39)
        //                {
        //                    foreach (uint Trade19 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade19, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700023u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Fury Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //                else if (j >= 40 && j <= 49)
        //                {
        //                    foreach (uint Trade18 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade18, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700033u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Rainbow Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //                else if (j >= 50 && j <= 65)
        //                {
        //                    foreach (uint Trade17 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade17, 1u, stream);
        //                    }
        //                    foreach (uint Trade16 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade16, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700043u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Kylin Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //                else if (j >= 66 && j <= 70)
        //                {
        //                    foreach (uint Trade15 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade15, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700073u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Tortoise Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //                //else if (j >= 71 && j <= 72)
        //                //{
        //                //    foreach (uint Trade14 in client.Inventory.RefiendGemsList)
        //                //    {
        //                //        client.Inventory.Remove(Trade14, 1u, stream);
        //                //    }
        //                //    client.Inventory.Add(stream, 700103u, 1, 0, 0, 0);
        //                //    dialog.Text("You traded for 1 Super Thunder Gem!");
        //                //    dialog.Option("Thank you!", byte.MaxValue);
        //                //    dialog.AddAvatar(10).FinalizeDialog();
        //                //}
        //                //else if (j >= 73 && j <= 74)
        //                //{
        //                //    foreach (uint Trade13 in client.Inventory.RefiendGemsList)
        //                //    {
        //                //        client.Inventory.Remove(Trade13, 1u, stream);
        //                //    }
        //                //    client.Inventory.Add(stream, 700123u, 1, 0, 0, 0);
        //                //    dialog.Text("You traded for 1 Super Glory Gem!");
        //                //    dialog.Option("Thank you!", byte.MaxValue);
        //                //    dialog.AddAvatar(10).FinalizeDialog();
        //                //}
        //                else if (j >= 75 && j <= 85)
        //                {
        //                    foreach (uint Trade12 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade12, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700063u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Moon Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //                else
        //                {
        //                    if (j < 86 || j > 100)
        //                        break;
        //                    foreach (uint Trade11 in client.Inventory.RefiendGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade11, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700053u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Super Violet Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(10).FinalizeDialog();
        //                }
        //            }
        //            else
        //            {
        //                dialog.Text($"Sorry {client.Player.Name} you dont have enough gems you still have {ItemType.AmountRefiendGems(client)} Refiend gems.!");
        //                dialog.Option("Sorry.", byte.MaxValue);
        //                dialog.AddAvatar(10).FinalizeDialog();
        //            }
        //            break;
        //        case 6:
        //            if (ItemType.AmountRefiendGems(client) <= 14)
        //            {
        //                dialog.Text("You have handed in " + ItemType.AmountRefiendGems(client) + " Refiend Gems. Turning in 15 Refiend Gems will earn you 1 Super Gem. Keep going!");
        //                dialog.Option("Thanks!", byte.MaxValue);
        //                dialog.AddAvatar(33);
        //                dialog.FinalizeDialog();
        //            }
        //            else
        //            {
        //                dialog.Text("You have handed in " + ItemType.AmountRefiendGems(client) + " Refiend Gems. Hurry and trade them for a Super Gem!");
        //                dialog.Option("Thanks!", byte.MaxValue);
        //                dialog.AddAvatar(33);
        //                dialog.FinalizeDialog();
        //            }
        //            break;
        //        case 1:
        //            if (ItemType.AmountNormalGems(client) >= 15)
        //            {
        //                Random r;
        //                r = new Random();
        //                int i;
        //                i = r.Next(100);
        //                if (i >= 0 && i <= 9)
        //                {
        //                    foreach (uint Trade10 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade10, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700002u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Phoenix Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 10 && i <= 19)
        //                {
        //                    foreach (uint Trade9 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade9, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700012u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Dragon Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 30 && i <= 39)
        //                {
        //                    foreach (uint Trade8 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade8, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700022u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Fury Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 40 && i <= 49)
        //                {
        //                    foreach (uint Trade7 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade7, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700032u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Rainbow Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 50 && i <= 65)
        //                {
        //                    foreach (uint Trade6 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade6, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700042u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Kylin Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 66 && i <= 70)
        //                {
        //                    foreach (uint Trade5 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade5, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700072u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Tortoise Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 71 && i <= 72)
        //                {
        //                    foreach (uint Trade4 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade4, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700102u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Thunder Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 73 && i <= 74)
        //                {
        //                    foreach (uint Trade3 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade3, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700122u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Glory Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else if (i >= 75 && i <= 85)
        //                {
        //                    foreach (uint Trade2 in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade2, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700062u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Moon Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //                else
        //                {
        //                    if (i < 86 || i > 100)
        //                        break;
        //                    foreach (uint Trade in client.Inventory.NormalGemsList)
        //                    {
        //                        client.Inventory.Remove(Trade, 1u, stream);
        //                    }
        //                    client.Inventory.Add(stream, 700052u, 1, 0, 0, 0);
        //                    dialog.Text("You traded for 1 Refined Violet Gem!");
        //                    dialog.Option("Thank you!", byte.MaxValue);
        //                    dialog.AddAvatar(33);
        //                    dialog.FinalizeDialog();
        //                }
        //            }
        //            else
        //            {
        //                dialog.Text($"Sorry {client.Player.Name} you dont have enough gems you still have {ItemType.AmountNormalGems(client)} Normal Gems.!");
        //                dialog.Option("Sorry.", byte.MaxValue);
        //                dialog.AddAvatar(10).FinalizeDialog();
        //            }
        //            break;
        //        case 2:
        //            if (ItemType.AmountNormalGems(client) <= 14)
        //            {
        //                dialog.Text("You have handed in " + ItemType.AmountNormalGems(client) + " Normal Gems. Turning in 15 Normal Gems will earn you 1 Refined Gem. Keep going!");
        //                dialog.Option("Thanks!", byte.MaxValue);
        //                dialog.AddAvatar(33);
        //                dialog.FinalizeDialog();
        //            }
        //            else
        //            {
        //                dialog.Text("You have handed in " + ItemType.AmountNormalGems(client) + " Normal Gems. Hurry and trade them for a Refined Gem!");
        //                dialog.Option("Thanks!", byte.MaxValue);
        //                dialog.AddAvatar(33);
        //                dialog.FinalizeDialog();
        //            }
        //            break;
        //    }
        //}
        #endregion


        [Npc(NpcID.BossPoints)]
        public static void BossPoints(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Greetings, valiant warrior! Your courage and strength have seen you through countless fierce battles against formidable bosses. It's time to reap the rewards of your hard-fought victories! You have earned " + client.Player.BossPoints + " points.");
                    dialog.Option("Claim 35 BossPoints (Rare Accessory)", 1);
                    dialog.Option("Claim 35 BossPoints (Rare Garment)", 2);
                    dialog.Option("Claim 30 BossPoints (SmallLotteryTicketPack)", 3);
                    //dialog.Option("100 BossPoints (Rare-Mount)", 3);
                    //dialog.Option("400 BossPoints (VIP6 Weekly)", 4);
                    dialog.Option("Claim 10 BossPoints (Random Flowers)", 5);
                    dialog.Option("Leave", byte.MaxValue);
                    dialog.AddAvatar(10).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.BossPoints >= 35)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.BossPoints -= 35;
                            client.SendSysMesage("You`ve got the item! Check your inventory.");
                            uint[] RareAccessorys;
                            RareAccessorys = ItemType.RareAccessories.ToArray();
                            int position;
                            position = ServerKernel.NextAsync(0, RareAccessorys.Length);
                            client.Inventory.Add(stream, RareAccessorys[position], 1, 0, 0, 0);
                            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("#07#42 It was a pleasure to negotiate with [" + client.Player.Name + "], you he gain RareAccessories trading BossPoints from TwinCity.", "ALLUSERS", "[System]", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                        }
                        else
                            client.SendSysMesage("You don`t have enough space in your inventory.");
                    }
                    else
                        client.SendSysMesage("You don`t have enough points.");
                    break;
                case 2:
                    if (client.Player.BossPoints >= 35)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.BossPoints -= 35;
                            client.SendSysMesage("You`ve got the item! Check your inventory.");
                            uint[] RareAccessorys2;
                            RareAccessorys2 = ItemType.RareGarments.ToArray();
                            int position2;
                            position2 = ServerKernel.NextAsync(0, RareAccessorys2.Length);
                            client.Inventory.Add(stream, RareAccessorys2[position2], 1, 0, 0, 0);
                            Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("#07#42 It was a pleasure to negotiate with [" + client.Player.Name + "], you he gain RareGarments trading BossPoints from TwinCity.", "ALLUSERS", "[System]", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                        }
                        else
                            client.SendSysMesage("You don`t have enough space in your inventory.");
                    }
                    else
                        client.SendSysMesage("You don`t have enough points.");
                    break;
                case 3:
                    if (client.Player.BossPoints >= 30)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.BossPoints -= 30;
                            client.Inventory.Add(stream, 724002, 1, 0, 0, 0);
                            client.SendSysMesage("You`ve got the item! Check your inventory.");
                        }
                        else
                            client.SendSysMesage("You don`t have enough space in your inventory.");
                    }
                    else
                        client.SendSysMesage("You don`t have enough points.");
                    break;
                //case 4:
                //    if (client.Player.BossPoints >= 400 && client.Player.VipLevel < 6)
                //    {
                //        client.Player.BossPoints -= 400;
                //        client.Player.AddVIPLevel(6, DateTime.Now.AddDays(7.0), stream);
                //        client.CreateBoxDialog("You`ve Successfuly upgrade your vip to level " + client.Player.VipLevel);
                //        Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("#07#42 It was a pleasure to negotiate with [" + client.Player.Name + "], you he gain VIP 6 7 days trading BossPoints from TwinCity.", "ALLUSERS", "[System]", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                //    }
                //    else
                //        client.SendSysMesage("You don`t have enough points.");
                //    break;

                case 5:
                    if (client.Player.BossPoints >= 10)
                    {
                        client.Player.BossPoints -= 10;
                        List<uint> list;
                        list = new List<uint>();
                        list.Add(754999);//999Tulips
                        list.Add(753999);//999Orchids
                        list.Add(751999);
                        List<uint> listFlower;
                        listFlower = list;
                        uint reward;
                        reward = listFlower[Core.Random.Next(0, listFlower.Count)];
                        client.Inventory.Add(stream, reward, 1, 0, 0, 0);
                        client.SendSysMesage("You`ve got the item! Check your inventory.");
                    }
                    else
                        client.SendSysMesage("You don`t have enough points.");
                    break;
            }
        }

        [Npc(NpcID.SoulsTrader)]
        public static void SoulsTrader(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("Hello there! I`m the new Souls Master over here. I can trade your P3, P4 and P5 souls for a random a P6 or matrial lev5 one choose your option");
                    dialog.Option("Trade old Souls.", 1);
                    dialog.Option("Trade old Matrials", 2);
                    dialog.Option("Leave", byte.MaxValue);
                    dialog.AddAvatar(10).FinalizeDialog();
                    break;
                case 1:
                    dialog.Text("Hello there! I`m the new Souls Master over here. I can trade your P3, P4 and P5 souls for a random a P6 one");
                    dialog.Option("Trade 15 (P3-5s) for 1 Random P6.", 3);
                    dialog.Option("Trade 15 (P3-5s) for 1 Random Matrial(5).", 4);
                    dialog.Option("Leave", byte.MaxValue);
                    dialog.AddAvatar(10).FinalizeDialog();
                    break;
                case 2:
                    dialog.Text("Hello there! I`m the new Souls Master over here. I can trade your matrials Level 3 and Level 4 for a random a Matrial P5 One");
                    dialog.Option("Trade 15 Matrial(Lev3) for 1 Random Matrial(4).", 5);
                    dialog.Option("Trade 15 Matrial(lev4) for 1 Random Matrial(5).", 6);
                    dialog.Option("Leave", byte.MaxValue);
                    dialog.AddAvatar(10).FinalizeDialog();
                    break;
                case 3:
                    if (ItemType.AmountPurification(client, 5) >= 15)
                    {
                        foreach (uint Trade in client.Inventory.SoulsList)
                        {
                            client.Inventory.Remove(Trade, 1u, stream);
                        }
                        ItemType.DBItem[] array;
                        array = ItemType.PurificationItems[6].Values.ToArray();
                        int position;
                        position = ServerKernel.NextAsync(0, array.Length);
                        uint item;
                        item = array[position].ID;
                        string name;
                        name = Server.ItemsBase.GetItemName(item);
                        client.Inventory.Add(stream, item, 1, 0, 0, 0);
                        client.CreateBoxDialog("You got a " + name + "! Check your inventory!");
                        Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " has got a " + name + " from the Souls Trader.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk).GetArray(stream));
                    }
                    else
                    {
                        dialog.Text($"Sorry {client.Player.Name} you dont have enough souls you still have {ItemType.AmountPurification(client, 5)} Item.!");
                        dialog.Option("Sorry.", byte.MaxValue);
                        dialog.AddAvatar(10).FinalizeDialog();
                    }
                    break;
                case 4:
                    if (ItemType.AmountPurification(client, 5) >= 15)
                    {
                        foreach (uint Trade2 in client.Inventory.SoulsList)
                        {
                            client.Inventory.Remove(Trade2, 1u, stream);
                        }
                        Rifinery.Item[] array2;
                        array2 = ItemType.Refinary[5u].Values.ToArray();
                        int position2;
                        position2 = ServerKernel.NextAsync(0, array2.Length);
                        uint item2;
                        item2 = array2[position2].ItemID;
                        string name2;
                        name2 = Server.ItemsBase.GetItemName(item2);
                        client.Inventory.Add(stream, item2, 1, 0, 0, 0);
                        client.CreateBoxDialog("You got a " + name2 + "! Check your inventory!");
                        Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " has got a " + name2 + " from the Souls Trader.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk).GetArray(stream));
                    }
                    else
                    {
                        dialog.Text($"Sorry {client.Player.Name} you dont have enough souls you still have {ItemType.AmountPurification(client, 5)} Item.!");
                        dialog.Option("Sorry.", byte.MaxValue);
                        dialog.AddAvatar(10).FinalizeDialog();
                    }
                    break;
                case 5:
                    if (ItemType.AmountMatrial(client, 3) >= 15)
                    {
                        foreach (uint Trade3 in client.Inventory.MatrialList)
                        {
                            client.Inventory.Remove(Trade3, 1u, stream);
                        }
                        Rifinery.Item[] array3;
                        array3 = ItemType.Refinary[4u].Values.ToArray();
                        int position3;
                        position3 = ServerKernel.NextAsync(0, array3.Length);
                        uint item3;
                        item3 = array3[position3].ItemID;
                        string name3;
                        name3 = Server.ItemsBase.GetItemName(item3);
                        client.Inventory.Add(stream, item3, 1, 0, 0, 0);
                        client.CreateBoxDialog("You got a " + name3 + "! Check your inventory!");
                        Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " has got a " + name3 + " from the Souls Trader.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk).GetArray(stream));
                    }
                    else
                    {
                        dialog.Text($"Sorry {client.Player.Name} you dont have enough souls you still have {ItemType.AmountMatrial(client, 3)} Item.!");
                        dialog.Option("Sorry.", byte.MaxValue);
                        dialog.AddAvatar(10).FinalizeDialog();
                    }
                    break;
                case 6:
                    if (ItemType.AmountMatrial(client, 4) >= 15)
                    {
                        foreach (uint Trade4 in client.Inventory.MatrialList)
                        {
                            client.Inventory.Remove(Trade4, 1u, stream);
                        }
                        Rifinery.Item[] array4;
                        array4 = ItemType.Refinary[5u].Values.ToArray();
                        int position4;
                        position4 = ServerKernel.NextAsync(0, array4.Length);
                        uint item4;
                        item4 = array4[position4].ItemID;
                        string name4;
                        name4 = Server.ItemsBase.GetItemName(item4);
                        client.Inventory.Add(stream, item4, 1, 0, 0, 0);
                        client.CreateBoxDialog("You got a " + name4 + "! Check your inventory!");
                        Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " has got a " + name4 + " from the Souls Trader.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk).GetArray(stream));
                    }
                    else
                    {
                        dialog.Text($"Sorry {client.Player.Name} you dont have enough souls you still have {ItemType.AmountMatrial(client, 4)} Item.!");
                        dialog.Option("Sorry.", byte.MaxValue);
                        dialog.AddAvatar(10).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.WelcomeGearPack)]
        public static void WelcomeGearPack(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello, " + client.Player.Name + " i can help you to claim bound equipments. What~kind~of~bound~gear~do~you~want?");
                    data.AddOption("Trojan~Equipments.", 1);
                    data.AddOption("Warrior~Equipments.", 2);
                    data.AddOption("Archer~Equipments.", 3);
                    data.AddOption("Ninja~Equipments.", 4);
                    data.AddOption("Monk~Equipments.", 5);
                    data.AddOption("Water/Fire~Equipments.", 6);
                    data.AddOption("Let~me~see...");
                    data.FinalizeDialog();
                    break;
                case 1:
                    {
                        if (!client.Inventory.Remove(723753, 1, stream))
                            break;
                        uint[] dwTrojanItems;
                        dwTrojanItems = new uint[8]
                        {
                    118009, 120009, 130009, 300000, 410029, 480029, 150019, 160019
                        };
                        uint[] array6;
                        array6 = dwTrojanItems;
                        foreach (uint idType in array6)
                        {
                            Flags.Gem SocketOne;
                            SocketOne = Flags.Gem.EmptySocket;
                            byte Enchantment;
                            Enchantment = 0;
                            byte Bless;
                            Bless = 0;
                            Flags.ConquerItem conquerItem6;
                            conquerItem6 = (Flags.ConquerItem)ItemType.ItemPosition(idType);
                            if (conquerItem6 - 10 <= Flags.ConquerItem.Necklace || conquerItem6 - 17 <= Flags.ConquerItem.Head)
                            {
                                Bless = 0;
                                Enchantment = 0;
                                SocketOne = Flags.Gem.NoSocket;
                            }
                            client.Inventory.Add(stream, idType, 1, ServerKernel.Bound_Equipments_Plus, Bless, Enchantment, SocketOne, Flags.Gem.NoSocket, true);
                        }
                        client.Inventory.Add(stream, 1200000u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                        client.Inventory.AddItemWitchStack(722136u, 0, 10, stream, true);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        client.SendSysMesage($"You~received~a~trojan~gears~plus~+{ServerKernel.Bound_Equipments_Plus}~Super~equipment!!\"");
                        break;
                    }
                case 2:
                    {
                        byte Plus;
                        Plus = ServerKernel.Bound_Equipments_Plus;
                        if (!client.Inventory.Remove(723753u, 1u, stream))
                            break;
                        uint[] dwWarriorItems;
                        dwWarriorItems = new uint[7] { 111009u, 120009u, 131009u, 300000u, 561029u, 150019u, 160019u };
                        uint[] array4;
                        array4 = dwWarriorItems;
                        foreach (uint idType2 in array4)
                        {
                            Flags.Gem SocketOne2;
                            SocketOne2 = Flags.Gem.EmptySocket;
                            byte Enchantment2;
                            Enchantment2 = 0;
                            byte Bless2;
                            Bless2 = 0;
                            Flags.ConquerItem conquerItem4;
                            conquerItem4 = (Flags.ConquerItem)ItemType.ItemPosition(idType2);
                            if (conquerItem4 - 10 <= Flags.ConquerItem.Necklace || conquerItem4 - 17 <= Flags.ConquerItem.Head)
                            {
                                Bless2 = 0;
                                Enchantment2 = 0;
                                SocketOne2 = Flags.Gem.NoSocket;
                            }
                            client.Inventory.Add(stream, idType2, 1, Plus, Bless2, Enchantment2, SocketOne2, Flags.Gem.NoSocket, true);
                        }
                        client.Inventory.Add(stream, 1200000u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                        client.Inventory.AddItemWitchStack(722136u, 0, 10, stream, true);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        client.SendSysMesage($"You~received~a~warrior~gears~plus~+{Plus}~Super~equipment!");
                        break;
                    }
                case 3:
                    {
                        byte Plus2;
                        Plus2 = ServerKernel.Bound_Equipments_Plus;
                        if (!client.Inventory.Remove(723753u, 1u, stream))
                            break;
                        uint[] dwArcherItems;
                        dwArcherItems = new uint[7] { 113009u, 120009u, 133009u, 300000u, 500019u, 150019u, 160019u };
                        uint[] array2;
                        array2 = dwArcherItems;
                        foreach (uint idType3 in array2)
                        {
                            Flags.Gem SocketOne3;
                            SocketOne3 = Flags.Gem.EmptySocket;
                            byte Enchantment3;
                            Enchantment3 = 0;
                            byte Bless3;
                            Bless3 = 0;
                            Flags.ConquerItem conquerItem2;
                            conquerItem2 = (Flags.ConquerItem)ItemType.ItemPosition(idType3);
                            if (conquerItem2 - 10 <= Flags.ConquerItem.Necklace || conquerItem2 - 17 <= Flags.ConquerItem.Head)
                            {
                                Bless3 = 0;
                                Enchantment3 = 0;
                                SocketOne3 = Flags.Gem.NoSocket;
                            }
                            client.Inventory.Add(stream, idType3, 1, Plus2, Bless3, Enchantment3, SocketOne3, Flags.Gem.NoSocket, true);
                        }
                        client.Inventory.Add(stream, 1200000u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                        client.Inventory.AddItemWitchStack(722136u, 0, 10, stream, true);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        client.SendSysMesage($"You~received~a~archer~gears~plus~+{Plus2}~Super~equipment!");
                        break;
                    }
                case 4:
                    {
                        byte Plus3;
                        Plus3 = ServerKernel.Bound_Equipments_Plus;
                        if (!client.Inventory.Remove(723753u, 1u, stream))
                            break;
                        uint[] dwNinjaItems;
                        dwNinjaItems = new uint[8]
                        {
                    112009u, 120009u, 135009u, 300000u, 601029u, 601029u, 150019u, 160019u
                        };
                        uint[] array3;
                        array3 = dwNinjaItems;
                        foreach (uint idType4 in array3)
                        {
                            Flags.Gem SocketOne4;
                            SocketOne4 = Flags.Gem.EmptySocket;
                            byte Enchantment4;
                            Enchantment4 = 0;
                            byte Bless4;
                            Bless4 = 0;
                            Flags.ConquerItem conquerItem3;
                            conquerItem3 = (Flags.ConquerItem)ItemType.ItemPosition(idType4);
                            if (conquerItem3 - 10 <= Flags.ConquerItem.Necklace || conquerItem3 - 17 <= Flags.ConquerItem.Head)
                            {
                                Bless4 = 0;
                                Enchantment4 = 0;
                                SocketOne4 = Flags.Gem.NoSocket;
                            }
                            client.Inventory.Add(stream, idType4, 1, Plus3, Bless4, Enchantment4, SocketOne4, Flags.Gem.NoSocket, true);
                        }
                        client.Inventory.Add(stream, 1200000u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                        client.Inventory.AddItemWitchStack(722136u, 0, 10, stream, true);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        client.SendSysMesage($"You~received~a~ninja~gears~plus~+{Plus3}~Super~equipment!");
                        break;
                    }
                case 5:
                    {
                        byte Plus4;
                        Plus4 = ServerKernel.Bound_Equipments_Plus;
                        if (!client.Inventory.Remove(723753u, 1u, stream))
                            break;
                        uint[] dwMonkItems;
                        dwMonkItems = new uint[8]
                        {
                    143009u, 120009u, 136009u, 300000u, 610029u, 610029u, 151019u, 160019u
                        };
                        uint[] array5;
                        array5 = dwMonkItems;
                        foreach (uint idType5 in array5)
                        {
                            Flags.Gem SocketOne5;
                            SocketOne5 = Flags.Gem.EmptySocket;
                            byte Enchantment5;
                            Enchantment5 = 0;
                            byte Bless5;
                            Bless5 = 0;
                            Flags.ConquerItem conquerItem5;
                            conquerItem5 = (Flags.ConquerItem)ItemType.ItemPosition(idType5);
                            if (conquerItem5 - 10 <= Flags.ConquerItem.Necklace || conquerItem5 - 17 <= Flags.ConquerItem.Head)
                            {
                                Bless5 = 0;
                                Enchantment5 = 0;
                                SocketOne5 = Flags.Gem.NoSocket;
                            }
                            client.Inventory.Add(stream, idType5, 1, Plus4, Bless5, Enchantment5, SocketOne5, Flags.Gem.NoSocket, true);
                        }
                        client.Inventory.Add(stream, 1200000u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                        client.Inventory.AddItemWitchStack(722136u, 0, 10, stream, true);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        client.SendSysMesage($"You~received~a~monk~gears~plus~+{Plus4}~Super~equipment!");
                        break;
                    }
                case 6:
                    {
                        byte Plus5;
                        Plus5 = ServerKernel.Bound_Equipments_Plus;
                        if (!client.Inventory.Remove(723753u, 1u, stream))
                            break;
                        uint[] dwTaoistItems;
                        dwTaoistItems = new uint[7] { 114009u, 121009u, 134009u, 300000u, 421029u, 152019u, 160019u };
                        uint[] array;
                        array = dwTaoistItems;
                        foreach (uint idType6 in array)
                        {
                            Flags.Gem SocketOne6;
                            SocketOne6 = Flags.Gem.EmptySocket;
                            byte Enchantment6;
                            Enchantment6 = 0;
                            byte Bless6;
                            Bless6 = 0;
                            Flags.ConquerItem conquerItem;
                            conquerItem = (Flags.ConquerItem)ItemType.ItemPosition(idType6);
                            if (conquerItem - 10 <= Flags.ConquerItem.Necklace || conquerItem - 17 <= Flags.ConquerItem.Head)
                            {
                                Bless6 = 0;
                                Enchantment6 = 0;
                                SocketOne6 = Flags.Gem.NoSocket;
                            }
                            client.Inventory.Add(stream, idType6, 1, Plus5, Bless6, Enchantment6, SocketOne6, Flags.Gem.NoSocket, true);
                        }
                        client.Inventory.Add(stream, 1200000u, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                        client.Inventory.AddItemWitchStack(722136u, 0, 10, stream, true);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "angelwing");
                        client.SendSysMesage($"You~received~a~taoist~gears~plus~+{Plus5}~Super~equipment!\"");
                        break;
                    }
            }
        }

        [Npc(NpcID.WarehouseGuardian)]
        public static void WarehouseGuardian(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.Text("Hello. I'm the one that was choosen to set/change/remove the password of the warehouse. I must say without a password you could lose a lot yet, which you probably already knew.");
                    data.Text(" My advice for you is that you should have a password, because it could save you of many problems. If you have a password yet, you can remove or change it.");
                    if (client.Player.OnReset == 0)
                    {
                        if (client.Player.SecurityPassword == 0)
                            data.Option("Okay, let me set the password.", 1);
                        else
                        {
                            data.Option("I~want~to~change~a~password.", 2);
                            data.Option("I~want~to~remove~the~password.", 3);
                        }
                    }
                    else
                    {
                        data.AddText("Your secondary password will be removed on " + client.Player.ResetSecurityPassowrd.ToString("d/M/yyyy (H:mm)") + ".");
                        data.AddOption("Thanks.");
                    }
                    data.Option("Let~me~see.", byte.MaxValue);
                    data.AddAvatar(1);
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.SecurityPassword == 0)
                    {
                        data.Text("Please insert a password that's Passwords can be up to nine digits long, the first od which can't be a zero. Enter numbers only. An example can be 74352.");
                        data.AddInput("Here:", 4);
                        data.Option("Let~me~think.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.Text("You have a password already set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 4:
                    if (client.Player.SecurityPassword == 0)
                    {
                        if (Program.CheckNumberPassword(Input))
                        {
                            client.Player.TempPassword = uint.Parse(Input);
                            data.Text("Please insert the password again.");
                            data.AddInput("Here:", 5);
                            data.Option("Forget it.", byte.MaxValue);
                            data.AddAvatar(1);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.Text("Wrong~password.~Please~enter~again.");
                            data.AddInput("Here:", 4);
                            data.Option("Alright.", byte.MaxValue);
                            data.AddAvatar(1);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.Text("You have a password already set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 5:
                    if (client.Player.SecurityPassword == 0)
                    {
                        if (Program.CheckNumberPassword(Input))
                        {
                            if (client.Player.TempPassword == uint.Parse(Input))
                            {
                                client.Player.TempPassword = 0u;
                                client.Player.SecurityPassword = uint.Parse(Input);
                                client.Player.VerifiedPassword = true;
                                data.AddText("You have created a password for your warehouse successfully. If you wanna change or cancel the password, just come to me..");
                                data.AddOption("OK!~Thanks");
                                data.AddAvatar(1);
                                data.FinalizeDialog();
                                client.SendSysMesage("Successfully set! Please remember your secondary password");
                            }
                            else
                            {
                                data.Text("The password doesn't match. Insert again?");
                                data.AddInput("Here:", 5);
                                data.Option("Forget it.", byte.MaxValue);
                                data.AddAvatar(1);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.Text("Invalid password, please try again.");
                            data.AddInput("Here:", 5);
                            data.Option("Alright.", byte.MaxValue);
                            data.AddAvatar(1);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.Text("You have a password already set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Player.SecurityPassword != 0)
                    {
                        data.Text("Please enter your old password in order to change it.");
                        data.AddInput("Here:", 6);
                        data.Option("Forget it.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.Text("You don't have a password set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 6:
                    if (client.Player.SecurityPassword != 0)
                    {
                        if (Program.CheckNumberPassword(Input))
                        {
                            if (client.Player.SecurityPassword == uint.Parse(Input))
                            {
                                data.Text("Please insert the new password.");
                                data.AddInput("Here:", 7);
                                data.Option("Forget it.", byte.MaxValue);
                                data.AddAvatar(1);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.Text("You passwords do not match. Please enter again.");
                                data.AddInput("Here:", 6);
                                data.Option("Alright.", byte.MaxValue);
                                data.AddAvatar(1);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.Text("Invalid password, please try again.");
                            data.AddInput("Here:", 6);
                            data.Option("Alright.", byte.MaxValue);
                            data.AddAvatar(1);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.Text("You don't have a password set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 7:
                    if (client.Player.SecurityPassword != 0)
                    {
                        if (Program.CheckNumberPassword(Input))
                        {
                            client.Player.TempPassword = uint.Parse(Input);
                            data.Text("Please insert the new password again.");
                            data.AddInput("Here:", 8);
                            data.Option("Forget it.", byte.MaxValue);
                        }
                        else
                        {
                            data.Text("Invalid password, please try again.");
                            data.AddInput("Here:", 7);
                            data.Option("Alright.", byte.MaxValue);
                        }
                    }
                    else
                    {
                        data.Text("You don't have a password set.");
                        data.Option("Alright.", byte.MaxValue);
                    }
                    data.AddAvatar(10);
                    data.FinalizeDialog();
                    break;
                case 8:
                    if (client.Player.SecurityPassword != 0)
                    {
                        if (Program.CheckNumberPassword(Input))
                        {
                            if (client.Player.TempPassword == uint.Parse(Input))
                            {
                                client.Player.TempPassword = 0u;
                                client.Player.SecurityPassword = uint.Parse(Input);
                                client.Player.VerifiedPassword = true;
                                data.Text("Password changed!");
                                data.Option("Thank you.", byte.MaxValue);
                                client.SendSysMesage("Successfully set! Please remember your secondary password");
                            }
                            else
                            {
                                data.Text("Wrong password.");
                                data.AddInput("Here:", 8);
                                data.Option("Alright.", byte.MaxValue);
                            }
                        }
                        else
                        {
                            data.Text("Invalid password, please try again.");
                            data.AddInput("Here:", 8);
                            data.Option("Alright.", byte.MaxValue);
                        }
                    }
                    else
                    {
                        data.Text("You don't have a password set.");
                        data.Option("Alright.", byte.MaxValue);
                    }
                    data.AddAvatar(10);
                    data.FinalizeDialog();
                    break;
                case 3:
                    if (client.Player.SecurityPassword != 0)
                    {
                        data.Text("Please insert the password you have now.");
                        data.AddInput("Here:", 9);
                        data.Option("Forget it.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.Text("You don't have a password set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 9:
                    if (client.Player.SecurityPassword != 0)
                    {
                        if (Program.CheckNumberPassword(Input))
                        {
                            if (client.Player.SecurityPassword == uint.Parse(Input))
                            {
                                data.Text("Please insert the password again.");
                                data.AddInput("Here:", 10);
                                data.Option("Forget it.", byte.MaxValue);
                                data.AddAvatar(1);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.Text("Wrong password. Try again?");
                                data.AddInput("Here:", 9);
                                data.Option("Alright.", byte.MaxValue);
                                data.AddAvatar(1);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.Text("Invalid password, please try again.");
                            data.AddInput("Here:", 9);
                            data.Option("Alright.", byte.MaxValue);
                            data.AddAvatar(1);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.Text("You don't have a password set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.SecurityPassword != 0)
                    {
                        if (Program.CheckNumberPassword(Input))
                        {
                            if (client.Player.SecurityPassword == uint.Parse(Input))
                            {
                                client.Player.SecurityPassword = 0u;
                                client.Player.VerifiedPassword = true;
                                data.AddText("You have canceled the password to you warehouse successfully. If you want, you can still come to me to set password.");
                                data.AddOption("Thanks.");
                                data.AddAvatar(1);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.Text("Invalid password, please try again.");
                            data.AddInput("Here:", 10);
                            data.Option("Alright.", byte.MaxValue);
                            data.AddAvatar(1);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.Text("You don't have a password set.");
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
            }
        }

        public static void VerifiedPassword(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.Text("Please verify your password, if you do not verify it, then I will take in your last password.");
                    data.AddInput("Verify~Password:", 1);
                    data.Option("Let~me~see.", byte.MaxValue);
                    data.AddAvatar(1);
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (Program.CheckNumberPassword(Input))
                    {
                        if (client.Player.SecurityPassword == uint.Parse(Input))
                        {
                            client.Player.VerifiedPassword = true;
                            client.SendSysMesage("Secondary verified!");
                            break;
                        }
                        data.Text("You passwords do not match. Please enter again. Otherwise I will take in your first password.");
                        data.AddInput("Here:", 1);
                        if (client.Player.OnReset == 0)
                            data.Option("Forget it.", 2);
                        else
                            data.Option("Forget it.", 3);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.Text("Invalid password, please try again.");
                        data.AddInput("Here:", 1);
                        if (client.Player.OnReset == 0)
                            data.Option("Forget it.", 2);
                        else
                            data.Option("Forget it.", 3);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Player.SecurityPassword != 0 && !client.Player.VerifiedPassword)
                    {
                        client.Player.OnReset = 1u;
                        client.Player.ResetSecurityPassowrd = DateTime.Now.AddDays(3.0);
                        data.AddText("Your secondary password will be removed on " + client.Player.ResetSecurityPassowrd.ToString("d/M/yyyy (H:mm)") + ".");
                        data.AddOption("Thanks.");
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                        client.SendSysMesage("Your secondary password will be removed on " + client.Player.ResetSecurityPassowrd.ToString("d/M/yyyy (H:mm)") + ".");
                    }
                    break;
                case 3:
                    data.AddText("Your secondary password will be removed on " + client.Player.ResetSecurityPassowrd.ToString("d/M/yyyy (H:mm)") + ".");
                    data.AddOption("Thanks.");
                    data.AddAvatar(1);
                    data.FinalizeDialog();
                    break;
            }
        }


        [Npc(NpcID.Angela)]
        public static void Angela(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (client.Player.lettersTRY == 0)
            {
                data.AddText("------------------------------------------------------\n")
                                .AddText("Sorry, you need to get some rest come back tomorrow..\n")
                                .AddText("------------------------------------------------------")
                                .AddOption("I~see.", 255).AddAvatar(254).FinalizeDialog();
                return;
            }
            if (client.Player.Level != 137 && client.Player.Reborn != 2)
            {
                data.AddText("------------------------------------------------------\n")
                              .AddText("Sorry, you need to get level 137\n")
                              .AddText("------------------------------------------------------")
                              .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                return;
            }
            switch (Option)
            {

                case 0:
                    data.AddText("Welcome to [UAConquerConquer], great warrior! We know you've come a long way to collect the conquer letters. We're so happy to see you.");
                    data.AddText("It's time to relax. Your reward is random: " + ServerKernel.CONQUER_LETTER_REWARD + " cps, 500k gold, and 2 +3 stones.");
                    data.AddOption("Swap~C.o.n.q.u.e.r~Letters", 1);
                    data.AddOption("I'll~pass.", byte.MaxValue);
                    data.AddAvatar(53).FinalizeDialog();

                    break;
                case 1:
                    if (client.Inventory.Contain(711214u, 1u, 0) && client.Inventory.Contain(711215u, 1u, 0) && client.Inventory.Contain(711216u, 1u, 0) && client.Inventory.Contain(711217u, 1u, 0) && client.Inventory.Contain(711218u, 1u, 0) && client.Inventory.Contain(711219u, 1u, 0) && client.Inventory.Contain(711220u, 1u, 0))
                    {
                        if (client.Inventory.HaveSpace(4))
                        {
                            client.Inventory.Remove(711214u, 1u, stream);
                            client.Inventory.Remove(711215u, 1u, stream);
                            client.Inventory.Remove(711216u, 1u, stream);
                            client.Inventory.Remove(711217u, 1u, stream);
                            client.Inventory.Remove(711218u, 1u, stream);
                            client.Inventory.Remove(711219u, 1u, stream);
                            client.Inventory.Remove(711220u, 1u, stream);
                            client.Player.ConquerLetter++;
                            client.Player.lettersTRY--;

                            switch ((uint)ServerKernel.NextAsync(2, 2))
                            {
                                case 1u:
                                    {
                                        int value;
                                        value = (int)ServerKernel.CONQUER_LETTER_REWARD;
                                        client.Player.Money += value;
                                        MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give Letter C,O,N,Q,U,E,R And Get " + ServerKernel.CONQUER_LETTER_REWARD.ToString("0,0") + " Money!", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                        client.CreateBoxDialog("You've~got~" + ServerKernel.CONQUER_LETTER_REWARD.ToString("0,0") + "~Money");
                                        break;
                                    }
                                case 2u:
                                    client.Player.Money += 500000;
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give Letter C,O,N,Q,U,E,R And Get 500.000 Silver!", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~500.000~Silver");
                                    break;
                                case 3u:
                                    client.Inventory.Add(stream, 727385u, 2, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give Letter C,O,N,Q,U,E,R And Get 1x +1Random Item", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~2x~+1RandomItem");
                                    break;
                                case 4u:
                                    client.Inventory.Add(stream, 722057, 1, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give Letter C,O,N,Q,U,E,R And Get 1x PowerExpBall", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~PowerExpBall");
                                    break;
                                case 5u:
                                    client.Inventory.Add(stream, 720135, 1, 0, 0, 0);
                                    MsgSchedules.SendSysMesage("Congratulations! " + client.Player.Name + "! Give Letter C,O,N,Q,U,E,R And Get Random SuperGem", MsgMessage.ChatMode.Talk, MsgMessage.MsgColor.white);
                                    client.CreateBoxDialog("You've~got~SuperGem");
                                    break;
                            }
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "accession5");
                        }
                        else
                            client.SendSysMesage("There`s not enough space in your inventory.");
                    }
                    else
                    {
                        data.AddText("I~believe~you've~missed~some~letter~or~so,~please~come~again~with~C,O,N,Q,U,E,R,~leters");
                        data.AddOption("Oh, sorry.", byte.MaxValue);
                        data.AddAvatar(84).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.TravellingKing)]
        public static void TravellingKing(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey there" + client.Player.Name + " Would you like to exit this room?");
                    data.AddOption("Yes.", 1);
                    data.AddOption("No.", byte.MaxValue);
                    data.AddAvatar(1).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(430, 369, 1002u);
                    break;
            }
        }

        [Npc(NpcID.TravellingPrince)]
        public static void TravellingPrince(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey there" + client.Player.Name + " Would you like to exit this room?");
                    data.AddOption("Yes.", 1);
                    data.AddOption("No.", byte.MaxValue);
                    data.AddAvatar(1).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(430, 369, 1002u);
                    break;
            }
        }

        [Npc(NpcID.TravellingDuke)]
        public static void TravellingDuke(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey there" + client.Player.Name + " Would you like to exit this room?");
                    data.AddOption("Yes.", 1);
                    data.AddOption("No.", byte.MaxValue);
                    data.AddAvatar(1).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(430, 369, 1002u);
                    break;
            }
        }

        [Npc(NpcID.TravellingEarl)]
        public static void TravellingEarl(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey there" + client.Player.Name + " Would you like to exit this room?");
                    data.AddOption("Yes.", 1);
                    data.AddOption("No.", byte.MaxValue);
                    data.AddAvatar(1).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(430, 369, 1002u);
                    break;
            }
        }

        [Npc(NpcID.CostumerChen)]
        public unsafe static void CostumerChen(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.AddText("Hello " + client.Player.Name + ", feel free ro choose the costume you prefer, taste to totally free.");
                    dialog.AddOption("Garments.", 1);
                    //dialog.AddOption("CoustemAccessories.", 2);
                    dialog.AddOption("Accessories.", 2);
                    dialog.AddOption("Close.", 225);
                    dialog.AddAvatar(30);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    {
                        client.ActiveNpc = 6572u;
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 32u;
                        actionQuery.Type = ActionType.OpenGuiNpc;
                        actionQuery.Timestamp = (int)client.ActiveNpc;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        actionQuery.wParam5 = (ushort)client.Player.Map;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    dialog.AddText(client.Player.Name + ", choose weapon subtypes to customize your character as you prefer, are more than 400 type of weapons available.");
                    dialog.AddOption("OneHand.", 3);
                    dialog.AddOption("TwoHand.", 4);
                    dialog.AddOption("Bow.", 5);
                    dialog.AddOption("Shield.", 6);
                    dialog.AddOption("Traditional Weapons.", 7);
                    dialog.AddAvatar(30);
                    dialog.FinalizeDialog();
                    break;
                case 3:
                    {
                        client.ActiveNpc = 2302u;
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 32u;
                        actionQuery.Type = ActionType.OpenGuiNpc;
                        actionQuery.Timestamp = (int)client.ActiveNpc;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        actionQuery.wParam5 = (ushort)client.Player.Map;
                        ActionQuery action2;
                        action2 = actionQuery;
                        client.Send(stream.ActionCreate(&action2));
                        break;
                    }
                case 4:
                    {
                        client.ActiveNpc = 2303u;
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 32u;
                        actionQuery.Type = ActionType.OpenGuiNpc;
                        actionQuery.Timestamp = (int)client.ActiveNpc;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        actionQuery.wParam5 = (ushort)client.Player.Map;
                        ActionQuery action3;
                        action3 = actionQuery;
                        client.Send(stream.ActionCreate(&action3));
                        break;
                    }
                case 5:
                    {
                        client.ActiveNpc = 2304u;
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 32u;
                        actionQuery.Type = ActionType.OpenGuiNpc;
                        actionQuery.Timestamp = (int)client.ActiveNpc;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        actionQuery.wParam5 = (ushort)client.Player.Map;
                        ActionQuery action4;
                        action4 = actionQuery;
                        client.Send(stream.ActionCreate(&action4));
                        break;
                    }
                case 6:
                    {
                        client.ActiveNpc = 2305u;
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 32u;
                        actionQuery.Type = ActionType.OpenGuiNpc;
                        actionQuery.Timestamp = (int)client.ActiveNpc;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        actionQuery.wParam5 = (ushort)client.Player.Map;
                        ActionQuery action5;
                        action5 = actionQuery;
                        client.Send(stream.ActionCreate(&action5));
                        break;
                    }
                case 7:
                    {
                        client.ActiveNpc = 2306u;
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 32u;
                        actionQuery.Type = ActionType.OpenGuiNpc;
                        actionQuery.Timestamp = (int)client.ActiveNpc;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        actionQuery.wParam5 = (ushort)client.Player.Map;
                        ActionQuery action6;
                        action6 = actionQuery;
                        client.Send(stream.ActionCreate(&action6));
                        break;
                    }
            }
        }

        [Npc(NpcID.DailyQuestEnvoy)]
        public static void DailyQuestEnvoy(GameClient client, Packet stream, byte Option, string Input, uint id)
        {

            Dialog data;
            data = new Dialog(client, stream);

            QuestInfo.DBQuest DEFEAT_PHEASANT;
            DEFEAT_PHEASANT = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20191u);
            QuestInfo.DBQuest DEFEAT_RED_DEVILES;
            DEFEAT_RED_DEVILES = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20192u);
            QuestInfo.DBQuest DEFEAT_FIVE_BOSS;
            DEFEAT_FIVE_BOSS = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20193u);
            QuestInfo.DBQuest DEFEAT_TITAN_BOSS;
            DEFEAT_TITAN_BOSS = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20194u);
            QuestInfo.DBQuest COMPLETE_5_MISSION;
            COMPLETE_5_MISSION = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20195u);
            QuestInfo.DBQuest DEFEAT_GANDORMA_BOSS;
            DEFEAT_GANDORMA_BOSS = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20196u);
            QuestInfo.DBQuest DEFEAT_BIRD_MAN;
            DEFEAT_BIRD_MAN = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20197u);
            QuestInfo.DBQuest DEFEAT_300K_MOBS;
            DEFEAT_300K_MOBS = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20198u);
            QuestInfo.DBQuest DEFEAT_100K_MOBS;
            DEFEAT_100K_MOBS = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20199u);
            QuestInfo.DBQuest OPEN_3_BOXS;
            OPEN_3_BOXS = QuestInfo.GetFinishQuest(0u, client.Player.Class, 20200);
            switch (Option)
            {
                case 0:
                    //case 130:
                    data.AddText("Aspiring to be a hero? You're not alone! Remember, greatness takes time.");
                    data.AddText("\nIf you dream of becoming a renowned figure here, I can help you get ready. Just a heads-up, reincarnated players can't accept quests from me.");

                    data.AddOption(DEFEAT_PHEASANT.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_PHEASANT) + ").", 1);
                    data.AddOption(DEFEAT_RED_DEVILES.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_RED_DEVILES) + ").", 4);
                    data.AddOption(DEFEAT_FIVE_BOSS.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_FIVE_BOSS) + ").", 7);
                    data.AddOption(DEFEAT_TITAN_BOSS.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_TITAN_BOSS) + ").", 10);
                    data.AddOption(COMPLETE_5_MISSION.Name + "~(" + ServerKernel.GetStrTask(client, COMPLETE_5_MISSION) + ").", 13);
                    data.AddOption("Next~Page", 120);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 120:
                    data.AddText("Aspiring to be a hero? You're not alone! Remember, greatness takes time.");
                    data.AddText("\nIf you dream of becoming a renowned figure here, I can help you get ready. Just a heads-up, reincarnated players can't accept quests from me.");

                    data.AddOption(DEFEAT_GANDORMA_BOSS.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_GANDORMA_BOSS) + ").", 16);
                    data.AddOption(DEFEAT_BIRD_MAN.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_BIRD_MAN) + ").", 19);
                    data.AddOption(DEFEAT_300K_MOBS.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_300K_MOBS) + ").", 22);
                    data.AddOption(DEFEAT_100K_MOBS.Name + "~(" + ServerKernel.GetStrTask(client, DEFEAT_100K_MOBS) + ").", 25);
                    if (OPEN_3_BOXS != null)
                        data.AddOption(OPEN_3_BOXS.Name + "~(" + ServerKernel.GetStrTask(client, OPEN_3_BOXS) + ").", 28);
                    //data.AddOption("close", 255);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 1:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_PHEASANT.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_PHEASANT.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_PHEASANT, 10000u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 3);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_PHEASANT.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_PHEASANT.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_PHEASANT.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 2);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 2:
                    {
                        if (client.Player.Level <= 70)
                        {
                            client.CreateBoxDialog("You didn`t meet the required level you must level 70");
                            break;

                        }
                        client.Player.QuestGUI.Accept(DEFEAT_PHEASANT, 0u);
                        bool send;
                        send = false;
                        MonsterRole role;
                        role = Server.MonsterRole.Values.Where((MonsterRole p) => p.Name.ToLower().Contains("Pheasant".ToLower()) && p.Alive).FirstOrDefault();
                        if (role != null && !send)
                        {
                            send = true;
                            client.Teleport(role.X, role.Y, role.Map, role.DynamicID);
                        }
                        break;
                    }
                case 3:
                    if (!client.Inventory.HaveSpace(3))
                    {
                        data.AddText("Please make 3 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_PHEASANT.MissionId))
                    {
                        client.Inventory.Add(stream, 710834, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 710834, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBall
                        client.Inventory.Add(stream, 720027, 1, 2, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_PHEASANT.Name + "`~and~received~a~+3Stone,~DragonBall~and~RewardBox!");
                    }
                    break;
                case 4:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_RED_DEVILES.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_RED_DEVILES.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_RED_DEVILES, 30000u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 6);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_RED_DEVILES.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_RED_DEVILES.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_RED_DEVILES.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 5);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 5:
                    {
                        client.Player.QuestGUI.Accept(DEFEAT_RED_DEVILES, 0u);
                        bool send2;
                        send2 = false;
                        MonsterRole role2;
                        role2 = Server.MonsterRole.Values.Where((MonsterRole p) => p.Name.ToLower().Contains("RedDev".ToLower()) && p.Alive).FirstOrDefault();
                        if (role2 != null && !send2)
                        {
                            send2 = true;
                            client.Teleport(role2.X, role2.Y, role2.Map, role2.DynamicID);
                        }
                        break;
                    }
                case 6:
                    if (!client.Inventory.HaveSpace(3))
                    {
                        data.AddText("Please make 4 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_RED_DEVILES.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 710834, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBallScrap
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_RED_DEVILES.Name + "`~and~received~a~EvilEnchantressBox,~DragonBall~and~MeteorScroll!");
                    }
                    break;
                case 7:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_FIVE_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_FIVE_BOSS.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_FIVE_BOSS, 15u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 9);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_FIVE_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_FIVE_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_FIVE_BOSS.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 8);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 8:
                    client.Player.QuestGUI.Accept(DEFEAT_FIVE_BOSS, 0u);
                    break;
                case 9:
                    if (!client.Inventory.HaveSpace(3))
                    {
                        data.AddText("Please make 3 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_FIVE_BOSS.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 1088000, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBall
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_FIVE_BOSS.Name + "`~and~received~a~EvilEnchantressBox,~DragonBall~and~MeteorScroll!");
                    }
                    break;
                case 10:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_TITAN_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_TITAN_BOSS.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_TITAN_BOSS, 10u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 12);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_TITAN_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_TITAN_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_TITAN_BOSS.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 11);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 11:
                    client.Player.QuestGUI.Accept(DEFEAT_TITAN_BOSS, 0u);
                    break;
                case 12:
                    if (!client.Inventory.HaveSpace(1))
                    {
                        data.AddText("Please make 1 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_TITAN_BOSS.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 710834, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBallScrap
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_TITAN_BOSS.Name + "`~and~received~a~EvilEnchantressBox,~(x3)DragonBallScrap~and~MeteorScroll!");
                    }
                    break;
                case 13:

                    if (client.Player.QuestGUI.CheckQuest(COMPLETE_5_MISSION.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + COMPLETE_5_MISSION.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.COMPLETE_5_MISSION, 5u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 15);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(COMPLETE_5_MISSION.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(COMPLETE_5_MISSION.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + COMPLETE_5_MISSION.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 14);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 14:
                    client.Player.QuestGUI.Accept(COMPLETE_5_MISSION, 0u);
                    break;
                case 15:
                    if (!client.Inventory.HaveSpace(3))
                    {
                        data.AddText("Please make 3 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(COMPLETE_5_MISSION.MissionId))
                    {
                        client.Inventory.Add(stream, 1088000, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false);//DragonBall
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + COMPLETE_5_MISSION.Name + "`~and~received~a~DragonBall!");
                    }
                    break;
                case 16:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_GANDORMA_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_GANDORMA_BOSS.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_GANDORMA_BOSS, 10u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 18);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_GANDORMA_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_GANDORMA_BOSS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_GANDORMA_BOSS.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 17);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 17:
                    client.Player.QuestGUI.Accept(DEFEAT_GANDORMA_BOSS, 0u);
                    break;
                case 18:
                    if (!client.Inventory.HaveSpace(3))
                    {
                        data.AddText("Please make 3 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_GANDORMA_BOSS.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 710834, 1, 3, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBallScrap
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_GANDORMA_BOSS.Name + "`~and~received~a~(x3)DragonBallScrap,~EvilEnchantressBox~and~MeteorScroll!");
                    }
                    break;
                case 19:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_BIRD_MAN.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_BIRD_MAN.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_BIRD_MAN, 20000u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 21);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_BIRD_MAN.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_BIRD_MAN.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_BIRD_MAN.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 20);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 20:
                    {
                        client.Player.QuestGUI.Accept(DEFEAT_BIRD_MAN, 0u);
                        bool send3;
                        send3 = false;
                        MonsterRole role3;
                        role3 = Server.MonsterRole.Values.Where((MonsterRole p) => p.Name.ToLower().Contains("Birdman".ToLower()) && p.Alive).FirstOrDefault();
                        if (role3 != null && !send3)
                        {
                            send3 = true;
                            client.Teleport(role3.X, role3.Y, role3.Map, role3.DynamicID);
                        }
                        break;
                    }
                case 21:
                    if (!client.Inventory.HaveSpace(1))
                    {
                        data.AddText("Please make 1 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_BIRD_MAN.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 710834, 1, 7, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBallScrap
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_BIRD_MAN.Name + "`~and~received~a~(7)DragonBallScrap,~EvilEnchantressBox~and~MeteorScroll!");
                    }
                    break;
                case 22:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_300K_MOBS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_300K_MOBS.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_300K_MOBS, 300000u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 24);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_300K_MOBS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_300K_MOBS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_300K_MOBS.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 23);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 23:
                    client.Player.QuestGUI.Accept(DEFEAT_300K_MOBS, 0u);
                    break;
                case 24:
                    if (!client.Inventory.HaveSpace(2))
                    {
                        data.AddText("Please make 2 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_300K_MOBS.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 1088000, 1, 2, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBall
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_300K_MOBS.Name + "`~and~received~a~DragonBall,~EvilEnchantressBox~and~MeteorScroll!");
                    }
                    break;
                case 25:

                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_100K_MOBS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + DEFEAT_100K_MOBS.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.DEFEAT_100K_MOBS, 100000u))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 27);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(DEFEAT_100K_MOBS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(DEFEAT_100K_MOBS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + DEFEAT_100K_MOBS.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 26);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 26:
                    client.Player.QuestGUI.Accept(DEFEAT_100K_MOBS, 0u);
                    break;
                case 27:
                    if (!client.Inventory.HaveSpace(2))
                    {
                        data.AddText("Please make 2 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(DEFEAT_100K_MOBS.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1u);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + DEFEAT_100K_MOBS.Name + "`~and~received~a~EvilEnchantressBox,~and~MeteorScroll!");
                    }
                    break;
                case 28:

                    if (client.Player.QuestGUI.CheckQuest(OPEN_3_BOXS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("You`ve~already~completed~the~quest:~`" + OPEN_3_BOXS.Name + "`!");
                        data.AddOption("Yep.", byte.MaxValue).AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckObjectives(Flags.MissionsFlag.OPEN_3_BOXS, 3))
                    {
                        data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                        data.AddOption("Done!~Claim~my~reward.", 30);
                        data.AddOption("I`ll~be~back~soon.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    if (client.Player.QuestGUI.CheckQuest(OPEN_3_BOXS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Accepted) && !client.Player.QuestGUI.CheckQuest(OPEN_3_BOXS.MissionId, MsgQuestList.QuestListItem.QuestStatus.Finished))
                    {
                        data.AddText("I won`t give you anything, you know, because you haven`t finished the quest `" + OPEN_3_BOXS.Name + "`, yet!");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(72).FinalizeDialog();
                        break;
                    }
                    data.AddText("Stay calm and listem, the Demons are taking over the control of ");
                    data.AddText("the world. My family is the only one that can make a contract with ");
                    data.AddText("the humans to purify the world from the devils. I can give you");
                    data.AddText("good reward for doing it. But you can do it once one time per ");
                    data.AddText("day, what will you do?");
                    data.AddOption("You~can~count~on~me!", 29);
                    data.AddOption("None~of~my~business!", byte.MaxValue);
                    data.AddAvatar(72).FinalizeDialog();
                    break;
                case 29:
                    client.Player.QuestGUI.Accept(OPEN_3_BOXS, 0u);
                    break;
                case 30:
                    if (!client.Inventory.HaveSpace(2))
                    {
                        data.AddText("Please make 2 more space in your inventory");
                        data.AddOption("Let me check.", byte.MaxValue).FinalizeDialog();
                    }
                    else if (client.Player.QuestGUI.FinishQuest(OPEN_3_BOXS.MissionId))
                    {
                        client.Inventory.Add(stream, 720145, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // EvilEnchantressBox
                        client.Inventory.Add(stream, 710834, 1, 3, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // DragonBallScrap
                        client.Inventory.Add(stream, 720027, 1, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, false); // MeteorScroll
                        if (client.Player.QuestGUI.CheckQuest(20195u, MsgQuestList.QuestListItem.QuestStatus.Accepted))
                            client.Player.QuestGUI.IncreaseQuestObjectives(stream, Flags.MissionsFlag.COMPLETE_5_MISSION, 1);
                        client.CreateBoxDialog("You`ve~completed~the~quest~`" + OPEN_3_BOXS.Name + "`~and~received~a~(x3)DragonballPiece,~EvilEnchantressBox~and~MeteorScroll!");
                    }
                    break;
            }
        }

        [Npc(NpcID.OfflineCollector)]
        public static void OfflineCollector(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            if (Option == 0)
            {
                dialog.Text("\t\t\t\t\t\t*Offline-Mode~Collection* \n");
                dialog.Text("،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ\n");
                dialog.Text("\t\tCPS:    " + client.Player.ConquerPoints + "\n");
                dialog.Text("\t Money:    " + client.Player.Money + " \n");
                //dialog.Text("\t CP-Claim:    " + client.Player.EmoneyPoints + "\n");
                dialog.Text("\t Online-Minutes:    " + client.Player.OnlinePoints + "\n");
                dialog.Text("،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ\n");
                dialog.Text("\t Server-Letters:    " + ItemType.AmountLetters(client) + "\n");
                dialog.Text("\t Stone-Plus: " + ItemType.AmountStonePlus(client) + "\n");
                dialog.Text("\t Item-Plus:    " + ItemType.AmountItemPlus(client) + "\n");
                dialog.Text("\t Normal-Gems:    " + ItemType.AmountNormalGems(client, 40u) + "\n");
                dialog.Text("\t Refiend-Gems:     " + ItemType.AmountRefiendGems(client, 40u) + "\n");
                //dialog.Text("\t Purification(3-5):    " + ItemType.AmountPurification(client, 5) + "\n");
                //dialog.Text($"\t Matrial[3,4,5]: [{ItemType.AmountMatrial(client, 3)},{ItemType.AmountMatrial(client, 4)},{ItemType.AmountMatrial(client, 5)}]\n");
                dialog.Text("،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ،ھ \n");
                if (DateTime.Now > client.Player.ExpireVip)
                    dialog.Option("VIP~expired", byte.MaxValue);
                else
                    dialog.Option("VIP~expire~on~" + client.Player.ExpireVip.ToString("d/M/yyyy (H:mm)") + ".", byte.MaxValue);
                dialog.Option("Close.", byte.MaxValue);
                dialog.AddAvatar(354).FinalizeDialog();
            }
        }

        [Npc(NpcID.Leveling)]
        public static void Leveling(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var AI_Count = client.Map.Values.Where(x => x.AIType == AIEnum.AIType.Leveling).Count();
            var AI_User = client.Map.Values.Where(x => x.AIType == AIEnum.AIType.NotActive).Count();
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.Level < 137)
                        {
                            dialog.Text("Talk to me, and I'll transport you to areas with monsters ranging from low to high levels.");
                            dialog.Text("Once there, an automatic bot will help power-level you quickly and efficiently. Just follow the bot's lead and watch your progress soar!");
                            dialog.Option("BirdIsland", 1);
                            dialog.Option("MysticCastle", 2);
                            dialog.Option("AdventureArea", 3);
                            dialog.Option("Leave", 255);
                            dialog.AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("Please select monster only newbies player can teleport, so make sure your level lower than 137");
                            dialog.Option("BirdIsland (Newbie Only)", 255);
                            dialog.Option("BirdIsland (Newbie Only)", 255);
                            dialog.Option("AdventureArea (Newbie Only)", 255);
                            dialog.Option("DesertCity (Newbie Only)", 255);
                            dialog.Option("BirdIsland (Newbie Only)", 255);
                            dialog.Option("Leave", 255);
                            dialog.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level < 105)
                        {
                            if (client.Player.Level < 85)
                            {
                                client.Teleport(734, 662, 1015);
                            }
                            else if (client.Player.Level < 100)
                            {
                                client.Teleport(497, 722, 1015);

                            }
                            else
                            {
                                client.Teleport(516, 517, 1015);

                            }
                            if (AI_User == 1 && AI_Count == 0)
                            {
                                Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                            }
                            else if (AI_User > AI_Count)
                            {
                                Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                            }
                        }
                        else
                        {
                            dialog.Text("make sure your level lower than 105");

                            dialog.Option("Leave", 255);
                            dialog.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.Level < 120)
                        {
                            if (client.Player.Level < 110)
                            {
                                client.Teleport(331, 608, 1001);
                            }
                            else if (client.Player.Level < 115)
                            {
                                client.Teleport(329, 471, 1001);

                            }
                            else if (client.Player.Level < 117)
                            {
                                client.Teleport(103, 302, 1001);

                            }
                            else
                            {
                                client.Teleport(282, 154, 1001);

                            }
                            if (AI_User == 1 && AI_Count == 0)
                            {
                                Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                            }
                            else if (AI_User > AI_Count)
                            {
                                Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                            }
                        }
                        else
                        {
                            dialog.Text("make sure your level lower than 105");

                            dialog.Option("Leave", 255);
                            dialog.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        client.Teleport(558, 560, 1217);
                        if (AI_User == 1 && AI_Count == 0)
                        {
                            Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                        }
                        else if (AI_User > AI_Count)
                        {
                            Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                        }
                        break;
                    }
                case 10:
                    {
                        int scan = Program.GetRandom.Next(1, 5);
                        switch (scan)
                        {
                            case 1:
                                client.Teleport(338, 310, 1001); break;
                            case 2:
                                client.Teleport(360, 174, 1001); break;
                            case 3:
                                client.Teleport(289, 154, 1001); break;
                            case 4:
                                client.Teleport(298, 224, 1001); break;
                            case 5:
                                client.Teleport(410, 264, 1001); break;
                        }
                        if (AI_User == 1 && AI_Count == 0)
                        {
                            Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                        }
                        else if (AI_User > AI_Count)
                        {
                            Ai.Artificialintelligence.AIBots[101].AI_Initialize(stream, client);
                        }
                        break;
                    }
            }
        }

        [Npc(NpcID.VIPBook)]
        public static void VIPBook(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (client.Player.VipLevel != 6)
                    {
                        dialog.Text("Note: It`ll be available when you are VIP-6");
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 1:
                    client.Player.LootExpBall = !client.Player.LootExpBall;
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 2:
                    client.Player.LootDragonBall = !client.Player.LootDragonBall;
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 3:
                    client.Player.LootMeteor = !client.Player.LootMeteor;
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 4:
                    client.Player.SuperLoot = !client.Player.SuperLoot;
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 5:
                    client.Player.EliteLoot = !client.Player.EliteLoot;
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 6:
                    client.Player.GemsLoot = !client.Player.GemsLoot;
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 7:
                    client.Player.ItemPlusLoot = !client.Player.ItemPlusLoot;
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
                case 8:
                    client.Player.ProfTokenLoot = !client.Player.ProfTokenLoot;
                    dialog.Text("Choose your Options from the VIP Book.");
                    //dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                    dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                    dialog.Option("Meteor Loot: " + (client.Player.LootMeteor ? "Enabled" : "Disabled"), 3);
                    dialog.Option("Super Item Loot: " + (client.Player.SuperLoot ? "Enabled" : "Disabled"), 4);
                    dialog.Option("Elite Item Loot: " + (client.Player.EliteLoot ? "Enabled" : "Disabled"), 5);
                    //dialog.Option("NormalGem Loot: " + (client.Player.GemsLoot ? "Enabled" : "Disabled"), 6);
                    dialog.Option("ItemPlus+ Loot: " + (client.Player.ItemPlusLoot ? "Enabled" : "Disabled"), 7);
                    dialog.Option("ProfToken Loot: " + (client.Player.ProfTokenLoot ? "Enabled" : "Disabled"), 8);
                    //dialog.Option("Leave", byte.MaxValue);
                    dialog.AddAvatar(102).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.MrFree)]
        public static void MrFree(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (client.Inventory.Contain(723087u, 1u, 0))
                    {
                        client.Player.OnRemoveLukyAmulet = true;
                        data.AddText("I~love~living~a~seclusive~life.~Don`t~bother~me!");
                        data.AddOption("I~heard~that~you~need~LuckyAmulets.", 1);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("I~love~living~a~seclusive~life.~Don`t~bother~me!");
                        data.AddOption("I`ll~leave~now.");
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                    }
                    break;
                case 1:
                    data.AddText("Yes.~My~only~hobby~is~to~collect~LuckyAmulets.");
                    data.AddOption("I~happen~to~have~one.", 2);
                    data.AddOption("I`d~better~keep~it.");
                    data.AddAvatar(74);
                    data.FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Great!~If~you~present~LuckyAmulet~to~me,~I`ll~make~a~unique~hairstyle~for~you.");
                    data.AddOption("Thank~you.", 3);
                    data.AddOption("I`d~better~keep~it.");
                    data.AddAvatar(74);
                    data.FinalizeDialog();
                    break;
                case 3:
                    if (client.Player.IsBoy())
                    {
                        data.AddText("Thank~you~very~much.~Which~hairstyle~would~you~like~to~select~from?");
                        data.AddOption("Dignified~one.", 4);
                        data.AddOption("Unruly~one.", 5);
                        data.AddOption("Staid~one.", 6);
                        data.AddOption("Cool~one.", 7);
                        data.AddOption("Handsome~one.", 8);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("Thank~you~very~much.~Which~hairstyle~would~you~like~to~select~from?");
                        data.AddOption("Lovely~one.", 4);
                        data.AddOption("Comely~one.", 5);
                        data.AddOption("Pretty~one.", 6);
                        data.AddOption("Elegant~one.", 7);
                        data.AddOption("Nifty~one.", 8);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                    }
                    break;
                case 4:
                    if (client.Player.OnRemoveLukyAmulet)
                    {
                        client.Inventory.Remove(723087u, 1u, stream);
                        client.Player.OnRemoveLukyAmulet = false;
                    }
                    client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 21);
                    client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                    data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                    data.AddOption("Great!~Thank~you.");
                    data.AddOption("I`d~like~to~try~another~one.", 3);
                    data.AddAvatar(74);
                    data.FinalizeDialog();
                    break;
                case 5:
                    if (client.Player.OnRemoveLukyAmulet)
                    {
                        client.Inventory.Remove(723087u, 1u, stream);
                        client.Player.OnRemoveLukyAmulet = false;
                    }
                    client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 22);
                    client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                    data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                    data.AddOption("Great!~Thank~you.");
                    data.AddOption("I`d~like~to~try~another~one.", 3);
                    data.AddAvatar(74);
                    data.FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.OnRemoveLukyAmulet)
                    {
                        client.Inventory.Remove(723087u, 1u, stream);
                        client.Player.OnRemoveLukyAmulet = false;
                    }
                    client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 23);
                    client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                    data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                    data.AddOption("Great!~Thank~you.");
                    data.AddOption("I`d~like~to~try~another~one.", 3);
                    data.AddAvatar(74);
                    data.FinalizeDialog();
                    break;
                case 7:
                    if (client.Player.OnRemoveLukyAmulet)
                    {
                        client.Inventory.Remove(723087u, 1u, stream);
                        client.Player.OnRemoveLukyAmulet = false;
                    }
                    client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 24);
                    client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                    data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                    data.AddOption("Great!~Thank~you.");
                    data.AddOption("I`d~like~to~try~another~one.", 3);
                    data.AddAvatar(74);
                    data.FinalizeDialog();
                    break;
                case 8:
                    if (client.Player.OnRemoveLukyAmulet)
                    {
                        client.Inventory.Remove(723087u, 1u, stream);
                        client.Player.OnRemoveLukyAmulet = false;
                    }
                    client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 25);
                    client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                    data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                    data.AddOption("Great!~Thank~you.");
                    data.AddOption("I`d~like~to~try~another~one.", 3);
                    data.AddAvatar(74);
                    data.FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.Performer)]
        public static void Performer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello~there!~Please~allow~me~to~introduce~the~sub-class~of~Performers~to~you.~Performers~are~gifted~in~the~harmonizing~of~song~and~swordplay~into~beautiful,~unique~dances.~These~dances~will~surely~make~you~the~center~of~people`s~attention!");
                    data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~learn~more~stylish~dances.");
                    data.AddText("Performers~are~gifted~in~the~harmonizing~of~song~and~swordplay~into~beautiful,~unique~dances.~Besides~that,~their~physical~and~magical~attacks~improve~when~their~Sub-Class~level~improves.");
                    data.AddOption("Yes,~I`d~like~to~join!", 20);
                    data.AddOption("I~want~to~get~promoted.", 40);
                    data.AddOption("I~want~to~learn~new~dances.", 3);
                    data.AddOption("How~can~I~get~promoted?", 1);
                    data.AddOption("Nice.~I`ll~think~about~it.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 40:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 1)
                    {
                        data.AddText("Well,~you~need~to~join~us~before~you~can~be~promoted.~Would~you~like~to~become~a~Performer~now?");
                        data.AddOption("Sure.", 20);
                        data.AddOption("Oh,~I`m~not~ready~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 1)
                    {
                        data.AddText("To~get~promoted~to~Phase~2~and~learn~more~dances,~you~should~have~a~character~level~of~90~and~become~a~level~2~Performer.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 41);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 2)
                    {
                        data.AddText("To~get~promoted~to~Phase~3~and~learn~more~dances,~you~should~have~a~character~level~of~110~and~become~a~level~3~Performer.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 42);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 3)
                    {
                        data.AddText("To~get~promoted~to~Phase~4~and~learn~more~dances,~you~should~have~a~character~level~of~120~and~become~a~level~4~Performer.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 43);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 4)
                    {
                        data.AddText("To~get~promoted~to~Phase~5~and~learn~more~dances,~you~should~have~a~character~level~of~90,~become~a~level~5~Performer,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 44);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 5)
                    {
                        data.AddText("To~get~promoted~to~Phase~6~and~learn~more~dances,~you~should~have~a~character~level~of~110,~become~a~level~6~Performer,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 45);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 6)
                    {
                        data.AddText("To~get~promoted~to~Phase~7~and~learn~more~dances,~you~should~have~a~character~level~of~120,~become~a~level~7~Performer,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 46);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 7)
                    {
                        data.AddText("To~get~promoted~to~Phase~8~and~learn~more~dances,~you~should~have~a~character~level~of~120,~become~a~level~8~Performer,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 47);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) == 8)
                    {
                        data.AddText("To~get~promoted~to~Phase~9~and~learn~more~dances,~you~should~have~a~character~level~of~130,~become~a~level~9~Performer,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 48);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                        data.AddOption("Oh.~Thanks~anyway.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 48:
                    if (client.Player.Level < 130)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 9)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 9, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~9~Performer!");
                        data.AddOption("Great.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 47:
                    if (client.Player.Level < 120)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 8)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 8, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~8~Performer!");
                        data.AddOption("Great.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 46:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 7)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 7, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~have~been~promoted~to~a~Phase~7~Performer!");
                            data.AddOption("Great.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 7)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 7, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~7~Performer!");
                        data.AddOption("Great.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 45:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 6)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 6, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~have~been~promoted~to~a~Phase~6~Performer!");
                            data.AddOption("Great.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 6)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 6, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~6~Performer!");
                        data.AddOption("Great.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 44:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 5)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 5, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~have~been~promoted~to~a~Phase~5~Performer!");
                            data.AddOption("Great.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 5)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 5, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~5~Performer!");
                        data.AddOption("Great.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 43:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 4)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 4, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~have~been~promoted~to~a~Phase~4~Performer!");
                            data.AddOption("Great.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 4)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 4, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~4~Performer!");
                        data.AddOption("Great.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 42:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 3)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 3, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~have~been~promoted~to~a~Phase~3~Performer!");
                            data.AddOption("Great.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 3)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 3, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~3~Performer!");
                        data.AddOption("Great.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 41:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 2)
                        {
                            data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 2, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~have~been~promoted~to~a~Phase~2~Performer!");
                            data.AddOption("Great!");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 2)
                    {
                        data.AddText("My~friend,~you~haven`t~met~the~requirements~to~get~promoted,~yet.~You~can~try~again~when~you`ve~gotten~better!");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Performer, 2, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~have~been~promoted~to~a~Phase~2~Performer!");
                        data.AddOption("Great!");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 20:
                    data.AddText("Performers~always~attract~public~attention~by~unique~Dances.~If~you`ve~reached~Level~70~and~you~want~to~join~us,~bring~me~15~Orchids~or~800~Study~Points.");
                    data.AddText("~it~requires~a~Performer~Card~which~can~be~obtained~by~handing~in~15~Orchids.~After~joining~the~Performer~sub-class,~click~open~your~character~sheet~and~you`ll~find~the~sub-class~button~on~the~left-hand~corner~where~you~may~level~up~your~sub-class.");
                    data.AddOption("Pay~15~Orchids~to~join.", 23);
                    data.AddOption("Pay~800~Study~Points~to~join.", 21);
                    data.AddOption("Oh,~it~does~not~suit~me.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 23:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Now~please~leave~me~alone,~I`ve~got~some~dancing~classes~to~prepare~for.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(711679u, 1u, 0))
                            {
                                data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                                data.AddOption("Sure.", 25);
                                data.AddOption("I`ve~changed~my~mind.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("How~many~orchids~would~you~like~to~hand~in~this~time?~It~takes~15~orchids~to~get~a~Performer~Card~which~is~required~to~join~the~Performers.");
                                data.AddOption("1~Orchid.", 26);
                                data.AddOption("3~Orchids.", 28);
                                data.AddOption("9~Orchids.", 29);
                                data.AddOption("How~many~have~I~given~you?", 30);
                                data.AddOption("Just~passing~by.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(711679u, 1u, 0))
                        {
                            data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                            data.AddOption("Sure.", 25);
                            data.AddOption("I`ve~changed~my~mind.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("How~many~orchids~would~you~like~to~hand~in~this~time?~It~takes~15~orchids~to~get~a~Performer~Card~which~is~required~to~join~the~Performers.");
                            data.AddOption("1~Orchid.", 26);
                            data.AddOption("3~Orchids.", 28);
                            data.AddOption("9~Orchids.", 29);
                            data.AddOption("How~many~have~I~given~you?", 30);
                            data.AddOption("Just~passing~by.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Performer,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 30:
                    if (client.Player.GiveFlowersToPerformer >= 1)
                    {
                        data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~you~meet~the~requirement,~you`ll~get~a~Performer~Card.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~haven`t~handed~in~any~Orchids~yet.~It~charges~15~Orchids~for~a~Performer~Card.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 29:
                    if (client.Inventory.Contain(753009u, 1u, 0))
                    {
                        client.Inventory.Remove(753009u, 1u, stream);
                        client.Player.GiveFlowersToPerformer += 9;
                        if (client.Player.GiveFlowersToPerformer >= 15)
                        {
                            client.Player.GiveFlowersToPerformer -= 15;
                            client.Inventory.Add(stream, 711679u, 1, 0, 0, 0);
                            data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                            data.AddOption("Sure.", 27);
                            data.AddOption("I`ve~changed~my~mind.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~there~are~15~Orchids,~you~can~get~a~Performer~Card.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You~don`t~have~9~Orchids~to~give.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 28:
                    if (client.Inventory.Contain(753003u, 1u, 0))
                    {
                        client.Inventory.Remove(753003u, 1u, stream);
                        client.Player.GiveFlowersToPerformer += 3;
                        if (client.Player.GiveFlowersToPerformer >= 15)
                        {
                            client.Player.GiveFlowersToPerformer -= 15;
                            client.Inventory.Add(stream, 711679u, 1, 0, 0, 0);
                            data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                            data.AddOption("Sure.", 27);
                            data.AddOption("I`ve~changed~my~mind.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~there~are~15~Orchids,~you~can~get~a~Performer~Card.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("~You~don`t~have~3~Orchids~to~give.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 26:
                    if (client.Inventory.Contain(753001u, 1u, 0))
                    {
                        client.Inventory.Remove(753001u, 1u, stream);
                        client.Player.GiveFlowersToPerformer++;
                        if (client.Player.GiveFlowersToPerformer >= 15)
                        {
                            client.Player.GiveFlowersToPerformer -= 15;
                            client.Inventory.Add(stream, 711679u, 1, 0, 0, 0);
                            data.AddText("Hmmm,~I`ve~accepted~the~15~Orchids~you~just~handed~in~and~here~is~your~Performer~Card.~Well,~if~you`ve~reached~level~70,~you~will~become~a~Performer~immediately.~Are~you~sure~you~want~to~join~us?");
                            data.AddOption("Sure.", 27);
                            data.AddOption("I`ve~changed~my~mind.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You`ve~handed~in~" + client.Player.GiveFlowersToPerformer + "~Orchids.~As~there~are~15~Orchids,~you~can~get~a~Performer~Card.");
                            data.AddOption("Oh.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You~don`t~have~an~Orchid~to~give~me.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 27:
                    if (client.Inventory.Contain(711679u, 1u, 0))
                    {
                        client.Inventory.Remove(711679u, 1u, stream);
                        client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Performer, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                        data.AddOption("Thank~you.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 25:
                    if (client.Inventory.Contain(711679u, 1u, 0))
                    {
                        client.Inventory.Remove(711679u, 1u, stream);
                        client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Performer, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                        data.AddOption("Thank~you.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("How~many~orchids~would~you~like~to~hand~in~this~time?~It~takes~15~orchids~to~get~a~Performer~Card~which~is~required~to~join~the~Performers.");
                        data.AddOption("1~Orchid.", 26);
                        data.AddOption("3~Orchids.", 28);
                        data.AddOption("9~Orchids.", 29);
                        data.AddOption("How~many~have~I~given~you?", 30);
                        data.AddOption("Just~passing~by.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 21:
                    data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                    data.AddOption("Yes,~I`ve~decided!", 22);
                    data.AddOption("No,~I~changed~my~mind.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 22:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Performer) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Now~please~leave~me~alone,~I`ve~got~some~dancing~classes~to~prepare~for.");
                                data.AddOption("Oh.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                                break;
                            }
                            if (client.Player.SubClass.StudyPoints < 800)
                            {
                                data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                data.AddOption("Alright.");
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                                break;
                            }
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Performer, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thank~you.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.StudyPoints < 800)
                        {
                            data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                            data.AddOption("Alright.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Performer, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~dancing~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~performers.~Work~hard~in~the~future,~and~when~you`re~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thank~you.");
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Performer,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("It~takes~higher~phases~to~learn~more~advanced~dances.~Learn~the~Battle~Dance~at~Phase~1,~learn~the~Triumph~at~Phase~3,~learn~the~Step~Stomp~at~Phase~5,~learn~Moonlight~at~Phase~7,~and~Snow~Wind~at~Phase~9.");
                    data.AddText("~Which~of~these~dances~do~you~want~to~learn?");
                    data.AddOption("Learn~Partner~Dances.", 9);
                    data.AddOption("The~Battle~Dance.", 8);
                    data.AddOption("Triumph.", 7);
                    data.AddOption("The~Step~Stomp.", 6);
                    data.AddOption("Moonlight.", 5);
                    data.AddOption("Snow~Wind.", 4);
                    data.AddOption("I`ll~think~about~it.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 9:
                    data.AddText("The~dance~skill~you`re~able~to~learn~depends~on~your~Performer~Phase.~The~higher~your~phase~is,~the~more~dances~you~can~learn.~So,~what~kind~of~dance~would~you~like~to~learn?");
                    data.AddOption("Learn~Phoenix.~(P3~Performer)", 12);
                    data.AddOption("Melody~(Phase~6).", 11);
                    data.AddOption("Tipsy~(Phase~9).", 10);
                    data.AddOption("Previous.", 3);
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 12:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 3)
                    {
                        data.AddText("I`m~sorry,~but~only~Phase~3~Performers~can~learn~this~dance.~I~can`t~teach~you~this~dance~now.");
                        data.AddOption("Alright.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1420))
                    {
                        data.AddText("But~you`ve~already~learned~this~dance,~remember?");
                        data.AddOption("Oh,~alright.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1420, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Partner~Dance,~Phoenix!");
                    data.AddText("You`ve~learned~the~Partner~Dance,~Phoenix!");
                    data.AddOption("Thanks.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 11:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 6)
                    {
                        data.AddText("I`m~sorry,~but~only~Phase~6~Performers~can~learn~this~dance.~I~can`t~teach~you~this~dance~now.");
                        data.AddOption("Alright.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1421))
                    {
                        data.AddText("But~you`ve~already~learned~this~dance,~remember?");
                        data.AddOption("Oh,~alright.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1421, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Partner~Dance,~Melody!");
                    data.AddText("You`ve~learned~the~Partner~Dance,~Melody!");
                    data.AddOption("Thanks.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 10:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 9)
                    {
                        data.AddText("I`m~sorry,~but~only~Phase~9~Performers~can~learn~this~dance.~I~can`t~teach~you~this~dance~now.");
                        data.AddOption("Alright.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1422))
                    {
                        data.AddText("But~you`ve~already~learned~this~dance,~remember?");
                        data.AddOption("Oh,~alright.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1422, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Partner~Dance,~Tipsy!");
                    data.AddText("You`ve~learned~the~Partner~Dance,~Tipsy!");
                    data.AddOption("Thanks.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 8:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 1)
                    {
                        data.AddText("You~can~only~learn~it~at~Phase~1.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1415))
                    {
                        data.AddText("You`ve~already~learned~this~dance.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1415, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Battle~Dance.");
                    data.AddText("You`ve~learned~the~Battle~Dance.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                    data.AddOption("See~you!");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 7:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 3)
                    {
                        data.AddText("You~can~only~learn~it~at~Phase~3.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1416))
                    {
                        data.AddText("You`ve~already~learned~this~dance.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1416, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Triumph.");
                    data.AddText("You`ve~learned~the~Triumph.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                    data.AddOption("See~you!");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 5)
                    {
                        data.AddText("You~can~only~learn~it~at~Phase~5.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1417))
                    {
                        data.AddText("You`ve~already~learned~this~dance.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1417, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Step~Stomp.");
                    data.AddText("You`ve~learned~the~Step~Stomp.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                    data.AddOption("See~you!");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 5:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 7)
                    {
                        data.AddText("You~can~only~learn~it~at~Phase~7.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1418))
                    {
                        data.AddText("You`ve~already~learned~this~dance.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1418, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Moonlight.");
                    data.AddText("You`ve~learned~the~Moonlight.~Hope~you`ll~work~on~it~and~learn~more~dances~in~the~future.~See~you!");
                    data.AddOption("See~you!");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 4:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Performer) < 9)
                    {
                        data.AddText("You~can~only~learn~it~at~Phase~9.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    if (client.MySpells.ClientSpells.ContainsKey(1419))
                    {
                        data.AddText("You`ve~already~learned~this~dance.");
                        data.AddOption("Oh.");
                        data.AddAvatar(110);
                        data.FinalizeDialog();
                        break;
                    }
                    client.MySpells.Add(stream, 1419, 0, 0, 0);
                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                    client.SendSysMesage("You`ve~learned~the~Snow~Wind.");
                    data.AddText("You`ve~learned~the~Snow~Wind.~You~are~the~master~of~dances~now!");
                    data.AddOption("Yay!");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 1:
                    data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                    data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted!~You~can~level~up~your~sub-class~by~gaining~study~points.");
                    data.AddOption("How~can~I~get~study~points?", 2);
                    data.AddOption("Oh.~Thanks~for~telling~me.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                    data.AddText("~level~up~your~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                    data.AddOption("I~see.");
                    data.AddAvatar(110);
                    data.FinalizeDialog();
                    break;
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 24:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                    break;
            }
        }

        [Npc(NpcID.ApothecarySubClass)]
        public static void ApothecarySubClass(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello~there!~Please~allow~me~to~introduce~to~you~the~sub-class~of~the~Apothecary.~An~Apothecary~is~a~master~of~various~oriental~herbs~and~can~use~their~healing~powers~to~protect~themselves~from~poison~damage.");
                    data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~gain~more~protection.");
                    data.AddOption("Yes,~I`d~like~to~join!", 3);
                    data.AddOption("I~want~to~get~promoted.", 7);
                    data.AddOption("How~can~I~get~promoted?", 1);
                    data.AddOption("Nice.~I`ll~think~about~it.");
                    data.AddAvatar(113);
                    data.FinalizeDialog();
                    break;
                case 7:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) < 1)
                    {
                        data.AddText("You~are~not~an~Apothecary~yet~and~can`t~get~promoted.~Do~you~want~to~join~the~Apothecary~sub-class~now?");
                        data.AddOption("Yes,~I`d~like~to~join.", 3);
                        data.AddOption("Oh.~Not~now.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 1)
                    {
                        data.AddText("To~get~promoted~to~Phase~2~and~increase~more~poison~damage~reduced,~you~should~have~a~character~level~of~90~and~become~a~level~2~Apothecary.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 8);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 2)
                    {
                        data.AddText("To~get~promoted~to~Phase~3~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~110~and~become~a~level~3~Apothecary.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 9);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 3)
                    {
                        data.AddText("To~get~promoted~to~Phase~4~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~120~and~become~a~level~4~Apothecary.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 10);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 4)
                    {
                        data.AddText("To~get~promoted~to~Phase~5~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~90~and~become~a~level~5~Apothecary.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 11);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 5)
                    {
                        data.AddText("To~get~promoted~to~Phase~6~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~110,~~become~a~level~6~Apothecary~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 12);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 6)
                    {
                        data.AddText("To~get~promoted~to~Phase~7~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~120,~~become~a~level~7~Apothecary~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 13);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 7)
                    {
                        data.AddText("To~get~promoted~to~Phase~8~and~reduce~poison~damage~further,~you~should~have~a~character~level~of~120,~~become~a~level~8~Apothecary~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 14);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Apothecary) == 8)
                    {
                        data.AddText("To~get~promoted~to~Phase~9~and~reduce~poison~damage~fully,~you~should~have~a~character~level~of~130,~~become~a~level~9~Apothecary~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 15);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                        data.AddOption("Oh,~thanks~anyway.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 15:
                    if (client.Player.Level < 130)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 9)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 9, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~9~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 14:
                    if (client.Player.Level < 120)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 8)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 8, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~8~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 7)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 7, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~7~Apothecary~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 7)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 7, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~7~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 6)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 6, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~6~Apothecary~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 6)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 6, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~6~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 5)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 5, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~5~Apothecary~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 5)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 5, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~5~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 4)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 4, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~4~Apothecary~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 4)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 4, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~4~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 9:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 3)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 3, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~2~Apothecary~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 3)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 3, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~2~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 8:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 2)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 2, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~2~Apothecary~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Apothecary, 2, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~2~Apothecary~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("The~Apothecaries~are~quite~good~at~protecting~themselves~from~poison~damage.~If~you~want~to~join~us,~you~should~have~reached~Level~70~and~pay~me~10~Meteors~or~800~Study~Points.");
                    data.AddText("~After~that,~you~can~start~your~sub-class~training~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                    data.AddOption("Pay~10~Meteors~to~join.", 6);
                    data.AddOption("Pay~800~Study~Points~to~join.", 4);
                    data.AddOption("Oh,~it~does~not~suit~me.");
                    data.AddAvatar(113);
                    data.FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(1088001u, 10u, 0))
                            {
                                if (client.Inventory.Remove(1088001u, 10u, stream))
                                {
                                    client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Apothecary, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                    data.AddOption("Thank~you.");
                                    data.AddAvatar(113);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You~don`t~have~10~Meteor.~There~is~nothing~I~can~do~for~you.");
                                data.AddOption("Oh.~What~a~pity.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(1088001u, 10u, 0))
                        {
                            if (client.Inventory.Remove(1088001u, 10u, stream))
                            {
                                client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Apothecary, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                data.AddOption("Thank~you.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~don`t~have~10~Meteor.~There~is~nothing~I~can~do~for~you.");
                            data.AddOption("Oh.~What~a~pity.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~an~Apothecary,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 4:
                    data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                    data.AddOption("Yes,~I`ve~decided!", 5);
                    data.AddOption("No,~I~changed~my~mind.");
                    data.AddAvatar(113);
                    data.FinalizeDialog();
                    break;
                case 5:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Apothecary) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                                break;
                            }
                            if (client.Player.SubClass.StudyPoints < 800)
                            {
                                data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                data.AddOption("Alright.");
                                data.AddAvatar(113);
                                data.FinalizeDialog();
                                break;
                            }
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Apothecary, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thank~you.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.StudyPoints < 800)
                        {
                            data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                            data.AddOption("Alright.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Apothecary, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Apothecary~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Apothecaries.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thank~you.");
                            data.AddAvatar(113);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~an~Apothecary,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(113);
                        data.FinalizeDialog();
                    }
                    break;
                case 1:
                    data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                    data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                    data.AddOption("How~can~I~get~study~points?", 2);
                    data.AddOption("Oh.~Thanks~for~telling~me.");
                    data.AddAvatar(113);
                    data.FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                    data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                    data.AddOption("I~see.");
                    data.AddAvatar(113);
                    data.FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.MartialArtist)]
        public static void MartialArtist(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello~there!~You~look~quite~capable.~Perhaps~you`ll~make~a~great~Martial~Artist.~Please~allow~me~to~explain~the~Martial~Artist~sub-class.~The~Martial~Artist`s~awesome~displays~of~combat~prowess~are~a~wonder~to~behold,~but~a~nightmare~to~face.");
                    data.AddText("~When~you~are~a~Martial~Artist,~you~will~be~able~to~increase~the~chances~of~hitting~with~1.5x~Attack~Power!~");
                    data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~increase~your~chances~of~hitting~your~enemies~with~more~power!");
                    data.AddOption("Yes,~I`d~like~to~join.", 3);
                    data.AddOption("I~want~to~get~promoted.", 7);
                    data.AddOption("How~can~I~get~promoted?", 1);
                    data.AddOption("Nice.~I`ll~think~about~it.");
                    data.AddAvatar(32);
                    data.FinalizeDialog();
                    break;
                case 7:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) < 1)
                    {
                        data.AddText("You~are~not~a~Martial~Artist~yet~and~can`t~get~promoted.~Do~you~want~to~join~the~Martial~Artist~sub-class~now?");
                        data.AddOption("Yes,~I`d~like~to~join.", 3);
                        data.AddOption("Oh.~Not~now.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 1)
                    {
                        data.AddText("To~get~promoted~to~Phase~2~and~increase~the~chance~of~making~1.5x~Attack,~you~should~have~a~character~level~of~90~and~become~a~level~2~Martial~Artist.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 8);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 2)
                    {
                        data.AddText("To~get~promoted~to~Phase~3~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~110~and~become~a~level~3~Martial~Artist.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 9);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 3)
                    {
                        data.AddText("To~get~promoted~to~Phase~4~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~120~and~become~a~level~4~Martial~Artist.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 10);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 4)
                    {
                        data.AddText("To~get~promoted~to~Phase~5~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~90,~become~a~level~5~Martial~Artist,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 11);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 5)
                    {
                        data.AddText("To~get~promoted~to~Phase~6~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~110,~become~a~level~6~Martial~Artist,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 12);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 6)
                    {
                        data.AddText("To~get~promoted~to~Phase~7~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~120,~become~a~level~7~Martial~Artist,~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 13);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 7)
                    {
                        data.AddText("To~get~promoted~to~Phase~8~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~120,~become~a~level~8~Martial~Artist,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 14);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.MartialArtist) == 8)
                    {
                        data.AddText("To~get~promoted~to~Phase~9~and~increase~your~chances~of~hitting~with~1.5x~Attack,~you~should~have~a~character~level~of~130,~become~a~level~9~Martial~Artist,~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 15);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                        data.AddOption("Thank~you.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 15:
                    if (client.Player.Level < 130)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 9)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 9, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~9~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 14:
                    if (client.Player.Level < 120)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 8)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 8, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~8~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 7)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 7, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~7~Martial~Artist~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 7)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 7, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~7~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 6)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 6, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~6~Martial~Artist~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 6)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 6, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~6~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 5)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 5, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~5~Martial~Artist~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 5)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 5, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~5~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 4)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 4, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~4~Martial~Artist~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 4)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 4, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~4~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 9:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 3)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 3, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~3~Martial~Artist~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 3)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 3, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~3~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 8:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 2)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 2, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~2~Martial~Artist~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.MartialArtist, 2, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~2~Martial~Artist~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("Being~a~Martial~Artist,~you`ll~find~your~Critical~Strike~nicely~enhanced.~Interested?~Make~sure~you`ve~reached~Level~70,~and~pay~5~Celestial~Stones~or~800~Study~Points~to~join~us!");
                    data.AddText("~After~that,~you~can~working~on~your~sub-class~skill~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                    data.AddOption("Pay~5~CelestialStones~to~join.", 6);
                    data.AddOption("Pay~800~Study~Points~to~join.", 4);
                    data.AddOption("Oh,~it~does~not~suit~me.");
                    data.AddAvatar(32);
                    data.FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(721259u, 5u, 0) || client.Inventory.Contain(721259u, 5u, 1))
                            {
                                if (client.Inventory.Remove(721259u, 5u, stream))
                                {
                                    client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.MartialArtist, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                    data.AddOption("Thanks~in~advance.");
                                    data.AddAvatar(32);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You~don`t~have~5~Celestial~Stones~to~join~this~sub-class.~Sorry.");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(721259u, 5u, 0) || client.Inventory.Contain(721259u, 5u, 1))
                        {
                            if (client.Inventory.Remove(721259u, 5u, stream))
                            {
                                client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.MartialArtist, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                data.AddOption("Thanks~in~advance.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~don`t~have~5~Celestial~Stones~to~join~this~sub-class.~Sorry.");
                            data.AddOption("Oh.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Martial~Artist,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 4:
                    data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                    data.AddOption("Yes,~I`ve~decided!", 5);
                    data.AddOption("No,~I~changed~my~mind.");
                    data.AddAvatar(32);
                    data.FinalizeDialog();
                    break;
                case 5:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.MartialArtist) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                                break;
                            }
                            if (client.Player.SubClass.StudyPoints < 800)
                            {
                                data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                data.AddOption("Alright.");
                                data.AddAvatar(32);
                                data.FinalizeDialog();
                                break;
                            }
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.MartialArtist, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks~in~advance.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.StudyPoints < 800)
                        {
                            data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                            data.AddOption("Alright.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.MartialArtist, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Martial~Artist~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Martial~Artists.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks~in~advance.");
                            data.AddAvatar(32);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Martial~Artist,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(32);
                        data.FinalizeDialog();
                    }
                    break;
                case 1:
                    data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                    data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                    data.AddOption("How~can~I~get~study~points?", 2);
                    data.AddOption("Oh.");
                    data.AddAvatar(32);
                    data.FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                    data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                    data.AddOption("Oh.");
                    data.AddAvatar(32);
                    data.FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.Warlock)]
        public static void Warlock(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Good~day!~Have~you~ever~wondered~what~a~Warlock~is?~Well,~please~allow~me~to~introduce~this~sub-class~to~you.~Warlocks~are~masters~of~the~the~psionic~energies~and~can~increase~their~chances~of~casting~spells~with~2x~Magical~Attack.");
                    data.AddText("~Isn`t~that~wonderful?~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~increase~your~power!");
                    data.AddOption("Yes,~I`d~like~to~join.", 3);
                    data.AddOption("I~want~to~get~promoted.", 7);
                    data.AddOption("How~can~I~get~promoted?", 1);
                    data.AddOption("Not~my~concern.");
                    data.AddAvatar(23);
                    data.FinalizeDialog();
                    break;
                case 7:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) < 1)
                    {
                        data.AddText("You~are~not~a~Warlock~and~can`t~get~promoted.~Do~you~want~to~join~the~Warlock~sub-class~now?");
                        data.AddOption("Yes,~I`d~like~to~join~it.", 3);
                        data.AddOption("Oh.~I`ll~think~about~it.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 1)
                    {
                        data.AddText("To~get~promoted~to~Phase~2~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~90~and~become~a~level~2~Warlock.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 8);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 2)
                    {
                        data.AddText("To~get~promoted~to~Phase~3~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~110~and~become~a~level~3~Warlock.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 9);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 3)
                    {
                        data.AddText("To~get~promoted~to~Phase~4~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~120~and~become~a~level~4~Warlock.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 10);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 4)
                    {
                        data.AddText("To~get~promoted~to~Phase~5~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~90,~become~a~level~5~Warlock~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 11);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 5)
                    {
                        data.AddText("To~get~promoted~to~Phase~6~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~110,~become~a~level~6~Warlock~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 12);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 6)
                    {
                        data.AddText("To~get~promoted~to~Phase~7~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~120,~become~a~level~7~Warlock~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 13);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 7)
                    {
                        data.AddText("To~get~promoted~to~Phase~8~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~120,~become~a~level~8~Warlock~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 14);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Warlock) == 8)
                    {
                        data.AddText("To~get~promoted~to~Phase~9~and~increase~your~chances~of~casting~with~2x~Magical~Attack,~you~should~have~a~character~level~of~130,~become~a~level~9~Warlock~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Sure.", 15);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 15:
                    if (client.Player.Level < 130)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 9)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 9, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~9~Warlock~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 14:
                    if (client.Player.Level < 120)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 8)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 8, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~8~Warlock~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 7)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 7, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~7~Warlock~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 7)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 7, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~7~Warlock~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 6)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 6, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~6~Warlock~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 6)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 6, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~6~Warlock~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 5)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 5, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~5~Warlock~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 5)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 5, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~5~Warlock~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 4)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 4, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~4~Warlock~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 4)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 4, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~4~Warlock~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 9:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 3)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 3, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~3~Warlock~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 3)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 3, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~3~Warlock~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 8:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 2)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 2, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~2~Warlock~now");
                            data.AddOption("Great.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Warlock, 2, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~2~Warlock~now");
                        data.AddOption("Great.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("Warlocks~are~masters~of~psionic~energies~who~have~the~chance~to~make~Skill~Critical~Strike.~If~you`ve~reached~Level~70,~just~pay~10~Bombs~or~800~Study~Points,");
                    data.AddText("~and~you`ll~be~one~of~us.~After~that,~you~can~enhance~your~sub-class~skill~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                    data.AddOption("Pay~10~Bombs~to~join.", 6);
                    data.AddOption("Pay~800~Study~Points~to~join.", 4);
                    data.AddOption("Oh,~it~does~not~suit~me.");
                    data.AddAvatar(23);
                    data.FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(721261u, 10u, 0))
                            {
                                if (client.Inventory.Remove(721261u, 10u, stream))
                                {
                                    client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Warlock, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(23);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You~don`t~have~the~10~Bombs~to~join~the~Warlock~sub-class.");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(721261u, 10u, 0))
                        {
                            if (client.Inventory.Remove(721261u, 10u, stream))
                            {
                                client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Warlock, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                data.AddOption("Thanks.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~don`t~have~the~10~Bombs~to~join~the~Warlock~sub-class.");
                            data.AddOption("Oh.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Warlock,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 4:
                    data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                    data.AddOption("Yes,~I`ve~decided!", 5);
                    data.AddOption("No,~I~changed~my~mind.");
                    data.AddAvatar(23);
                    data.FinalizeDialog();
                    break;
                case 5:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Warlock) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                                break;
                            }
                            if (client.Player.SubClass.StudyPoints < 800)
                            {
                                data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                data.AddOption("Alright.");
                                data.AddAvatar(23);
                                data.FinalizeDialog();
                                break;
                            }
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Warlock, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.StudyPoints < 800)
                        {
                            data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                            data.AddOption("Alright.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Warlock, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Warlock~community.~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Warlocks.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(23);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Warlock,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(23);
                        data.FinalizeDialog();
                    }
                    break;
                case 1:
                    data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                    data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                    data.AddOption("How~can~I~get~study~points?", 2);
                    data.AddOption("Oh.");
                    data.AddAvatar(23);
                    data.FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                    data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                    data.AddOption("I~see.");
                    data.AddAvatar(23);
                    data.FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.Sage)]
        public static void Sage(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello,~my~friend.~Are~you~here~to~join~the~Sage~sub-class?~Before~we~start,~please~allow~me~to~introduce~this~sub-class~to~you.~Sages~have~strong~spiritual~powers~and~have~a~gruesome~ability~to~reduce~a~target`s");
                    data.AddText("~Magical~Defense.~This~is~very~helpful~in~defeating~those~who~might~underestimate~your~power!");
                    data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~reduce~more~of~your~target`s~Magical~Defense.");
                    data.AddOption("Yes,~I`d~like~to~join.", 3);
                    data.AddOption("I~want~to~get~promoted.", 7);
                    data.AddOption("How~can~I~get~promoted?", 1);
                    data.AddOption("Not~my~concern.");
                    data.AddAvatar(87);
                    data.FinalizeDialog();
                    break;
                case 7:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) < 1)
                    {
                        data.AddText("Well,~you~need~to~join~us~before~getting~promoted.~Do~you~want~to~become~a~Sage~now?");
                        data.AddOption("Yes,~I`d~like~to~join~it.", 3);
                        data.AddOption("Oh,~I`m~not~ready~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 1)
                    {
                        data.AddText("To~get~promoted~to~Phase~2~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~90~and~become~a~level~2~Sage.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 8);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 2)
                    {
                        data.AddText("To~get~promoted~to~Phase~3~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~110~and~become~a~level~3~Sage.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 9);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 3)
                    {
                        data.AddText("To~get~promoted~to~Phase~4~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~120~and~become~a~level~4~Sage.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 10);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 4)
                    {
                        data.AddText("To~get~promoted~to~Phase~5~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~90,~become~a~level~5~Sage~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 11);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 5)
                    {
                        data.AddText("To~get~promoted~to~Phase~6~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~110,~become~a~level~6~Sage~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 12);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 6)
                    {
                        data.AddText("To~get~promoted~to~Phase~7~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~120,~become~a~level~7~Sage~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 13);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 7)
                    {
                        data.AddText("To~get~promoted~to~Phase~8~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~120,~become~a~level~8~Sage~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 14);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Sage) == 8)
                    {
                        data.AddText("To~get~promoted~to~Phase~9~and~reduce~more~of~your~target`s~Magical~Defense,~you~should~have~a~character~level~of~130,~become~a~level~9~Sage~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddOption("Positive.", 15);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 15:
                    if (client.Player.Level < 130)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 9)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 9, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~9~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 14:
                    if (client.Player.Level < 120)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 8)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 8, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~8~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 7)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 7, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~7~Sage~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 7)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 7, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~7~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 6)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 6, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~6~Sage~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 6)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 6, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~6~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 5)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 5, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~5~Sage~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 5)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 5, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~5~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 4)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 4, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~4~Sage~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 4)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 4, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~4~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 9:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 3)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 3, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~3~Sage~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 3)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 3, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~3~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 8:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 2)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 2, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~2~Sage~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Sage, 2, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~2~Sage~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("Want~to~be~a~Sage?~We`re~able~to~reduce~a~target`s~Magical~Defense.~Make~sure~you`ve~reached~Level~70,~and~pay~20~Lucky~Amulets~or~800~Study~Points~to~join~us!~");
                    data.AddText("~After~being~one~of~us,~you~can~work~on~your~sub-class~training~on~the~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                    data.AddOption("Pay~20~Lucky~Amulets~to~join.", 6);
                    data.AddOption("Pay~800~Study~Points~to~join.", 4);
                    data.AddOption("Oh,~it~does~not~suit~me.");
                    data.AddAvatar(87);
                    data.FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(723087u, 20u, 0))
                            {
                                if (client.Inventory.Remove(723087u, 20u, stream))
                                {
                                    client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Sage, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                    data.AddOption("Thanks.");
                                    data.AddAvatar(87);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Well,~I`m~sorry,~but~you~don`t~have~the~20~Lucky~Amulets~needed~to~join~us.");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(723087u, 20u, 0))
                        {
                            if (client.Inventory.Remove(723087u, 20u, stream))
                            {
                                client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Sage, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                data.AddOption("Thanks.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Well,~I`m~sorry,~but~you~don`t~have~the~20~Lucky~Amulets~needed~to~join~us.");
                            data.AddOption("Oh.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Sage,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 4:
                    data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                    data.AddOption("Yes,~I`ve~decided!", 5);
                    data.AddOption("No,~I~changed~my~mind.");
                    data.AddAvatar(87);
                    data.FinalizeDialog();
                    break;
                case 5:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Sage) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                                break;
                            }
                            if (client.Player.SubClass.StudyPoints < 800)
                            {
                                data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                data.AddOption("Alright.");
                                data.AddAvatar(87);
                                data.FinalizeDialog();
                                break;
                            }
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Sage, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.StudyPoints < 800)
                        {
                            data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                            data.AddOption("Alright.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Sage, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Sage~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Sages.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(87);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Sage,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level,~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    break;
                case 1:
                    data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                    data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~to~a~certain~level~before~getting~promoted~to~some~phase.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                    data.AddOption("How~can~I~get~study~points?", 2);
                    data.AddOption("I~see.");
                    data.AddAvatar(87);
                    data.FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                    data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                    data.AddOption("I~see.~Thanks.");
                    data.AddAvatar(87);
                    data.FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.ChiMaster)]
        public static void ChiMaster(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello~there!~Please~allow~me~to~introduce~to~you~the~sub-class~of~the~Chi~Master.~The~Chi~Master~is~a~potent~combatant~so~versed~in~counter~attacks,~that~they~have~a~chance~of~preventing~their~enemy~from~landing~Critical~Strikes!");
                    data.AddText("~Would~you~like~to~join~us?~After~you~join~this~sub-class,~you~can~level~it~up~and~get~promoted~to~increase~your~immunity~to~critical~strikes.");
                    data.AddOption("Yes,~I`d~like~to~join~it.", 1);
                    data.AddOption("I~want~to~get~promoted.", 5);
                    data.AddOption("How~can~I~get~promoted?", 14);
                    data.AddOption("Where~to~buy~Yin-Yang~Fruits?", 16);
                    data.AddOption("Not~my~concern.");
                    data.AddAvatar(79);
                    data.FinalizeDialog();
                    break;
                case 16:
                    data.AddText("You~may~pay~5,000~Horse~Racing~points~to~the~Horse~Race~Manager~to~buy~a~Yin~Yang~Fruit.");
                    data.AddOption("Thanks.");
                    data.AddAvatar(79);
                    data.FinalizeDialog();
                    break;
                case 14:
                    data.AddText("Good~day!~Please~spare~me~a~few~minutes~so~that~I~can~tell~you~about~the~sub-classes~in~Twin~City.~Each~Sub-Class~has~9~phases,~and~the~higher~the~phase~is,~the~more~bonus~effects~the~sub-class~will~offer.~But~keep~in~mind~that~these");
                    data.AddText("~sub-classes~also~have~a~level~system~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~sub-class~by~gaining~study~points.");
                    data.AddOption("How~can~I~get~study~points?", 15);
                    data.AddOption("Oh.");
                    data.AddAvatar(79);
                    data.FinalizeDialog();
                    break;
                case 15:
                    data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~sub-class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~study~points,~open~the~sub-class~sheet~from~the~character~panel~and");
                    data.AddText("~level~up~the~sub-class~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,~so~you~might~find~some~books~from~them.");
                    data.AddOption("Okay.");
                    data.AddAvatar(79);
                    data.FinalizeDialog();
                    break;
                case 5:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) < 1)
                    {
                        data.AddText("You~are~not~a~Chi~Master~yet~and~can`t~get~promoted.~Do~you~want~to~join~the~Chi~Master~sub-class~now?");
                        data.AddOption("Yes,~I`d~like~to~join.", 1);
                        data.AddOption("Oh.~Not~now.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 1)
                    {
                        data.AddText("To~get~promoted~to~Phase~2~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~90~and~become~a~level~2~Chi~Master.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 6);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 2)
                    {
                        data.AddText("To~get~promoted~to~Phase~3~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~110~and~become~a~level~3~Chi~Master.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 7);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 3)
                    {
                        data.AddText("To~get~promoted~to~Phase~4~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~120~and~become~a~level~4~Chi~Master.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 8);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 4)
                    {
                        data.AddText("To~get~promoted~to~Phase~5~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~90~,~become~a~level~5~Chi~Master~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 9);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 5)
                    {
                        data.AddText("To~get~promoted~to~Phase~6~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~110~,~become~a~level~6~Chi~Master~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 10);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 6)
                    {
                        data.AddText("To~get~promoted~to~Phase~7~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~120~,~become~a~level~7~Chi~Master~and~have~been~reborn~once.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 11);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 7)
                    {
                        data.AddText("To~get~promoted~to~Phase~8~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~120~,~become~a~level~8~Chi~Master~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 12);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.ChiMaster) == 8)
                    {
                        data.AddText("To~get~promoted~to~Phase~9~and~increase~your~immunity~rate~to~critical~strikes,~you~should~have~a~character~level~of~130~,~become~a~level~9~Chi~Master~and~have~been~reborn~twice.~Have~you~met~all~these~requirements?");
                        data.AddText("~");
                        data.AddOption("Positive.", 13);
                        data.AddOption("Oh,~not~yet.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("There~is~nothing~more~I~can~teach~you,~now~that~you`ve~reached~the~highest~phase~of~this~sub-class.~Well~done!");
                        data.AddOption("Oh,~it~does~not~suit~me.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Player.Level < 130)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 9)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 9, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~9~Chi~Master~now.");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.Level < 120)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 8)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 8, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~8~Chi~Master~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 7)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 7, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~7~Chi~Master~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 7)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 7, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~7~Chi~Master~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 6)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 6, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~6~Chi~Master~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 6)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 6, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~6~Chi~Master~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 9:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 5)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 5, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~5~Chi~Master~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 5)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 5, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~5~Chi~Master~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 8:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 4)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 4, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~4~Chi~Master~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 4)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 4, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~4~Chi~Master~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 7:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 3)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 3, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~3~Chi~Master~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 3)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 3, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~3~Chi~Master~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 6:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 2)
                        {
                            data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 2, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("You~are~a~Phase~2~Chi~Master~now!");
                            data.AddOption("Great.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 2)
                    {
                        data.AddText("You~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.ChiMaster, 2, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("You~are~a~Phase~2~Chi~Master~now!");
                        data.AddOption("Great.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 1:
                    data.AddText("The~Chi~Master~focuses~on~immunity~rate~to~critical~strikes~from~enemies.~If~you`ve~reached~Level~70~and~you~want~to~join~us,~give~me~800~Study~Points~or~a~Yin-Yang~Fruit");
                    data.AddText("~that~you~can~buy~from~the~Horse~Race~Manager~at~5,000~Horse~Racing~Points.~After~that,~you~can~start~your~study~of~the~sub-class~on~the~`Status`~sheet.");
                    data.AddText("~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                    data.AddOption("Pay~a~Yin-Yang~Fruit~to~join.", 4);
                    data.AddOption("Pay~800~Study~Points~to~join.", 2);
                    data.AddOption("Oh,~it~does~not~suit~me.");
                    data.AddAvatar(79);
                    data.FinalizeDialog();
                    break;
                case 4:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(711188u, 1u, 0))
                            {
                                client.Inventory.Remove(711188u, 1u, stream);
                                client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.ChiMaster, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                                data.AddOption("Thanks.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I`m~sorry,~you~need~to~buy~a~Yin-Yang~Fruit~from~the~Horse~Race~Manager~and~reach~level~70~to~join~us.");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(711188u, 1u, 0))
                        {
                            client.Inventory.Remove(711188u, 1u, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.ChiMaster, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I`m~sorry,~you~need~to~buy~a~Yin-Yang~Fruit~from~the~Horse~Race~Manager~and~reach~level~70~to~join~us.");
                            data.AddOption("Oh.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Chi~Master,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                    data.AddOption("Yes,~I`ve~decided!", 3);
                    data.AddOption("No,~I~changed~my~mind.");
                    data.AddAvatar(79);
                    data.FinalizeDialog();
                    break;
                case 3:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.ChiMaster) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("You~will~be~invited~to~join~us~after~you~reach~level~70.~Work~harder!");
                                data.AddOption("Oh.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                                break;
                            }
                            if (client.Player.SubClass.StudyPoints < 800)
                            {
                                data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                data.AddOption("Alright.");
                                data.AddAvatar(79);
                                data.FinalizeDialog();
                                break;
                            }
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.ChiMaster, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.StudyPoints < 800)
                        {
                            data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                            data.AddOption("Alright.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.ChiMaster, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Welcome~to~the~Chi~Master~community!~This~is~a~big~community~and~we~have~9~phases~for~the~advancement~of~Chi~Masters.~Work~hard~in~the~future~and~when~you~are~ready~to~get~promoted,~I`m~always~here~for~you.");
                            data.AddOption("Thanks.");
                            data.AddAvatar(79);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Chi~Master,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~sub-class~level~now.");
                        data.AddOption("Oh.");
                        data.AddAvatar(79);
                        data.FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.LeadWrangler)]
        public static void LeadWrangler(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey,~there!~Let~me~tell~you~about~the~joys~of~the~Wrangler!~Wranglers~are~able~to~equip~special~armor~on~their~mounts.~As~their~Sub-Class~level~improves,");
                    data.AddText("~their~Max~HP~increases.~Isn`t~it~great?~Would~you~like~to~join~us?");
                    data.AddOption("Yes,~I`d~like~to~join.", 1);
                    data.AddOption("I`d~like~to~get~promoted.", 7);
                    data.AddOption("How~can~I~get~promoted?", 5);
                    data.AddOption("Not~my~concern.");
                    data.AddAvatar(233);
                    data.FinalizeDialog();
                    break;
                case 7:
                    if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) < 1)
                    {
                        data.AddText("You`re~not~a~Wrangler~yet,~and~can`t~get~promoted.~Would~you~like~to~become~a~Wrangler?");
                        data.AddOption("Yes,~I`d~like~to~join.", 1);
                        data.AddOption("Not~now.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 1)
                    {
                        data.AddText("To~get~promoted~to~Phase~2~and~be~able~to~equip~better~mount~armor,~your~character~should~reach~Level~90~and~your~Sub-Class~reach~Level~2.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 8);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 2)
                    {
                        data.AddText("To~get~promoted~to~Phase~3~and~be~able~to~equip~better~mount~armor,~your~character~should~reach~Level~110~and~your~Sub-Class~at~Level~3.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 9);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 3)
                    {
                        data.AddText("To~get~promoted~to~Phase~4~and~be~able~to~equip~better~mount~armor,~your~character~should~reach~Level~120~and~your~Sub-Class~at~Level~4.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 10);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 4)
                    {
                        data.AddText("To~get~promoted~to~Phase~5~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~once,~Character~Level~90,~and~Sub-Class~Level~5.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 11);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 5)
                    {
                        data.AddText("To~get~promoted~to~Phase~6~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~once,~Character~Level~110,~and~Sub-Class~Level~6.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 12);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 6)
                    {
                        data.AddText("To~get~promoted~to~Phase~7~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~once,~Character~Level~120,~and~Sub-Class~Level~7.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 13);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 7)
                    {
                        data.AddText("To~get~promoted~to~Phase~8~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~twice,~Character~Level~120,~and~Sub-Class~Level~8.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 14);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassPhrase(DBLevExp.Sort.Wrangler) == 8)
                    {
                        data.AddText("To~get~promoted~to~Phase~9~and~be~able~to~equip~better~mount~armor,~you~should~meet~the~following~requirements:~Be~Reborn~twice,~Character~Level~130,~and~Sub-Class~Level~9.");
                        data.AddText("~Have~you~met~all~these~requirements?");
                        data.AddOption("Yup!", 15);
                        data.AddOption("Nope.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You`ve~reached~the~highest~phase!~There~is~nothing~else~I~have~to~teach~you.~Go~forth~and~make~us~proud!");
                        data.AddOption("Bye.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 15:
                    if (client.Player.Level < 130)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 9)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 9, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P9~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 14:
                    if (client.Player.Level < 120)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 8)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 2)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 8, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~P8~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 7)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 7, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Congratulations!~You`ve~been~promoted~to~P7~Wrangler!");
                            data.AddOption("Thanks.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 7)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn >= 1)
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 7, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~P7~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 6)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 6, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Congratulations!~You`ve~been~promoted~to~a~P6~Wrangler!");
                            data.AddOption("Thanks.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 6)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 6, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P6~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Reborn < 2)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 5)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.Reborn < 1)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 5, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Congratulations!~You`ve~been~promoted~to~a~P5~Wrangler!");
                            data.AddOption("Thanks.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 5)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Reborn < 1)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 5, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P5~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 120)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 4)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 4, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Congratulations!~You`ve~been~promoted~to~a~P4~Wrangler!");
                            data.AddOption("Thanks.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 4)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 4, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P4~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 9:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 110)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 3)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 3, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Congratulations!~You`ve~been~promoted~to~a~P3~Wrangler!");
                            data.AddOption("Thanks.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 3)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 3, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P3~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 8:
                    if (client.Player.Reborn < 1)
                    {
                        if (client.Player.Level < 90)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 2)
                        {
                            data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                            data.AddOption("I~see.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 2, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Congratulations!~You`ve~been~promoted~to~a~P2~Wrangler!");
                            data.AddOption("Thanks.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 2)
                    {
                        data.AddText("I`m~sorry,~but~you~haven`t~met~all~the~requirements~for~promotion~yet.");
                        data.AddOption("I~see.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        client.Player.SubClass.SetPhrase(DBLevExp.Sort.Wrangler, 2, client, stream);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                        data.AddText("Congratulations!~You`ve~been~promoted~to~a~P2~Wrangler!");
                        data.AddOption("Thanks.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 5:
                    data.AddText("Each~Sub-Class~has~9~Phases.~The~higher~the~phase~is,~the~more~bonus~effects~you~will~get.");
                    data.AddText("~But~keep~in~mind~that~these~Sub-Classes~also~have~a~level~system,~and~you~need~to~level~them~up~before~you~can~get~promoted.~You~can~level~up~your~Sub-Class~by~gaining~Study~Points.");
                    data.AddOption("How~can~I~get~Study~Points?", 6);
                    data.AddOption("I~see.");
                    data.AddAvatar(233);
                    data.FinalizeDialog();
                    break;
                case 6:
                    data.AddText("Well,~the~only~way~to~get~those~points~is~to~read~the~Sub-Class~books,~such~as~the~Diligence~Book.~When~you`ve~gained~enough~Study~Points,");
                    data.AddText("~open~the~Sub-Class~sheet~from~the~character~panel~and~level~up~the~Sub-Class,~there.~Monsters~in~the~wild~are~always~bothering~young~adventurers,");
                    data.AddText("~so~you~might~find~some~books~after~you~kill~them.");
                    data.AddOption("Got~it.");
                    data.AddAvatar(233);
                    data.FinalizeDialog();
                    break;
                case 1:
                    data.AddText("Wranglers~are~able~to~equip~special~armor~on~their~mounts.~If~you`ve~reached~Level~40,~you~can~pay~40~Saddles~or~800~Study~Points~to~join~us.~");
                    data.AddText("~After~being~a~Wrangler,~you~can~enhance~your~sub-class~skill~on~`Status`~sheet.~Remember,~a~certain~sub-class~level~is~required~to~promote~the~phase~of~your~sub-class.");
                    data.AddOption("Pay~40~Saddles~to~join.", 2);
                    data.AddOption("Pay~800~Study~Points~to~join.", 3);
                    data.AddOption("I~see.");
                    data.AddAvatar(233);
                    data.FinalizeDialog();
                    break;
                case 3:
                    data.AddText("~~~~Are~you~sure~you~want~to~pay~800~Study~Points~to~join~us?");
                    data.AddOption("Yes,~I`ve~decided!", 4);
                    data.AddOption("No,~I~changed~my~mind.");
                    data.AddAvatar(233);
                    data.FinalizeDialog();
                    break;
                case 4:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("I`m~sorry,~but~you~have~to~reach~at~least~Level~70~to~join~our~fine~group~of~adventurers.");
                                data.AddOption("Alright.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                                break;
                            }
                            if (client.Player.SubClass.StudyPoints < 800)
                            {
                                data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                                data.AddOption("Alright.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                                break;
                            }
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Wrangler, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                            data.AddOption("I~will.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else if (client.Player.SubClass.StudyPoints < 800)
                        {
                            data.AddText("You~don`t~have~800~Study~Points~to~take~the~sub-class.");
                            data.AddOption("Alright.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            client.Player.SubClass.RemoveStudy(client, 800, stream);
                            client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Wrangler, client, stream);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                            data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                            data.AddOption("I~will.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Wrangler,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~standing~with~us!");
                        data.AddOption("Thanks~for~reminding~me.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Player.SubClass.GetClassLevel(DBLevExp.Sort.Wrangler) < 1)
                    {
                        if (client.Player.Reborn < 1)
                        {
                            if (client.Player.Level < 70)
                            {
                                data.AddText("I`m~sorry,~but~you~have~to~reach~at~least~Level~70~to~join~our~fine~group~of~adventurers.");
                                data.AddOption("Alright.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(723903u, 40u, 0))
                            {
                                if (client.Inventory.Remove(723903u, 40u, stream))
                                {
                                    client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Wrangler, client, stream);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                    data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                                    data.AddOption("I~will.");
                                    data.AddAvatar(233);
                                    data.FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry,~but~I~don`t~see~40~Saddles~in~your~inventory.~You~should~bring~them~with~you,~next~time.");
                                data.AddOption("OK.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(723903u, 40u, 0))
                        {
                            if (client.Inventory.Remove(723903u, 40u, stream))
                            {
                                client.Player.SubClass.LearnNewSubClass(DBLevExp.Sort.Wrangler, client, stream);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, false, "zf2-e300");
                                data.AddText("Each~Sub-Class~has~9~phases.~If~you~want~to~get~promoted~one~day,~you`ll~come~talk~to~me.");
                                data.AddOption("I~will.");
                                data.AddAvatar(233);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~but~I~don`t~see~40~Saddles~in~your~inventory.~You~should~bring~them~with~you,~next~time.");
                            data.AddOption("OK.");
                            data.AddAvatar(233);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Aha,~you~are~already~a~Wrangler,~remember?~I~suggest~you~focus~your~attention~on~upgrading~your~standing~with~us!");
                        data.AddOption("Thanks~for~reminding~me.");
                        data.AddAvatar(233);
                        data.FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.SubClassManager)]
        public static void SubClassManager(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("In addition to the existing 7 classes, there are 7 sub-classes for you to choose, which will grant you many bonus effects.");
                    data.AddText(" The 7 sub-classes are Apothecary, Chi Master, Martial Artist, Warlock, Sage, Performer, Lead Wrangler. Do you want to choose a sub-class to");
                    data.AddText("~enhance the strength of your character?");
                    data.AddOption("Sub-Class~Hall", 1);
                    data.AddOption("See~you~later.");
                    data.AddAvatar(76);
                    data.FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(51, 71, 6072u);
                    break;
            }
        }

        [Npc(NpcID.PrizeOfficer)]
        public unsafe static void PrizeOfficer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            string str = "";
            string str1 = "";
            int id_item = 0;
            switch (Option)
            {
                case 0:
                    data.AddText("Hello! I'm the prize NPC and i'm here to deliver your donations ")
                        .AddOption("Claim my donation points!", 1)
                        .AddOption("Open the donations shop!", 2)
                        .AddOption("View the donations items!", 3)
                        .AddOption("Just passing by.", byte.MaxValue)
                        .AddOption("Claim PayPal Recharge.", 4)
                        .AddAvatar(63)
                        .FinalizeDialog();
                    break;
                case 2:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 464u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 3:
                    client.Teleport(22, 22, 1009);
                    break;
                case 1:
                    {
                        Dictionary<int, int> prizes;
                        prizes = PayPal.getItems(client.AccountName());
                        foreach (KeyValuePair<int, int> item in prizes)
                        {
                            switch (item.Key)
                            {
                                case 1://199    //BV8J3R6VLDBL2
                                    {
                                        string ItemName = "[1000DPs]Premium Pack.";
                                        client.Inventory.Add(stream, 3303752);
                                        client.CreateBoxDialog("You have received " + ItemName + ". Thank you for your support.");
                                        //PayPal.logDonation(client.AccountName(), client.Player.Name, item.Value + " 10 donation points.");
                                        PayPal.logDonation(client.AccountName(), client.Player.Name, item.Value + "-[300]CreditPoints.", DateTime.Now + "");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        System.Console.ForegroundColor = ConsoleColor.DarkGreen;
                                        Console.WriteLine(client.Player.Name + " ! claimed " + amessaj + " " + ItemName + " bought from donate page.");
                                        System.Console.ForegroundColor = ConsoleColor.White;

                                        break;
                                    }
                                case 2://149   //VERW2YY628X54
                                    {
                                        string ItemName = "[300DPs]Golden Pack.";
                                        client.Inventory.Add(stream, 3303749);

                                        client.CreateBoxDialog("You have received " + ItemName + ". Thank you for your support.");

                                        PayPal.logDonation(client.AccountName(), client.Player.Name, item.Value + "-[200]CreditPoints.", DateTime.Now + "");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        System.Console.ForegroundColor = ConsoleColor.DarkGreen;
                                        Console.WriteLine(client.Player.Name + " ! claimed " + amessaj + " " + ItemName + " bought from donate page.");
                                        System.Console.ForegroundColor = ConsoleColor.White;

                                        break;
                                    }
                                case 3://85   //E8GVZUUYFCMWQ
                                    {
                                        string ItemName = "[200]Silver Pack.";
                                        client.Inventory.Add(stream, 3303748);


                                        client.CreateBoxDialog("You have received " + ItemName + ". Thank you for your support.");

                                        PayPal.logDonation(client.AccountName(), client.Player.Name, item.Value + "-[100]CreditPoints.", DateTime.Now + "");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        System.Console.ForegroundColor = ConsoleColor.DarkGreen;
                                        Console.WriteLine(client.Player.Name + " ! claimed " + amessaj + " " + ItemName + " bought from donate page.");
                                        System.Console.ForegroundColor = ConsoleColor.White;

                                        break;
                                    }



                            }
                        }
                        if (prizes.Count == 0)
                        {
                            data.AddText("You have nothing to claim.");
                            data.AddOption("Thanks.", byte.MaxValue);
                            data.AddAvatar(63).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You claimed sucessfully.");
                            data.AddOption("Thanks.", byte.MaxValue);
                            data.AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [Npc(NpcID.OPBox)]
        public static void OPBox(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720145u, 1u, 0))
            {
                client.CreateBoxDialog("Sorry, you don`t have a OPGearBox.");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("You can claim one from the three +1 1H, 2H or Equipment random items in this pack. Which one do you like?");
                    data.AddOption("+1 Random items", 1);
                    //data.AddOption("+2 2H-Random items", 5);
                    //data.AddOption("+2 Equipment-Random items", 10);
                    data.AddOption("Nevermind", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 10:
                    data.AddText("Are you sure you want to claim a +1 Equipment-Random items from this pack?");
                    data.AddOption("Yes.", 11);
                    data.AddOption("No.", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 11:
                    client.SendSysMesage("You received +1 Equipment-Random items!");
                    client.Inventory.Remove(720145u, 1u, stream);
                    byte plus = 2;

                    var RndAccessory = Database.ItemType.ElitePlusEquipment;
                    var Position = Program.GetRandom.Next(0, RndAccessory.Count);
                    var ReceiveItem = RndAccessory.ToArray()[Position];
                    client.Inventory.Add(stream, ReceiveItem, 1, (byte)plus);
                    Game.MsgServer.MsgGameItem DataItem = new Game.MsgServer.MsgGameItem();
                    client.SendSysMesage("You gained a +" + plus + " " + Server.ItemsBase[ReceiveItem].Name + "!", MsgMessage.ChatMode.System);

                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("[EvilEnchantressBox]" + client.Player.Name + " You just gained a +" + plus + " " + Server.ItemsBase[ReceiveItem].Name + " ! from [OnlinePoints Manager]!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                    client.SendSysMesage($"[EvilEnchantressBox] You just gained a +" + plus + " " + Server.ItemsBase[ReceiveItem].Name + " ! from [EvilEnchantressBox]!");
                    break;
                case 5:
                    data.AddText("Are you sure you want to claim a +3 2H-Random items from this pack?");
                    data.AddOption("Yes.", 6);
                    data.AddOption("No.", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 6:
                    client.SendSysMesage("You received +3 2H-Random items!");
                    client.Inventory.Remove(720145u, 1u, stream);
                    byte plus3 = 2;

                    var RndAccessory3 = Database.ItemType.ElitePlus2HItems;
                    var Position3 = Program.GetRandom.Next(0, RndAccessory3.Count);
                    var ReceiveItem3 = RndAccessory3.ToArray()[Position3];
                    client.Inventory.Add(stream, ReceiveItem3, 1, (byte)plus3);
                    Game.MsgServer.MsgGameItem DataItem3 = new Game.MsgServer.MsgGameItem();
                    client.SendSysMesage("You gained a +" + plus3 + " " + Server.ItemsBase[ReceiveItem3].Name + "!", MsgMessage.ChatMode.System);

                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("[OnlinePoints]" + client.Player.Name + " You just gained a +" + plus3 + " " + Server.ItemsBase[ReceiveItem3].Name + " ! from [OnlinePoints Manager]!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                    client.SendSysMesage($"[OnlinePoints] You just gained a +" + plus3 + " " + Server.ItemsBase[ReceiveItem3].Name + " ! from [OnlinePoints Manager]!");
                    break;
                case 1:
                    data.AddText("Are you sure you want to claim a +1 Random items from this pack?");
                    data.AddOption("Yes.", 2);
                    data.AddOption("No.", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 2:
                    client.SendSysMesage("You received +1 1H-Random items!");
                    client.Inventory.Remove(720145u, 1u, stream);
                    byte plus2 = 1;

                    var RndAccessory2 = Database.ItemType.ElitePlus1AllItems;
                    var Position2 = Program.GetRandom.Next(0, RndAccessory2.Count);
                    var ReceiveItem2 = RndAccessory2.ToArray()[Position2];
                    client.Inventory.Add(stream, ReceiveItem2, 1, (byte)plus2);
                    Game.MsgServer.MsgGameItem DataItem2 = new Game.MsgServer.MsgGameItem();
                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("[EnchantressBox] " + client.Player.Name + " You just gained a +" + plus2 + " " + Server.ItemsBase[ReceiveItem2].Name + " ! from [Random Item] #37 #37!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                    client.SendSysMesage($"[EnchantressBox] You just gained a +" + plus2 + " " + Server.ItemsBase[ReceiveItem2].Name + " ! from [EnchantressBox Reward]!");
                    break;
            }
        }

        [Npc(NpcID.Steed1Pack)]
        public static void Steed1Pack(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(3007287u, 1u, 1))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1Pack.");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("You can claim one from the three +1 Steeds (B) in this pack. Which one do you like?");
                    data.AddOption("+1 White Steed(B)", 1);
                    data.AddOption("+1 Brown Steed(B)", 5);
                    data.AddOption("+1 Black Steed(B)", 10);
                    data.AddOption("Nevermind", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 10:
                    data.AddText("Are you sure you want to claim a +1 Black Steed (B) from this pack?");
                    data.AddOption("Yes.", 11);
                    data.AddOption("No.", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 11:
                    client.SendSysMesage("You received +1 Black Steed (B)!");
                    client.Inventory.Remove(3007287u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 1, true, byte.MaxValue, 0, 150);
                    break;
                case 5:
                    data.AddText("Are you sure you want to claim a +1 Brown Steed (B) from this pack?");
                    data.AddOption("Yes.", 6);
                    data.AddOption("No.", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 6:
                    client.SendSysMesage("You received +1 Brown Steed (B)!");
                    client.Inventory.Remove(3007287u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 1, true, 0, 150, byte.MaxValue);
                    break;
                case 1:
                    data.AddText("Are you sure you want to claim a +1 White Steed (B) from this pack?");
                    data.AddOption("Yes.", 2);
                    data.AddOption("No.", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 2:
                    client.SendSysMesage("You received +1 White Steed (B)!");
                    client.Inventory.Remove(3007287u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 1, true, 150, byte.MaxValue, 0);
                    break;
                case 3:
                case 4:
                case 7:
                case 8:
                case 9:
                    break;
            }
        }

        [Npc(NpcID.GoldPrizeToken)]
        public static void GoldPrizeToken(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(723467u, 1u, 0))
            {
                client.CreateBoxDialog("Sorry, you don`t have a LordToken.");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey " + client.Player.Name + "! I`m the LordToken and I can provide you with the great Cups.");
                    data.AddOption("3 LordTokens for GoldPrize.", 1);
                    data.AddOption("1 LordToken for SilverPrize.", 2);
                    data.AddOption("Nevermind.", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.HaveSpace(1))
                    {
                        if (client.Inventory.Contain(723467u, 3u, 0))
                        {
                            string MSG;
                            MSG = "Congratulation to " + client.Player.Name + " ! he/she managed to open the legendary LordToken and received 1 GoldPrize.";
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(MSG, MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk).GetArray(stream));
                            client.Inventory.Remove(723467u, 3u, stream);
                            client.Inventory.Add(stream, 2100075u, 1, 0, 1, 0);
                        }
                        else
                            client.CreateBoxDialog("You dont have 3 Lord Tokens.");
                    }
                    else
                        client.CreateBoxDialog("Please make 1 more space in your inventory.");
                    break;
                case 2:
                    if (client.Inventory.HaveSpace(1))
                    {
                        if (client.Inventory.Contain(723467u, 1u, 0))
                        {
                            string MSG2;
                            MSG2 = "Congratulation to " + client.Player.Name + " ! he/she managed to open the LordToken and received 1 SilverPrize.";
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(MSG2, MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk).GetArray(stream));
                            client.Inventory.Remove(723467u, 1u, stream);
                            client.Inventory.Add(stream, 2100065u, 1, 0, 1, 0);
                        }
                        else
                            client.CreateBoxDialog("You dont have 1 Lord Tokens.");
                    }
                    else
                        client.CreateBoxDialog("Please make 1 more space in your inventory.");
                    break;
            }
        }



        [Npc(NpcID.FrozenGrottoGeneral)]
        public static void FrozenGrottoGeneral(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (client.Player.Level < 28)
                    {
                        data.AddText("You can get the monster hunter quest from the TC Captain now! It`s a great place for you to level up. Here is a steed to");
                        data.AddText("~take you there!");
                        data.AddOption("Okay,~thanks.", 1);
                        data.AddOption("I~have~no~interest.");
                        data.AddAvatar(57);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Level < 48)
                    {
                        data.AddText("You are able to take the quest from the PC Captain now! You can level up more quickly there. Here is a steed to take you there!");
                        data.AddOption("Okay,~thanks.", 2);
                        data.AddOption("I~have~no~interest.");
                        data.AddAvatar(57);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Level < 68)
                    {
                        data.AddText("You`d better take the quests from the AC Captain. It`s the right place for you to level up. Here is a steed to take you");
                        data.AddText("~there!");
                        data.AddOption("Okay,~thanks.", 3);
                        data.AddOption("I~have~no~interest.");
                        data.AddAvatar(57);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Level < 88)
                    {
                        data.AddText("You are powerful enough to take the quests from the DC Captain now! Here is a steed to take you there!");
                        data.AddOption("Okay,~thanks.", 4);
                        data.AddOption("I~have~no~interest.");
                        data.AddAvatar(57);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Level < 103)
                    {
                        data.AddText("You are powerful now, and you are able to take the quests from the BI Captain! He is in need of your help! Here is a steed to");
                        data.AddText("~take you there!");
                        data.AddOption("Okay,~thanks.", 5);
                        data.AddOption("I~have~no~interest.");
                        data.AddAvatar(57);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Level < 120)
                    {
                        data.AddText("You are strong enough to kill the monsters in Mystic Castle. Why not take a quest from MC Captain to level up quickly? Here");
                        data.AddText("~is a steed to take you there.");
                        data.AddOption("Okay,~thanks.", 6);
                        data.AddOption("I~have~no~interest.");
                        data.AddAvatar(57);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("Cloud Saint in Market (291,224) is looking for the heroes to help him exterminate the monsters. If you can finish the quest,");
                        data.AddText("~you will receive 5 EXP Balls as rewards!");
                        data.AddOption("I~see.");
                        data.AddAvatar(57);
                        data.FinalizeDialog();
                    }
                    break;
                case 6:
                    client.Teleport(85, 321, 1000u);
                    break;
                case 5:
                    client.Teleport(792, 571, 1015u);
                    break;
                case 4:
                    client.Teleport(483, 634, 1000u);
                    break;
                case 3:
                    client.Teleport(571, 621, 1020u);
                    break;
                case 2:
                    client.Teleport(233, 260, 1011u);
                    break;
                case 1:
                    client.Teleport(311, 346, 1002u);
                    break;
            }
        }



        [Npc(NpcID.DrYinYang)]
        public static void DrYinYang(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you want to change your gender for a new life, I can help you. Before making the");
                    data.AddText("~magic of gender reassignment works, you need to pay 20,000,000 GOLD, and make sure you`ve understood");
                    data.AddText("~the rules and procedures about the reassignment.");
                    data.AddOption("Please~change~my~gender,~now.", 1);
                    data.AddOption("What~else~should~I~know?", 2);
                    data.AddOption("Not~interested.", byte.MaxValue);
                    data.AddAvatar(218).FinalizeDialog();
                    break;
                case 3:
                    data.AddText("If you want to change your gender for a new life, I can help you. Before making the");
                    data.AddText("~magic of gender reassignment works, you need to pay x1 DragonBallScroll, and make sure you`ve understood");
                    data.AddText("~the rules and procedures about the reassignment.");
                    data.AddOption("Please~change~my~gender,~now.", 1);
                    data.AddOption("What~else~should~I~know?", 2);
                    data.AddOption("Not~interested.", byte.MaxValue);
                    data.AddAvatar(218).FinalizeDialog();
                    break;
                case 1:
                    {
                        if (client.Player.Spouse != "None")
                        {
                            data.AddText("You`re married. To change your gender, you need to get a divorce, first.");
                            data.AddOption("Okay.", byte.MaxValue);
                            data.AddAvatar(218).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(720028, 1))
                        {
                            if (!client.Equipment.FreeEquip(Flags.ConquerItem.Garment) || !client.Equipment.FreeEquip(Flags.ConquerItem.AleternanteGarment))
                            {
                                data.AddText("Please remove your garment.");
                                data.AddOption("Okay.", byte.MaxValue);
                                data.AddAvatar(218).FinalizeDialog();
                                break;
                            }
                            if (Core.IsBoy(client.Player.Body))
                            {
                                ushort typ2;
                                typ2 = (ushort)((int)client.Player.Body % 10);
                                switch (typ2)
                                {
                                    case 3:
                                        typ2 = 1;
                                        break;
                                    case 4:
                                        typ2 = 2;
                                        break;
                                }
                                client.Inventory.Remove(720028, 1, stream);
                                client.Player.Body = (ushort)(2000 + typ2);
                                client.Player.SendUpdate(stream, client.Player.Mesh, MsgUpdate.DataType.Mesh);
                                client.Player.View.ReSendView(stream);
                            }
                            else
                            {
                                ushort typ;
                                typ = (ushort)((int)client.Player.Body % 10);
                                switch (typ)
                                {
                                    case 1:
                                        typ = 3;
                                        break;
                                    case 2:
                                        typ = 4;
                                        break;
                                }
                                client.Inventory.Remove(720028, 1, stream);
                                client.Player.Body = (ushort)(1000 + typ);
                                client.Player.SendUpdate(stream, client.Player.Mesh, MsgUpdate.DataType.Mesh);
                                client.Player.View.ReSendView(stream);
                            }
                            if (client.Player.Nobility != null)
                            {
                                client.Player.Nobility.Gender = client.Player.GetGender;
                                client.Player.Nobility.Mesh = client.Player.Mesh;
                            }
                            if (client.Player.MyGuild != null && client.Player.MyGuildMember != null)
                                client.Player.MyGuildMember.Mesh = client.Player.Mesh;
                            if (client.ArenaStatistic != null)
                                client.ArenaStatistic.Mesh = client.Player.Mesh;
                            if (client.TeamArenaStatistic != null)
                                client.TeamArenaStatistic.Mesh = client.Player.Mesh;
                            if (client.Player.OnFairy)
                            {
                                client.Player.FairySpawn.Mode = MsgTransformFairy.Action.Dezactive;
                                client.Player.View.SendView(stream.TransformFairyCreate(MsgTransformFairy.Action.Dezactive, client.Player.FairySpawn.FairyType, client.Player.FairySpawn.UID), true);
                                client.Player.OnFairy = false;
                                client.Player.FairySpawn = default(MsgTransformFairy);
                            }
                            MsgMessage messaj;
                            messaj = new MsgMessage(client.Player.Name + " changed the gender.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.Talk);
                            Program.SendGlobalPackets.Enqueue(messaj.GetArray(stream));
                        }
                        else
                        {
                            data.AddText("Gender reassignment requires x1 DragonBall. Make sure you have enough resources with you.");
                            data.AddOption("Okay.", byte.MaxValue);
                            data.AddAvatar(218).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    data.AddText("To make gender reassignment as simple as possible, I want you to be single, not married. Make sure you`ve");
                    data.AddText("~properly handled with your clan and guild affairs. After the reassignment, your name will be removed");
                    data.AddText("~from the Charm ranking, and your garment will be put into your inventory. All in all, you need to carefully");
                    data.AddOption("I~want~to~change~my~gender.", 3);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(218).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.NameRegister)]
        public unsafe static void NameRegister(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 1:
                    if (Option == 1)
                    {
                        if (client.Player.Money < ServerKernel.NAME_CHANGE)
                        {
                            data.AddText("Sorry, but you don`t have enough GOLD.");
                            data.AddOption("Okay.", byte.MaxValue);
                            data.AddAvatar(31).FinalizeDialog();
                            break;
                        }

                        data.Text("Please enter your new In Game Name!");
                        data.AddInput("Here:", 2);
                        data.Option("Alright.", byte.MaxValue);
                        data.AddAvatar(1);
                        data.FinalizeDialog();
                        //if (client.Player.Money >= ServerKernel.NAME_CHANGE)
                        //{
                        //    ActionQuery actionQuery;
                        //    actionQuery = default(ActionQuery);
                        //    actionQuery.Type = ActionType.OpenDialog;
                        //    actionQuery.ObjId = client.Player.UID;
                        //    actionQuery.dwParam = 489u;
                        //    actionQuery.wParam1 = client.Player.X;
                        //    actionQuery.wParam2 = client.Player.Y;
                        //    ActionQuery action;
                        //    action = actionQuery;
                        //    client.Send(stream.ActionCreate(&action));
                        //    Math.Max(0, Server.NameChangeCount(client.Player.VipLevel) - client.Player.NameEditCount);
                        //    client.Send(stream.NameChangeCreate(MsgNameChange.ActionID.DialogInfo, client.Player.NameEditCount, Server.NameChangeCount(client.Player.VipLevel), client.Player.Name));
                        //}
                        //else
                        //{
                        //    data.AddText("At your service! Oh, no... I`m sorry. You`d better check your bag, again. You don`t have enough CPs to rename yourself. It takes " + ServerKernel.NAME_CHANGE.ToString("0,0") + " ConquerMoney or 1 DragonBallScroll, and I`m not allowed to offer any discounts.");
                        //    data.AddOption("Rules~are~rules.~I`ll~wait.", byte.MaxValue);
                        //    data.AddAvatar(31).FinalizeDialog();
                        //}
                    }
                    break;
                case 2:
                    if (Option == 2)
                    {
                        string Name = Input;

                        if (client.Player.Money < ServerKernel.NAME_CHANGE)
                            break;
                        if (Name != null && Name != "" && Name.Length >= 4 && Program.NameStrCheck(Name) && client.Player.NameEditCount < 5 && !Database.Server.NameUsed.Contains<int>(Name.GetHashCode()))
                        {
                            client.Player.NameEditCount += 1;
                            client.Send(stream.NameChangeCreate(MsgNameChange.ActionID.Success, client.Player.NameEditCount, 5, Name));

                            MsgMessage messaj = new MsgMessage(client.Player.Name + " changed the name to be " + Name + " .The new name will be registered, immediately.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.System);

                            Console.WriteLine(client.Player.Name + ", Changed He's/Hers Name to " + Name + ".");
                            Program.SendGlobalPackets.Enqueue(messaj.GetArray(stream));

                            Role.Instance.Nobility Nobility;
                            if (Program.NobilityRanking.TryGetValue(client.Player.UID, out Nobility))
                            {
                                Nobility.Name = Name;
                                client.Send(stream.NobilityIconCreate(Nobility));
                            }


                            if (client.Player.MyGuild != null && client.Player.MyGuildMember != null)
                            {
                                client.Player.MyGuildMember.Name = Name;
                                if (client.Player.MyGuildMember.Rank == Role.Flags.GuildMemberRank.GuildLeader)
                                {
                                    client.Player.MyGuild.Info.LeaderName = Name;
                                }
                            }
                            if (client.Player.MyClan != null && client.Player.MyClanMember != null)
                            {
                                client.Player.MyClanMember.Name = Name;
                                if (client.Player.MyClanMember.Rank == Role.Instance.Clan.Ranks.Leader)
                                    client.Player.MyClan.LeaderName = Name;
                            }
                            if (client.ArenaStatistic != null)
                                client.ArenaStatistic.Name = Name;
                            if (client.TeamArenaStatistic != null)
                                client.TeamArenaStatistic.Name = Name;
                            if (client.Player.Flowers != null)
                            {
                                foreach (var flower in client.Player.Flowers)
                                    if (flower != null)
                                        flower.Name = Name;
                            }

                            client.Player.Name = Name;
                            client.Player.View.ReSendView(stream);

                            if (client.Player.Spouse != null)
                            {
                                Client.GameClient spouse;
                                if (Database.Server.GamePoll.TryGetValue(client.Player.SpouseUID, out spouse))
                                {
                                    spouse.Player.Spouse = Name;
                                    spouse.Player.SendString(stream, MsgStringPacket.StringID.Spouse, false, Name);
                                }
                                else
                                {
                                    client.ClientFlag |= Client.ServerFlag.UpdateSpouse;
                                    Database.ServerDatabase.LoginQueue.Enqueue(client);
                                }
                            }
                            if (!client.Player.Name.Contains("[KN]"))
                            {
                                client.Player.Money -= ServerKernel.NAME_CHANGE;
                            }
                            lock (Database.Server.NameUsed)
                                Database.Server.NameUsed.Add(Name.GetHashCode());

                            try
                            {
                                Role.Instance.Associate.MyAsociats MyAsociation;
                                if (Role.Instance.Associate.Associates.TryGetValue(client.Player.UID, out MyAsociation))
                                {
                                    foreach (var table in MyAsociation.Associat.Values)
                                    {
                                        if (table == null)
                                            continue;
                                        if (table.Values == null)
                                            continue;
                                        foreach (var _ass in table.Values)
                                        {
                                            if (_ass == null)
                                                continue;
                                            Role.Instance.Associate.MyAsociats associat;
                                            if (Role.Instance.Associate.Associates.TryGetValue(_ass.UID, out associat))
                                            {
                                                foreach (var _table in associat.Associat)
                                                {

                                                    if (_table.Value == null)
                                                        continue;
                                                    Role.Instance.Associate.Member my_relation;
                                                    if (_table.Value.TryGetValue(client.Player.UID, out my_relation))
                                                        my_relation.Name = Name;
                                                    if (associat.MyClient != null)//online.
                                                    {
                                                        if (_table.Key == (byte)Role.Instance.Associate.Friends)
                                                        {
                                                            associat.MyClient.Send(stream.KnowPersonsCreate(MsgKnowPersons.Action.RemovePerson, client.Player.UID, true, "", (uint)client.Player.NobilityRank, client.Player.Body));
                                                            associat.MyClient.Send(stream.KnowPersonsCreate(MsgKnowPersons.Action.AddFriend, client.Player.UID, true, Name, (uint)client.Player.NobilityRank, client.Player.Body));
                                                        }
                                                        else if (_table.Key == (byte)Role.Instance.Associate.Partener)
                                                        {
                                                            associat.MyClient.Send(stream.TradePartnerCreate(client.Player.UID, MsgTradePartner.Action.BreakPartnership, true, 0, ""));
                                                            associat.MyClient.Send(stream.TradePartnerCreate(client.Player.UID, MsgTradePartner.Action.AddPartner, true, _ass.GetTimerLeft(), Name));
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }

                            }
                            catch (Exception e)
                            {
                                Console.SaveException(e);
                            }
                        }
                        else
                            client.Send(stream.NameChangeCreate(MsgNameChange.ActionID.NameTaken, 0, 0, Name));
                        //if (client.Player.Money >= ServerKernel.NAME_CHANGE)
                        //{
                        //    ActionQuery actionQuery;
                        //    actionQuery = default(ActionQuery);
                        //    actionQuery.Type = ActionType.OpenDialog;
                        //    actionQuery.ObjId = client.Player.UID;
                        //    actionQuery.dwParam = 489u;
                        //    actionQuery.wParam1 = client.Player.X;
                        //    actionQuery.wParam2 = client.Player.Y;
                        //    ActionQuery action;
                        //    action = actionQuery;
                        //    client.Send(stream.ActionCreate(&action));
                        //    Math.Max(0, Server.NameChangeCount(client.Player.VipLevel) - client.Player.NameEditCount);
                        //    client.Send(stream.NameChangeCreate(MsgNameChange.ActionID.DialogInfo, client.Player.NameEditCount, Server.NameChangeCount(client.Player.VipLevel), client.Player.Name));
                        //}
                        //else
                        //{
                        //    data.AddText("At your service! Oh, no... I`m sorry. You`d better check your bag, again. You don`t have enough CPs to rename yourself. It takes " + ServerKernel.NAME_CHANGE.ToString("0,0") + " ConquerMoney or 1 DragonBallScroll, and I`m not allowed to offer any discounts.");
                        //    data.AddOption("Rules~are~rules.~I`ll~wait.", byte.MaxValue);
                        //    data.AddAvatar(31).FinalizeDialog();
                        //}
                    }
                    break;
                case 0:
                    data.AddText("Good day! If you want to turn a new page in your life, you can pay me " + ServerKernel.NAME_CHANGE.ToString("0,0") + " Gold to get a new name. Your new name will be registered, immediately.");
                    data.AddOption("Okay,~here`s~my~Gold!", 1);
                    data.AddOption("Reset edit times", 10);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 10:
                    data.AddText("Do you want to reset your name for " + ServerKernel.NAME_CHANGE_RESET_LIMIT.ToString("0,0") + " Conquer Points ?");
                    data.AddOption("Yes.", 11).AddOption("No , thanks !", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 11:
                    {
                        int value;
                        value = ServerKernel.NAME_CHANGE_RESET_LIMIT;
                        if (client.Player.Money >= value)
                        {
                            client.Player.Money -= value;
                            client.Player.NameEditCount = 0;
                            data.AddText("Your name reset was finished succesfully!");
                            data.AddOption("thank you", byte.MaxValue);
                            data.AddAvatar(31).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.");
                            data.AddOption("Okay.", byte.MaxValue);
                            data.AddAvatar(31).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [Npc(NpcID.Shelby)]
        public static void Shelby(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("We~hope~all~can~help~each~other.~If~you~power~level~the~newbies,~we~may~reward~you~Experience~or~meteors.~Are~you~interested?");
                    data.AddOption("Tell~me~more~details.", 1);
                    data.AddOption("Check~my~virtue~points.", 5);
                    data.AddOption("Claim~Prize.", 6);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("If~you~are~above~level~70~and~try~to~power~level~the~newbies~(at~least~20~levels~lower~than~you),~you~may~gain~virtue~points.");
                    data.AddOption("What~are~the~virtue~points?", 2);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("The~more~newbies~you~power~level,~the~more~virtue~points~you~gain.~I~shall~give~you~a~good~reward~for~a~certain~virtue~points.");
                    data.AddOption("How~can~I~gain~virtue~points?", 3);
                    data.AddOption("What~prize~can~I~expect?", 4);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 3:
                    data.AddText("Once~the~newbies~are~one~level~up,~the~team~captain~can~gain~virtue~points~accordingly.");
                    data.AddOption("I~see.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 4:
                    data.AddText("I~shall~reward~you~exp.~of~equivalent~to~an~ExpBall~for~15,000~virtue~points~or~a~meteor~for~5000~virtue~points or DragonBall for 30,000 virtue~points.");
                    data.AddOption("I~see.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 5:
                    data.AddText("Your~current~virtue~points~are~" + client.Player.VirtutePoints + ",~please~try~to~gain~more.");
                    data.AddOption("Thanks.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 6:
                    data.AddText("What~prize~do~you~prefer?");
                    data.AddOption("Meteor[10,000 VirtuePoint].", 10);
                    data.AddOption("Exp[15,000 VirtuePoint].", 11);
                    data.AddOption("DragonBall[300,000 VirtuePoint].", 12);
                    data.AddOption("Let~me~think~it~over", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 10:
                    if (client.Player.VirtutePoints >= 10000)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.VirtutePoints -= 10000u;
                            client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                            client.Inventory.Add(stream, 1088001u, 1, 0, 0, 0);
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", byte.MaxValue).AddAvatar(7);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~you~do~not~have~the~required~virtue~points.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(7).FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Level >= 130)
                    {
                        data.AddText("Only the characters below level 130 can exchange the virtue points for exp. You may find Simon");
                        data.AddText(" (Twin City 393,235) and spend 2,000 virtue points to hunt the treasure in the Labyrinth.");
                        data.AddOption("Wow.~So~cool.", byte.MaxValue);
                        data.AddAvatar(7).FinalizeDialog();
                    }
                    else if (client.Player.VirtutePoints >= 15000)
                    {
                        client.Player.VirtutePoints -= 15000u;
                        client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                        client.GainExpBall(600.0, true, Flags.ExperienceEffect.angelwing);
                    }
                    else
                    {
                        data.AddText("Sorry,~you~do~not~have~the~required~virtue~points.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(7).FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.VirtutePoints >= 300000)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Player.VirtutePoints -= 300000;
                            client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                            client.Inventory.Add(stream, 1088000, 1, 0, 0, 0);
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory");
                            data.AddOption("Let me check.", byte.MaxValue);
                            data.AddAvatar(7);
                            data.FinalizeDialog();
                        }
                    }
                    else
                        data.AddText("Sorry,~you~do~not~have~the~required~virtue~points.").AddOption("I~see.", byte.MaxValue).AddAvatar(7)
                            .FinalizeDialog();
                    break;
                case 7:
                case 8:
                case 9:
                    break;
            }
        }

        [Npc(NpcID.TcBoxer)]
        public static void TcBoxer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ");
                    data.AddText(" not consume any durability,life and mana. Do you want me to teleport you there?");
                    data.AddText("It is free for my guild members, and 1000 silver for others.");
                    data.AddOption("Please teleport me there.", 1);
                    data.AddOption("Just passing by.", byte.MaxValue);
                    data.AddAvatar(8).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);

                        client.Teleport(226, 218, 1039u);
                        data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ");
                        data.AddText(" level is lower than your.");
                        data.AddOption("I see.", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You do not have 1000 silvers with you.");
                        data.AddOption("oh, sorry", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.BirdBoxer)]
        public static void BirdBoxer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ");
                    data.AddText(" not consume any durability,life and mana. Do you want me to teleport you there?");
                    data.AddText("It is free for my guild members, and 1000 silver for others.");
                    data.AddOption("Please teleport me there.", 1);
                    data.AddOption("Just passing by.", byte.MaxValue);
                    data.AddAvatar(8).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Teleport(226, 218, 1039);
                        data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ");
                        data.AddText(" level is lower than your.");
                        data.AddOption("I see.", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You do not have 1000 silvers with you.");
                        data.AddOption("oh, sorry", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.PheonixBoxer)]
        public static void PheonixBoxer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ");
                    data.AddText(" not consume any durability,life and mana. Do you want me to teleport you there?");
                    data.AddText("It is free for my guild members, and 1000 silver for others.");
                    data.AddOption("Please teleport me there.", 1);
                    data.AddOption("Just passing by.", byte.MaxValue);
                    data.AddAvatar(8).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Teleport(226, 218, 1039);
                        data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ");
                        data.AddText(" level is lower than your.");
                        data.AddOption("I see.", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You do not have 1000 silvers with you.");
                        data.AddOption("oh, sorry", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.ApeBoxer)]
        public static void ApeBoxer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ");
                    data.AddText(" not consume any durability,life and mana. Do you want me to teleport you there?");
                    data.AddText("It is free for my guild members, and 1000 silver for others.");
                    data.AddOption("Please teleport me there.", 1);
                    data.AddOption("Just passing by.", byte.MaxValue);
                    data.AddAvatar(8).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Teleport(226, 218, 1039);
                        data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ");
                        data.AddText(" level is lower than your.");
                        data.AddOption("I see.", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You do not have 1000 silvers with you.");
                        data.AddOption("oh, sorry", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.DesertBoxer)]
        public static void DesertBoxer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you are level 20 or above, you may level up at the training grounds.it does ");
                    data.AddText(" not consume any durability,life and mana. Do you want me to teleport you there?");
                    data.AddText("It is free for my guild members, and 1000 silver for others.");
                    data.AddOption("Please teleport me there.", 1);
                    data.AddOption("Just passing by.", byte.MaxValue);
                    data.AddAvatar(8).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Teleport(226, 218, 1039);
                        data.AddText("When you gain experience at the training ground, you can only attack the dummies or stakes which ");
                        data.AddText(" level is lower than your.");
                        data.AddOption("I see.", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You do not have 1000 silvers with you.");
                        data.AddOption("oh, sorry", byte.MaxValue);
                        data.AddAvatar(8).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.PkWarQuit)]
        public static void PkWarQuit(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello , you're the last player alive?");
                    data.AddOption("Yes", 1);
                    data.AddOption("Teleport~to~Twin~City.", 2);
                    data.AddOption("Ah. wait", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                    break;
                case 1:
                    if (MsgSchedules.PkWar.IsFinished() && MsgSchedules.PkWar.Wasstarted)
                    {
                        if (MsgSchedules.PkWar.TheLastPlayer())
                        {
                            if (client.Inventory.HaveSpace(11))
                            {
                                MsgSchedules.PkWar.GiveReward(client, stream);
                                break;
                            }
                            data.AddText("Please make 11 more spaces in your inventory");
                            data.AddOption("Let me check.", byte.MaxValue);
                            data.AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, the war is not finished, or other players are still alive.");
                            data.AddOption("Ah ok", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry, the war is not finished");
                        data.AddOption("Ah ok", byte.MaxValue);
                        data.AddAvatar(154);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("You wana to teleport back to TwinCity? You are sure?");
                    data.AddOption("Yes", 3);
                    data.AddOption("Ah no.", byte.MaxValue);
                    data.AddAvatar(154);
                    data.FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(451, 294, 1002u);
                    break;
            }
        }

        [Npc(NpcID.PkWar)]
        public static void PkWar(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            DayOfWeek day;
            day = ISchedule.Schedules[ISchedule.EventID.WeeklyPK].DayOfWeek;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.WeeklyPK].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.WeeklyPK].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText($"Hello there! The Pk War will take place during {Hour}:{minute} on {day},");
                    data.AddText($"and you will be admitted into tournament during {Hour}:{minute}, Come! You will be impressed.");
                    data.AddOption("Sign~me~up", 1);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(16).FinalizeDialog();
                    break;
                case 1:
                    if (MsgSchedules.PkWar.AllowJoin())
                    {
                        client.Teleport(87, 88, 1508u);
                        break;
                    }
                    data.AddText($"Please sign up between {Hour}:{minute} every {day}.");
                    data.AddOption("I see. ", byte.MaxValue);
                    data.AddAvatar(16).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.GodlyArtisan)]
        public static void GodlyArtisan(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey, I`m proficient in repairing max Durability but you need to pay x1 DragonBall and 2,000,000 GOLD. What items do you wana me to repair?");
                    //data.AddOption("Repair the Talisman", 20);
                    data.AddOption("HeadWaer", 1);
                    data.AddOption("Necklace", 2);
                    data.AddOption("Coat", 3);
                    data.AddOption("Weapon", 4);
                    data.AddOption("Ring/Heavy Ring/Bracelet", 6);
                    data.AddOption("Boots", 8);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    return;
                case 20:
                    data.AddText("What Talisman do you want me to repair?");
                    data.AddOption("Attack Talisman", 11);
                    data.AddOption("Defense Talisman", 12);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    return;
            }
            if (client.Equipment.TryGetEquip((Flags.ConquerItem)Option, out var GameItem))
            {
                ItemType.DBItem DBItem;
                //if (GameItem.Durability < GameItem.MaximDurability)
                //{
                //    data.AddText("Sorry, please ask a shopkeeper to repair this item first. I only repair the max durability.");
                //    data.AddOption("I see. ", byte.MaxValue);
                //    data.AddAvatar(63);
                //    data.FinalizeDialog();
                //}
                //else
                if (!client.Inventory.Contain(1088000, 1) || client.Player.Money < 2000000)
                {
                    data.AddText("Sorry, you dont have Dragonball and 2,000,000 GOLD. I only repair if you pay the price.");
                    data.AddOption("I see. ", byte.MaxValue);
                    data.AddAvatar(63);
                    data.FinalizeDialog();
                    return;
                }

                if (Server.ItemsBase.TryGetValue(GameItem.ITEM_ID, out DBItem))
                {
                    if (GameItem.Durability == DBItem.Durability)
                    {
                        data.AddText("The durability of this item is in good condition");
                        data.AddOption("I see. ", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                        return;
                    }
                    client.Inventory.Remove(1088000, 1, stream);
                    client.Player.Money -= 2000000;
                    GameItem.Durability = (GameItem.MaximDurability = DBItem.Durability);
                    GameItem.Mode = Flags.ItemMode.Update;
                    GameItem.Send(client, stream);
                    data.AddText("You durability was repaired successfully.");
                    data.AddOption("Thank you.", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                }
            }
            else
            {
                data.AddText("Sorry,you do not wear this item. Please equip first.");
                data.AddOption("I see. ", byte.MaxValue);
                data.AddAvatar(63).FinalizeDialog();
            }
        }

        [Npc(NpcID.EquipmentBlacksmith)]
        private unsafe static void EquipmentBlacksmith(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            ItemType.DBItem value2;
            switch (Option)
            {
                case 0:
                    dialog.AddText("Hello! I can always succeed in upgrading item quality as I`ve penetrated the mystery of their powers. But I`ll ask for a few more dragon balls than Artisan Wind. I can also upgrade or lower item levels. How can I help you?");
                    //dialog.AddOption("Upgrade~Quality", 1);
                    dialog.AddOption("Upgrade~item~level.", 30);
                    //dialog.AddOption("Upgrade~Equipment~level (Quickly).", 130);
                    //dialog.AddOption("Buy Uptoken for Gold.", 111);
                    dialog.AddOption("Just passing by.");
                    dialog.AddAvatar(50).FinalizeDialog();
                    break;
                case 111:
                    dialog.AddText("Uptoken worth 7,000,000 GOLD.");
                    dialog.AddOption("Give me Uptoken and take my gold!", 112);
                    dialog.AddAvatar(50).FinalizeDialog();
                    break;
                case 112:
                    if (client.Player.Money >= 7000000)
                    {
                        client.Player.Money -= 7000000;
                        client.Inventory.Add(stream, 720310, 1, 0, 0, 0);//token
                        dialog.AddText("Thank you for a smooth transaction!");
                        dialog.AddOption("No problem!", 112);
                        dialog.AddAvatar(50).FinalizeDialog();
                    }
                    else
                    {
                        dialog.AddText("Go hunt for and get gold to buy uptoken!");
                        dialog.AddOption("Ops! Sorry");
                        dialog.AddAvatar(50).FinalizeDialog();
                    }
                    break;
                case 30:
                    dialog.AddText("I see. Upgrading an item`s level makes it more powerful, but also harder to use, increasing the item level prerequisite.");
                    dialog.AddOption("HeadGear", 31);
                    dialog.AddOption("Necklace.", 32);
                    dialog.AddOption("Armor.", 33);
                    dialog.AddOption("Right~Weapon.", 34);
                    dialog.AddOption("Left~Weapon.", 35);
                    dialog.AddOption("Ring.", 36);
                    dialog.AddOption("Boots.", 38);
                    //dialog.AddOption("Upgrade~shield~level.", 35);
                    dialog.AddAvatar(50).FinalizeDialog();
                    break;
                case 130:
                    dialog.AddText("I see. Upgrading an item`s level makes it more powerful, but also harder to use, increasing the item level prerequisite.");
                    dialog.AddOption("HeadWaer", 131);
                    dialog.AddOption("Necklace.", 132);
                    dialog.AddOption("Armor", 133);
                    dialog.AddOption("Right~Weapon.", 134);
                    //dialog.AddOption("Upgrade~Left~weapon~level.", 135);
                    dialog.AddOption("Ring.", 136);
                    dialog.AddOption("Boots.", 138);
                    dialog.AddOption("Shield.", 135);
                    dialog.AddAvatar(50).FinalizeDialog();
                    break;

                case 131:
                case 132:
                case 133:
                case 134:
                case 135:
                case 136:
                case 138:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 130), out var item6))
                        {
                            if (item6.Bound == 1)
                            {
                                dialog.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            uint _new2;
                            _new2 = Server.ItemsBase[Server.ItemsBase.QuickUpdateItem(item6.ITEM_ID, client.Player.Level)].Level;
                            uint _old;
                            _old = Server.ItemsBase[item6.ITEM_ID].Level;
                            uint cost4;
                            cost4 = _new2 - _old;
                            if (cost4 != 0)
                            {
                                dialog.AddText("You have to give me " + cost4 * ServerKernel.QUICK_UPGRADE_ITEM_LEVEL_COST + " cps to upgrade this item's Maximum your level.");
                                dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(50).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 141:
                case 142:
                case 143:
                case 144:
                case 145:
                case 146:
                case 148:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 140), out var item3))
                        {
                            if (item3.Bound == 1)
                            {
                                dialog.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            if (Database.ItemType.IsShield(item3.ITEM_ID) && Server.ItemsBase[item3.ITEM_ID].Level >= 120)
                            {
                                dialog.AddText("Sorry, this item not allow to upgrade your its already level 120 items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            int _new;
                            _new = Server.ItemsBase[Server.ItemsBase.QuickUpdateItem(item3.ITEM_ID, client.Player.Level)].Level;
                            int _old2;
                            _old2 = Server.ItemsBase[item3.ITEM_ID].Level;
                            int cost5;
                            cost5 = _new - _old2;
                            if (cost5 == 0)
                                break;
                            cost5 *= ServerKernel.QUICK_UPGRADE_ITEM_LEVEL_COST;
                            if (client.Player.ConquerPoints < cost5)
                            {
                                dialog.AddText("You do not have the required " + cost5 + " cps to upgrade Lev" + _new + ".!");
                                dialog.AddOption("Sorry", byte.MaxValue);
                                dialog.AddAvatar(50).FinalizeDialog();
                            }
                            else
                            {
                                if (!Server.ItemsBase.TryGetValue(item3.ITEM_ID, out value2))
                                    break;
                                uint nextItemId3;
                                nextItemId3 = Server.ItemsBase.QuickUpdateItem(item3.ITEM_ID, client.Player.Level);
                                if (!ItemType.Equipable(nextItemId3, client, true) || nextItemId3 == item3.ITEM_ID)
                                {
                                    client.CreateBoxDialog("You can`t update this item.");
                                    break;
                                }
                                int value;
                                value = cost5;
                                if (client.Player.ConquerPoints >= value)//bahaa
                                {
                                    client.Player.ConquerPoints -= value;
                                    item3.ITEM_ID = Server.ItemsBase.QuickUpdateItem(item3.ITEM_ID, client.Player.Level);
                                    item3.Mode = Flags.ItemMode.Update;
                                    item3.Send(client, stream);
                                    if (item3.Position != 0)
                                        client.Equipment.QueryEquipment(client.Equipment.Alternante);
                                    dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?");
                                    dialog.AddOption("Thanks~a~lot!");
                                    dialog.AddAvatar(50).FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 38:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 30), out var item4))
                        {
                            if (item4.Durability != item4.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            if (item4.Bound == 1)
                            {
                                dialog.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            if (Database.ItemType.IsShield(item4.ITEM_ID) && Server.ItemsBase[item4.ITEM_ID].Level >= 120)
                            {
                                dialog.AddText("Sorry, this item not allow to upgrade your its already level 120 items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            byte lvl;
                            lvl = Server.ItemsBase[item4.ITEM_ID].Level;
                            if (lvl < 120)
                            {
                                dialog.AddText("You have to talk MagicArtisan, i can't upgrade this item's level.");
                                //dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(50).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("You have to give me " + 1 + " DragonBall to upgrade this item's level.");
                                dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(50).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(50).FinalizeDialog();
                        }

                        break;

                    }
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:

                case 48:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 40), out var item5))
                        {
                            if (item5.Durability != item5.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            if (item5.Bound == 1)
                            {
                                dialog.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            byte lvl2;
                            lvl2 = Server.ItemsBase[item5.ITEM_ID].Level;
                            bool succesed;
                            if (lvl2 < 120)
                            {
                                dialog.AddText("You have to talk MagicArtisan, i can't upgrade this item's level.");
                                //dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(50).FinalizeDialog();
                                break;
                            }
                            int cost2;
                            int uptoken;
                            uptoken = 1;
                            cost2 = 1;
                            if (!client.Inventory.Contain(1088000, (byte)cost2, 0))
                            {
                                dialog.AddText("You have to give me " + cost2 + " DragonBall and " + uptoken + " Uptoken to upgrade this item's level.");
                                dialog.AddOption("Sorry", byte.MaxValue);
                                dialog.AddAvatar(50).FinalizeDialog();
                            }
                            else
                            {
                                if (!Server.ItemsBase.TryGetValue(item5.ITEM_ID, out value2))
                                    break;
                                uint nextItemId;
                                nextItemId = Server.ItemsBase.UpdateItem(item5.ITEM_ID, out succesed);
                                if (!ItemType.Equipable(nextItemId, client, true) || nextItemId == item5.ITEM_ID)
                                {
                                    client.CreateBoxDialog("You can`t update this item.");
                                    break;
                                }
                                item5.ITEM_ID = Server.ItemsBase.UpdateItem(item5.ITEM_ID, out succesed);
                                item5.Mode = Flags.ItemMode.Update;
                                item5.Send(client, stream);
                                client.Inventory.Remove(1088000, (byte)cost2, stream);
                                //client.Inventory.Remove(720310, (byte)cost2, stream);
                                if (item5.Position != 0)
                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);
                                dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?");
                                dialog.AddOption("Thanks~a~lot!");
                                dialog.AddAvatar(50).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [Npc(NpcID.MagicArtisan)]
        private unsafe static void MagicArtisan(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            ItemType.DBItem value2;
            switch (Option)
            {
                case 0:
                    dialog.AddText("Hello! I can always succeed in upgrading item quality as I`ve penetrated the mystery of their powers. But I`ll ask for a few more dragon balls than Artisan Wind. I can also upgrade or lower item levels. How can I help you?");
                    //dialog.AddOption("Upgrade~Quality", 1);
                    dialog.AddOption("Upgrade~item~level.", 30);
                    //dialog.AddOption("Upgrade~Equipment~level (Quickly).", 130);
                    //dialog.AddOption("Lower Equipment Level.", 3);
                    dialog.AddOption("Just passing by.");
                    dialog.AddAvatar(77).FinalizeDialog();
                    break;
                case 30:
                    dialog.AddText("I see. Upgrading an item`s level makes it more powerful, but also harder to use, increasing the item level prerequisite.");
                    dialog.AddOption("Headwear.", 31);
                    dialog.AddOption("Necklace.", 32);
                    dialog.AddOption("Armor.", 33);
                    dialog.AddOption("Weapon.", 34);
                    dialog.AddOption("Left~Weapon.", 35);
                    dialog.AddOption("Ring.", 36);
                    dialog.AddOption("Boots.", 38);
                    dialog.AddOption("Nothing.", 255);
                    dialog.AddAvatar(77).FinalizeDialog();
                    break;

                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 38:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 30), out var item4))
                        {
                            if (item4.Durability != item4.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                            if (item4.Bound == 1)
                            {
                                dialog.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                            byte lvl;
                            lvl = Server.ItemsBase[item4.ITEM_ID].Level;
                            var cost = Database.ItemType.GetUpEpLevelInfo(item4.ITEM_ID);
                            if (lvl < 120)
                            {
                                dialog.AddText("You have to give me " + cost + " meteors to upgrade this item's level.");
                                dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(77).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("You have to talk WeaponMaster, i can't upgrade this item's level.");
                                //dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(77).FinalizeDialog();
                        }
                        break;
                    }
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 48:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 40), out var item5))
                        {
                            if (item5.Durability != item5.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                            if (item5.Bound == 1)
                            {
                                dialog.AddText("Sorry, this item state is bound, you not allow to upgrade your bound items.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                            byte lvl2;
                            lvl2 = Server.ItemsBase[item5.ITEM_ID].Level;
                            bool succesed;
                            if (lvl2 < 120)
                            {
                                int cost3;
                                cost3 = ItemType.GetUpEpLevelInfo(item5.ITEM_ID);
                                if (!client.Inventory.CheckMeteors((byte)cost3, false, stream))
                                {
                                    dialog.AddText("You do not have the required " + cost3 + " Meteors to upgrade this item's level!");
                                    dialog.AddOption("Sorry", byte.MaxValue);
                                    dialog.AddAvatar(77).FinalizeDialog();
                                }
                                else
                                {
                                    if (!Server.ItemsBase.TryGetValue(item5.ITEM_ID, out value2))
                                        break;
                                    uint nextItemId2;
                                    nextItemId2 = Server.ItemsBase.UpdateItem(item5.ITEM_ID, out succesed);
                                    if (!ItemType.Equipable(nextItemId2, client, true))
                                    {
                                        client.CreateBoxDialog("You can`t update this item.");
                                        break;
                                    }
                                    item5.ITEM_ID = Server.ItemsBase.UpdateItem(item5.ITEM_ID, out succesed);
                                    item5.Mode = Flags.ItemMode.Update;
                                    item5.Failed = true;
                                    item5.SocketProcess = true;
                                    item5.Send(client, stream);
                                    client.Inventory.CheckMeteors((byte)cost3, true, stream);
                                    if (item5.Position != 0)
                                        client.Equipment.QueryEquipment(client.Equipment.Alternante);
                                    dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?");
                                    dialog.AddOption("Thanks~a~lot!");
                                    dialog.AddAvatar(77).FinalizeDialog();
                                }
                                break;
                            }
                            //int cost2;
                            //cost2 = 1;
                            //if (!client.Inventory.Contain(1088000u, (byte)cost2, 0))
                            //{
                            //    dialog.AddText("You do not have the required " + cost2 + " DragonBall to upgrade this item's level!");
                            //    dialog.AddOption("Sorry", byte.MaxValue);
                            //    dialog.AddAvatar(77).FinalizeDialog();
                            //}
                            else
                            {
                                dialog.AddText("You have to talk WeaponMaster, i can't upgrade this item's level.");
                                //dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(77).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    dialog.AddText("Which piece of equipment do you want to upgrade the quality of?");
                    dialog.AddOption("HeadWear.", 11);
                    dialog.AddOption("Necklace.", 12);
                    dialog.AddOption("Armor.", 13);
                    dialog.AddOption("Right~Weapon.", 14);
                    //dialog.AddOption("Left~Weapon.", 15);
                    dialog.AddOption("Ring/Heavy~Ring.", 16);
                    dialog.AddOption("Boots.", 18);
                    dialog.AddOption("Shield.", 15);
                    dialog.AddAvatar(77).FinalizeDialog();
                    break;
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 18:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 10), out var item))
                        {
                            if (item.ITEM_ID % 10u == 9)
                            {
                                dialog.AddText("Sorry, this item is a super one. There is no quality higher than this. It`s perfect!");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                            }
                            else if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("Please give me " + ItemType.GetUpEpQualityInfo(item.ITEM_ID) + " Dragon Balls to upgrade this item.");
                                dialog.AddOption("Sure.", (byte)(Option + 10));
                                dialog.AddOption("Never~mind.");
                                dialog.AddAvatar(77).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(77).FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 28:
                    {
                        if (client.Equipment.TryGetEquip((Flags.ConquerItem)(Option - 20), out var item2))
                        {
                            if (item2.ITEM_ID % 10u == 9)
                            {
                                dialog.AddText("Sorry, this item is a super one. There is no quality higher than this. It`s perfect!");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                            if (item2.Durability != item2.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                                break;
                            }
                            int cost;
                            cost = ItemType.GetUpEpQualityInfo(item2.ITEM_ID);
                            if (!client.Inventory.Contain(1088000, (byte)cost, 0))
                            {
                                dialog.AddText("You do not have the required " + cost + " DragonBalls to upgrade quality!");
                                dialog.AddOption("Sorry", byte.MaxValue);
                                dialog.AddAvatar(77).FinalizeDialog();
                            }
                            else if (!ItemType.UpQualityDB(item2.ITEM_ID, (uint)(cost + 1)))
                            {
                                dialog.AddText("Sorry,~I~cannot~upgrade~this~item.~You~either~don`t~have~the~required~items~or~your~level~isn`t~sufficient.");
                                dialog.AddOption("Oh,~I~see.~Farewell.");
                                dialog.AddAvatar(77).FinalizeDialog();
                            }
                            else if (client.Inventory.Remove(1088000, (byte)cost, stream))
                            {
                                if (item2.ITEM_ID % 10u < 5)
                                    item2.ITEM_ID += 5 - item2.ITEM_ID % 10u;
                                item2.ITEM_ID++;
                                item2.Mode = Flags.ItemMode.Update;
                                item2.Send(client, stream);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?");
                                dialog.AddOption("Thanks~a~lot!");
                                dialog.AddAvatar(77).FinalizeDialog();
                                if (item2.Position != 0)
                                    client.Equipment.QueryEquipment(client.Equipment.Alternante);
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.");
                            dialog.AddOption("Oh,~I~see.~Farewell.");
                            dialog.AddAvatar(77).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.DegradeEquip,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [Npc(NpcID.GWJail)]
        public static void GWJail(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            DateTime Now = DateTime.Now;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Welcome~in~GuildWar,~GuildArea~jail.~I~am~giving~jail~pardons~each~five~minutes.");
                    data.AddOption("huuuh??", 2);
                    data.AddOption("Lets~rock! ", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 2:
                    //if(MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                    //{
                    //    data.AddText("It~is~time~for~GuildWar~pardon~I~will~let~you~get~out~of~here.~Enjoy.");
                    //    data.AddOption("Cool~thx.", 3);
                    //    data.AddOption("I~wanna~stay.", byte.MaxValue);
                    //    data.AddAvatar(63).FinalizeDialog();
                    //}
                    //else 
                    if (MsgSchedules.GuildWar.Proces == ProcesType.Alive && ((Now.Minute >= 15 && Now.Minute <= 20) || (Now.Minute >= 30 && Now.Minute <= 35) || (Now.Minute >= 45 && Now.Minute <= 47)))
                    {
                        data.AddText("Its not time for Guild war pardon, you need to wait more time!.");
                        data.AddOption("I~wanna~stay.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("It~is~time~for~GuildWar~pardon~I~will~let~you~get~out~of~here.~Enjoy.");
                        data.AddOption("Cool~thx.", 3);
                        data.AddOption("I~wanna~stay.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case 3:
                    client.Teleport(428, 378, 1002u, 0u, true, true);
                    break;
                case 1:
                    break;
            }
        }

        [Npc(NpcID.SellItems)]
        public static void SellItems(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey how I can help you ? I`m Sell MoonBox for " + 200u + " ConquerPoints, Emerald for " + 100u + " ConquerPoints, EuxeniteOre for " + 20u + " ConquerPoints.");
                    data.AddOption("MoonBox", 1);
                    data.AddOption("Emerald", 2);
                    data.AddOption("EuxeniteOre", 3);
                    data.AddOption("Let~me~think.", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.HaveSpace(1))
                    {
                        int value2;
                        value2 = 200;
                        if (client.Player.ConquerPoints >= value2)
                            client.Player.ConquerPoints -= value2;
                        client.Inventory.Add(stream, 721080u, 1, 0, 0, 0);
                    }
                    else
                    {
                        data.AddText("Please make 1 space in your inventory.");
                        data.AddOption("Let~me~think.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Inventory.HaveSpace(1))
                    {
                        int value3;
                        value3 = 100;
                        if (client.Player.ConquerPoints >= value3)
                            client.Player.ConquerPoints -= value3;
                        client.Inventory.Add(stream, 1080001, 1, 0, 0, 0);
                    }
                    else
                    {
                        data.AddText("Please make 1 space in your inventory.");
                        data.AddOption("Let~me~think.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case 3:
                    if (client.Inventory.HaveSpace(1))
                    {
                        int value;
                        value = 20;
                        if (client.Player.ConquerPoints >= value)
                            client.Player.ConquerPoints -= value;
                        client.Inventory.Add(stream, 1072031u, 1, 0, 0, 0);
                    }
                    else
                    {
                        data.AddText("Please make 1 space in your inventory.");
                        data.AddOption("Let~me~think.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.MarketCpAdmin)]
        public static void MarketCpAdmin(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Do~you~know~how~I~desire~the~DragonBall?~I~would~like~to~pay~all~I~have~for~DragonBalls.~Would~you~like~to~exchange");
                    data.AddText("DragonBalls~for~CPs?~I~will~pay~you~215~CPs~for~a~DragonBall,~and~2150~CPs~for~a~DBScroll.~What~about~the~deal?");
                    data.AddOption("Exchange~a~DBScroll.", 1);
                    data.AddOption("Exchange~a~DragonBall.", 2);
                    data.AddOption("I~have~nothing.", 255);
                    data.AddAvatar(7);
                    data.FinalizeDialog();
                    break;

                case 1:
                    if (client.Inventory.Contain(720028, 1, 0))
                    {
                        client.Inventory.Remove(720028u, 1, stream);
                        int value;
                        value = 2150;
                        //if (value > 2150)
                        //    value = 0;
                        client.Player.ConquerPoints += value;
                        data.AddText("Congratulations!You~have~got~2150~CPs~in~your~inventory");
                        data.AddOption("thank you.", byte.MaxValue);
                        data.AddAvatar(7);
                        data.FinalizeDialog();
                        ServerKernel.Log.AppendGameLog(client.Player.Name + " has trading DBScroll for 2150 CPs to MarketCPAdmin");

                    }
                    else
                    {
                        data.AddText("Where~is~your~DBScroll?");
                        data.AddOption("Er,~sorry.~I'm not have DBScroll.", byte.MaxValue);
                        data.AddAvatar(7);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Inventory.Contain(1088000u, 1u, 0))
                    {
                        client.Inventory.Remove(1088000u, 1u, stream);
                        int value2;
                        value2 = 215;
                        client.Player.ConquerPoints += value2;
                        //if (value2 > 215)
                        //    value2 = 0;
                        data.AddText("Congratulations!You~have~got~215~CPs~in~your~inventory");
                        data.AddOption("thank you.", byte.MaxValue);
                        data.AddAvatar(7);
                        data.FinalizeDialog();
                        ServerKernel.Log.AppendGameLog(client.Player.Name + " has trading DB for 215 CPs to MarketCPAdmin");
                    }
                    else
                    {
                        data.AddText("Where~is~your~DragonBall?");
                        data.AddOption("Er,~sorry.~I'm not have Dragon Ball.", byte.MaxValue);
                        data.AddAvatar(7);
                        data.FinalizeDialog();
                    }
                    break;

            }
        }

        [Npc(NpcID.Steed1)]
        public static void Steed1(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(728525u, 1u, 0))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1.");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello. You can chose a horse: black, brown or white.");
                    data.AddOption("Black horse", 1);
                    data.AddOption("Brown horse", 2);
                    data.AddOption("White horse", 3);
                    data.AddOption("Nevermind", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 1:
                    client.Inventory.Remove(728525u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 1, false, byte.MaxValue, 0, 150);
                    break;
                case 2:
                    client.Inventory.Remove(728525u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 1, false, 0, 150, byte.MaxValue);
                    break;
                case 3:
                    client.Inventory.Remove(728525u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 1, false, 150, byte.MaxValue, 0);
                    break;
            }
        }

        [Npc(NpcID.Steed3)]
        public static void Steed3(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(728526u, 1u, 0))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1.");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello. You can chose a horse: black, brown or white.");
                    data.AddOption("Black horse", 1);
                    data.AddOption("Brown horse", 2);
                    data.AddOption("White horse", 3);
                    data.AddOption("Nevermind", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 1:
                    client.Inventory.Remove(728526u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 3, false, byte.MaxValue, 0, 150);
                    break;
                case 2:
                    client.Inventory.Remove(728526u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 3, false, 0, 150, byte.MaxValue);
                    break;
                case 3:
                    client.Inventory.Remove(728526u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 3, false, 150, byte.MaxValue, 0);
                    break;
            }
        }

        [Npc(NpcID.Steed6)]
        public static void Steed6(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(728527u, 1u, 0))
            {
                client.CreateBoxDialog("Sorry, you don`t have a Steed+1.");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello. You can chose a horse: black, brown or white.");
                    data.AddOption("Black horse", 1);
                    data.AddOption("Brown horse", 2);
                    data.AddOption("White horse", 3);
                    data.AddOption("Nevermind", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 1:
                    client.Inventory.Remove(728527u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, byte.MaxValue, 0, 150);
                    break;
                case 2:
                    client.Inventory.Remove(728527u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, 0, 150, byte.MaxValue);
                    break;
                case 3:
                    client.Inventory.Remove(728527u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, 150, byte.MaxValue, 0);
                    break;
            }
        }

        [Npc(NpcID.NobleSteedPack)]
        public static void NobleSteedPack(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720049u, 1u, 0))
            {
                client.CreateBoxDialog("Sorry, you don`t have a NobleSteedPack");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello. You can chose a horse: SpitfireSteed, FrostbiteSteed, BlazehoofSteed, SpottedSteed or Zebra.");
                    data.AddOption("+6~Spitfire~Steed", 1);
                    data.AddOption("+6~Frostbite~Steed", 2);
                    data.AddOption("+6~Blazehoof~Steed", 3);
                    data.AddOption("+6~Spotted~Steed", 4);
                    data.AddOption("+6~Zebra", 5);
                    data.AddOption("Nevermind", byte.MaxValue);
                    data.FinalizeDialog();
                    break;
                case 1:
                    client.Inventory.Remove(720049u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, 201, 135, 187);
                    break;
                case 2:
                    client.Inventory.Remove(720049u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, 184, 63, 62);
                    break;
                case 3:
                    client.Inventory.Remove(720049u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, 137, 156, 148);
                    break;
                case 4:
                    client.Inventory.Remove(720049u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, 122, 134, 147);
                    break;
                case 5:
                    client.Inventory.Remove(720049u, 1u, stream);
                    client.Inventory.AddSteed(stream, 300000u, 1, 6, false, 46, 39, 142);
                    break;
            }
        }

        [Npc(NpcID.ExitElitePk)]
        public static void ExitElitePk(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello there. Just let me know if you want to go to TwinCity.");
                    data.AddOption("TwinCity.", 2);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(27).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(27).FinalizeDialog();
                    break;
                case 3:
                    if (client.Player.TransformationID != 0)
                        client.Player.TransformInfo.FinishTransform();
                    client.Player.InElitePk = false;
                    client.Player.InTeamPk = false;
                    client.Teleport(428, 378, 1002u);
                    break;
                case 1:
                    break;
            }
        }

        [Npc(NpcID.TreasureLeave)]
        public static void TreasureLeave(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello there. Just let me know if you want to go to TwinCity.");
                    data.AddOption("TwinCity.", 2);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(428, 378, 1002u);
                    break;
                case 1:
                    break;
            }
        }

        [Npc(NpcID.ExitSuperGuildWar)]
        public static void ExitSuperGuildWar(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello there. Just let me know if you want to go to TwinCity.");
                    data.AddOption("TwinCity.", 2);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(428, 378, 1002u);
                    break;
                case 1:
                    break;
            }
        }

        [Npc(NpcID.ExitCaptureTheFlag)]
        public static void ExitCaptureTheFlag(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello there. Just let me know if you want to go to TwinCity.");
                    data.AddOption("TwinCity.", 2);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(428, 378, 1002u);
                    break;
                case 1:
                    break;
            }
        }

        [Npc(NpcID.SkillTeamPkManager)]
        public static void SkillTeamPkManager(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            string day;
            day = ISchedule.Schedules[ISchedule.EventID.SkillTeamPkTournament].StartDay;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.SkillTeamPkTournament].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.SkillTeamPkTournament].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText($"The new Skill Team Pk Tournament is open! It is held at {Hour}:{minute},every");
                    data.AddText(" " + day + ". The contestants will receive a very good prizes");
                    data.AddText(" and Honor Points for each round! The top 8 teams will receive extra prize!");
                    data.AddOption("Tell~me~more~about~the~rules.", 1);
                    data.AddOption("Sign~me~up!", 3);
                    data.AddOption("I~want~to~claim~my~prize!", 5);
                    data.AddOption("Not~interested.", byte.MaxValue);
                    data.AddAvatar(97);
                    data.FinalizeDialog();
                    break;
                case 1:
                    data.AddText("There are limits on the Equipmen Level and Rank. Moreover, there are");
                    data.AddText(" restrictions on Equipment Quality, Bonus Level, Sockets, Gems and ");
                    data.AddText(" Blessing effects. Besides, the effects of the Sub-classes are ajusted, too.");
                    data.AddText(" (Except for Apothecary.) By the way , the Battle Power shared from you Clan, ");
                    data.AddText("  Mentor, and Guild won`t count; ");
                    data.AddOption("Go ahead.", 10);
                    data.AddOption("Not~interested.", byte.MaxValue);
                    data.AddAvatar(97);
                    data.FinalizeDialog();
                    break;
                case 10:
                    data.AddText($"here Skill Team Pk Tournament is held at {Hour}:{minute} , every {day}. You need");
                    data.AddText(" to team up with others to take part in it. Only the team leaders are capable of ");
                    data.AddText(" claiming the rewards. You can up with friends in advance, or while");
                    data.AddText("  (in the waiting area. People who don`t team up will be kicked out, when the");
                    data.AddText(" contest starts. There are 4-groups: Level 130+, level 120-129, level 100-199  and level 1-99. ");
                    data.AddOption("What else?.", 11);
                    data.AddOption("Not~interested.", byte.MaxValue);
                    data.AddAvatar(97);
                    data.FinalizeDialog();
                    break;
                case 11:
                    data.AddText($"You can talk to me to enter the Waiting area at {Hour}:{minute}. No threams will be allowed to enter ");
                    data.AddText(" after the contest start. The contest for level 130+ starts at {Hour}:{minute}, level 120-129 21:02,");
                    data.AddText($" level 100-119 {Hour}:{minute} and level 1-99 {Hour}:{minute}. Disbanding/creating a team during the contest will");
                    data.AddText(" to disqualification. In knockout stage, each round lasts for 10 minutes");
                    data.AddOption("Okay.", byte.MaxValue);
                    data.AddAvatar(97);
                    data.FinalizeDialog();
                    break;
                case 3:
                    if (client.Team == null)
                    {
                        data.AddText("You need to team up with others to take part in it. Please create team.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(97).FinalizeDialog();
                    }
                    else if (!MsgSchedules.SkillTeamPkTournament.SignUp(client))
                    {
                        data.AddText($"Please sign up between {Hour}:{minute} every {day} night for the Skill PK Tournament.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(97).FinalizeDialog();
                    }
                    break;
                case 5:
                    if (client.Inventory.HaveSpace(1))
                    {
                        if (!MsgSchedules.SkillTeamPkTournament.GetReward(client, stream))
                        {
                            data.AddText("Sorry, you are not in top 8 in Skill Pk Tournament or you claimed the reward.");
                            data.AddOption("Okay.", byte.MaxValue).AddAvatar(97).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Please make one space in your bag.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(97).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.TeamPkManager)]
        public static void TeamPkManager(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            string day;
            day = ISchedule.Schedules[ISchedule.EventID.TeamPkTournament].StartDay;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.TeamPkTournament].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.TeamPkTournament].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText($"Attention! The Team Pk Tournament is held at {Hour}:{minute} , every {day}. The Top 8");
                    data.AddText("  teams will be handsomely rewarded, and each player in the team can");
                    data.AddText(" receive EXP and 1000 HonorPoints affter each match.");
                    data.AddOption("Tell~me~more~about~the~rules.", 1);
                    data.AddOption("Sign~me~up!", 3);
                    data.AddOption("I~want~to~claim~my~prize!", 5);
                    data.AddOption("Not~interested.", byte.MaxValue).AddAvatar(19).FinalizeDialog();
                    break;
                case 1:
                    data.AddText($"The Team Pk Tournament start at {Hour}:{minute} , every {day}, and teams will be divided");
                    data.AddText("  into four grups: Level 1-99, Level 100-119, level 120-129 and level 130+ ");
                    data.AddText(" Only teams can participate in this Tournament . You can either create a team");
                    data.AddText(" befor signin up, or enter the waiting area and create you team. At the start of the");
                    data.AddText(" Tournament, any player who`s not in team will be removed from the tournament map.");
                    data.AddText("  Where the Tournament ends, only the team leaders of the winning teams can claim the reward.");
                    data.AddOption("Ok Thank you!", byte.MaxValue);
                    data.AddOption("Not~interested.", byte.MaxValue).AddAvatar(19).FinalizeDialog();
                    break;
                case 3:
                    if (client.Team == null)
                    {
                        data.AddText("You need to team up with others to take part in it. Please create team.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                    }
                    else if (!MsgSchedules.TeamPkTournament.SignUp(client))
                    {
                        data.AddText($"Please sign up at {Hour}:{minute} , every {day} night for the Team PK Tournament.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(19).FinalizeDialog();
                    }
                    break;
                case 5:
                    if (client.Inventory.HaveSpace(1))
                    {
                        if (!MsgSchedules.TeamPkTournament.GetReward(client, stream))
                        {
                            data.AddText("Sorry, you are not in top 8 in Team Pk Tournament or you claimed the reward.");
                            data.AddOption("Okay.", byte.MaxValue).AddAvatar(19).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Please make one space in your bag.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(19).FinalizeDialog();
                    }
                    break;
                case 2:
                case 4:
                    break;
            }
        }

        [Npc(NpcID.ElitePk)]
        public static void ElitePk(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            string day;
            day = ISchedule.Schedules[ISchedule.EventID.ElitePkTournament].StartDay;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.ElitePkTournament].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.ElitePkTournament].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Glad to see you! I take it that you haven`t heard of the Elite PK Tournament, have you? No? Aha, please allow me to");
                    data.AddText(" introduce this exciting event for you! It`s a new PK Tournament that takes place every Friday. You will be divided into four groups, based");
                    data.AddText("~on your level. Not only will the top 3 winners of each group receive nice prizes, you will also receive EXP worth 1 EXP Ball and 50k Honor points for each match you take part in at the end of that round. Do you want to have a go?");
                    data.AddOption("Tell~me~more~about~the~rules.", 1);
                    data.AddOption("Sign~me~up!", 3);
                    data.AddOption("I~want~to~claim~my~prize!", 5);
                    data.AddOption("Not~interested.", byte.MaxValue).AddAvatar(16).FinalizeDialog();
                    break;
                case 1:
                    data.AddText($"The Elite PK Tournament begins at {Hour}:{minute} , every {day} night, and players will be divided into four groups, which are the Under 100 group, the 100-119 group, the 120-129 group, and the 130+ group. You can sign up for it");
                    data.AddText("~between 19:55 and 19:59. No admittance after the tournament begins. Players should first wait in the Waiting Area, and if you leave the area before your round, you will forfeit your chance. There will be a Knockout round before the Final.");
                    data.AddText("~But if there are less than 8 players at the start of the Elite PK Tournament, the Final will be replaced by the Knockout. Each round in the Knockout lasts 3 minutes. At the end of 3 minutes, if no one is killed, the player with a higher score wins.");
                    data.AddText("~After you finish your round, you`ll have to wait for all the other players to finish this round to enter the next round.");
                    data.AddOption("There~is~a~Final?", 2).AddAvatar(16).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Sure. When there are less than 8 players left in the field, the Final starts. Each round of the Final lasts for 5 minutes. Though all of the Top 8 players will receive nice prizes, the top 3 will earn special prizes! Claim your reward before the next");
                    data.AddText("~week`s Elite PK Tournament begins, or you won`t get them. We hope everyone will join this tournament, and so not only will the top 3 winners of each group receive nice prizes, you will also receive EXP worth 1 EXP Ball and 1000 Honor");
                    data.AddText("~points for each match you take part in at the end of that match!");
                    data.AddOption("Sign~me~up!", 3).AddOption("Not~interested", byte.MaxValue).AddAvatar(16)
                        .FinalizeDialog();
                    break;
                case 3:
                    if (!MsgSchedules.ElitePkTournament.SignUp(client))
                    {
                        data.AddText($"Please sign up between {Hour}:{minute} , every {day} night for the Elite PK Tournament.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(16).FinalizeDialog();
                    }
                    break;
                case 5:
                    if (client.Inventory.HaveSpace(1))
                    {
                        if (!MsgSchedules.ElitePkTournament.GetReward(client, stream))
                        {
                            data.AddText("Sorry, you are not in top 8 in elite pk or you claimed the reward.");
                            data.AddOption("Okay.", byte.MaxValue).AddAvatar(16).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Please make 1 more space in your bag.");
                        data.AddOption("Okay.", byte.MaxValue).AddAvatar(16).FinalizeDialog();
                    }
                    break;
                case 4:
                    break;
            }
        }

        [Npc(NpcID.ClassPkWar)]
        public static void NpcClassPkWar(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello , you're the last player alive?");
                    data.AddOption("Yes", 1);
                    data.AddOption("Teleport~to~Twin~City.", 2);
                    data.AddOption("Ah. wait", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                    break;
                case 1:
                    {
                        if (MsgSchedules.ClassPkWar.GetWar(client, out var war) != ProcesType.Dead)
                        {
                            if (!war.CheckJoin())
                            {
                                if (war.IsFinish(client))
                                {
                                    if (!client.Inventory.HaveSpace(11))
                                    {
                                        data.AddText("Please make 11 more spaces in your inventory.");
                                        data.AddOption("Let me check.", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                                    }
                                    war.GetMyReward(client, stream);
                                }
                                else
                                {
                                    data.AddText("Sorry, the war is not finished, or other players are still alive.");
                                    data.AddOption("Ah ok", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, the war is not finished");
                                data.AddOption("Ah ok", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war is finished, or other players are still alive.");
                            data.AddOption("Ah ok", byte.MaxValue).AddAvatar(154).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    data.AddText("You wana to teleport back to TwinCity? You are sure?");
                    data.AddOption("Yes", 3).AddOption("Ah no.", byte.MaxValue).AddAvatar(154)
                        .FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(352, 340, 1002u);
                    break;
            }
        }

        [Npc(NpcID.ClassPkEnvoy)]
        public static void ClassPkEnvoy(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            DayOfWeek day;
            day = ISchedule.Schedules[ISchedule.EventID.ClassPkWar].DayOfWeek;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.ClassPkWar].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.ClassPkWar].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Everyone settle down! I need to announce that there are new rules for the Class PK War!");
                    data.AddOption("Tell~me~more.", 1);
                    data.AddOption("Sign~up.", 2);
                    data.AddOption("Not~interested.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                    break;
                case 1:
                    data.AddText($"The ClassPK War is held each monday where all classes fight for their top halo. The winner gets {ServerKernel.CLASS_PK_WAR_REWARD} CPs! The event is held on {day} at {Hour}:{minute}.");
                    data.AddOption("Sign~up.", 2);
                    data.AddOption("Not~interested.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                    break;
                case 2:
                    {
                        if (MsgSchedules.ClassPkWar.GetWar(client, out var war) != ProcesType.Dead)
                        {
                            if (day == DayOfWeek.Monday && (client.Player.Class >= 10 && client.Player.Class <= 15))
                            {
                                if (war.CheckJoin())
                                {
                                    client.Teleport(81, 62, 1764u, war.DinamicID);
                                    break;
                                }
                            }
                            else if (day == DayOfWeek.Tuesday && (client.Player.Class >= 40 && client.Player.Class <= 45))
                            {
                                if (war.CheckJoin())
                                {
                                    client.Teleport(81, 62, 1764u, war.DinamicID);
                                    break;
                                }
                            }
                            else if (day == DayOfWeek.Wednesday && (client.Player.Class >= 130 && client.Player.Class <= 135))
                            {
                                if (war.CheckJoin())
                                {
                                    client.Teleport(81, 62, 1764u, war.DinamicID);
                                    break;
                                }
                            }
                            else if (day == DayOfWeek.Thursday && (client.Player.Class >= 20 && client.Player.Class <= 25))
                            {
                                if (war.CheckJoin())
                                {
                                    client.Teleport(81, 62, 1764u, war.DinamicID);
                                    break;
                                }
                            }
                            else if (day == DayOfWeek.Friday && (client.Player.Class >= 140 && client.Player.Class <= 145))
                            {
                                if (war.CheckJoin())
                                {
                                    client.Teleport(81, 62, 1764u, war.DinamicID);
                                    break;
                                }
                            }
                            else
                            {
                                if (client.Player.Class >= 10 && client.Player.Class <= 15)
                                {
                                    data.AddText($"I`m sorry, but the Class PK War for Trojan is only held on Monday.");
                                    data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                                }
                                else if (client.Player.Class >= 40 && client.Player.Class <= 45)
                                {
                                    data.AddText($"I`m sorry, but the Class PK War for Archer is only held on Tuesday.");
                                    data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                                }
                                else if (client.Player.Class >= 130 && client.Player.Class <= 135)
                                {
                                    data.AddText($"I`m sorry, but the Class PK War for Water Taoist is only held on Wednesday.");
                                    data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                                }
                                else if (client.Player.Class >= 20 && client.Player.Class <= 25)
                                {
                                    data.AddText($"I`m sorry, but the Class PK War for Warrior is only held on Thursday.");
                                    data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                                }
                                else
                                {
                                    data.AddText($"I`m sorry, but the Class PK War for Fire Taoist is only held on Friday.");
                                    data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                                }
                            }
                        }
                        else
                        {
                            if (client.Player.Class >= 10 && client.Player.Class <= 15)
                            {
                                data.AddText($"I`m sorry, but the Class PK War for Trojan is only held on Monday.");
                                data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                            }
                            else if (client.Player.Class >= 40 && client.Player.Class <= 45)
                            {
                                data.AddText($"I`m sorry, but the Class PK War for Archer is only held on Tuesday.");
                                data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                            }
                            else if (client.Player.Class >= 130 && client.Player.Class <= 135)
                            {
                                data.AddText($"I`m sorry, but the Class PK War for Water Taoist is only held on Wednesday.");
                                data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                            }
                            else if (client.Player.Class >= 20 && client.Player.Class <= 25)
                            {
                                data.AddText($"I`m sorry, but the Class PK War for Warrior is only held on Thursday.");
                                data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText($"I`m sorry, but the Class PK War for Fire Taoist is only held on Friday.");
                                data.AddOption("Alright.", byte.MaxValue).AddAvatar(275).FinalizeDialog();
                            }
                        }
                        break;
                    }
            }
        }

        [Npc(NpcID.JailCPAdmin)]
        public static void JailCPAdmin(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Do~you~know~how~I~desire~the~DragonBall?~I~would~like~to~pay~all~I~have~for~DragonBalls.~Would~you~like~to~exchange");
                    data.AddText("DragonBalls~for~CPs?~I~will~pay~you~215~CPs~for~a~DragonBall,~and~2150~CPs~for~a~DBScroll.~What~about~the~deal?");
                    data.AddOption("Exchange~a~DBScroll.", 1);
                    data.AddOption("Exchange~a~DragonBall.", 2);
                    data.AddOption("I~have~nothing.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.Contain(720028u, 1u, 0))
                    {
                        client.Inventory.Remove(720028u, 1u, stream);
                        int value;
                        value = 2150;
                        client.Player.Money += value;
                        client.CreateBoxDialog("Congratulations!You~have~got~2150~CPs~in~your~inventory");
                    }
                    else
                    {
                        data.AddText("Where~is~your~DBScroll?");
                        data.AddOption("Er,~sorry.~I'm not have DBScroll.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Inventory.Contain(1088000u, 1u, 0))
                    {
                        client.Inventory.Remove(1088000u, 1u, stream);
                        int value2;
                        value2 = 215;
                        client.Player.Money += value2;
                        client.CreateBoxDialog("Congratulations!You~have~got~215~CPs~in~your~inventory");
                    }
                    else
                    {
                        data.AddText("Where~is~your~DragonBall?");
                        data.AddOption("Er,~sorry.~I'm not have Dragon Ball.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.WardenZhang)]
        public static void WardenZhang(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Were always in the need of fresh bounty hunters.You see... murderers and thieves can evade out guards.");
                    data.AddText("We need heroes to slay he killers and restore peace. If you can PK those whose names are black (known criminals),");
                    data.AddText("you might get rewarded. If they pay");
                    data.AddOption("I~want~to~claim~my~reward.", 1);
                    data.AddOption("None~of~my~business.", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    break;
                case 1:
                    {
                        if (Server.TheCrimePoll.TryGetValue(client.Player.UID, out var MyCrimes))
                        {
                            int ConquerPoints;
                            ConquerPoints = MyCrimes.Claim(out var KillerName);
                            if (ConquerPoints > 0)
                            {
                                data.AddText("For arrest " + KillerName + ", you will be awarded " + ConquerPoints.ToString("0,0") + " Money.");
                                data.AddOption("Ok, I see.", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                                client.Player.Money += ConquerPoints;
                                break;
                            }
                        }
                        data.AddText("You dont have anything to claim!!");
                        data.AddOption("Ok thanks!", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                        break;
                    }
            }
        }

        [Npc(NpcID.JailWarden)]
        public static void JailWarden(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Lucky~for~you,~the~player~who~killed~you~is~willing~to~drop~the~murder~charges~if~you~pay~him~according~to~what~you~did.");
                    data.AddText("~So~if~you~pay~him~properly~he~is~willing~to~drop~the~murder~charges.");
                    data.AddOption("Ok!~Let~me~get~out~from~here.", 1);
                    data.AddOption("Any~chance~for~discount?", 2);
                    data.AddOption("I~would~rather~rot~in~hell!", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("The~red~name,~whose~PK~points~are~30-99,~can~leave~here~without~any~price.~The~black~name,~whose~PK~points~are~100~");
                    data.AddText("or~above,~should~pay~gold~as~recognizance~to~leave~here.~Or~pay~in~Gold~if~they~really~killed~a~lot.");
                    data.AddOption("Ok,~I~will~pay.", 1);
                    data.AddOption("I~would~rather~stay~here.", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.PKPoints < 100)
                    {
                        data.AddText("You~don't~need~to~stay~here~any~more.~Let~me~help~you~out");
                        data.AddOption("Ok,~thanks.", 3);
                        data.AddOption("I~wanna~stay~here.", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    }
                    else
                    {
                        int cost;
                        cost = client.Player.PKPoints * ServerKernel.Jail_Wanted;
                        data.AddText("You~really~murdered~a~lot.~Well~in~this~case~if~you~pay~for~yours~sins~" + cost.ToString("0,0") + "~CPs~I~will~let~you~go.");
                        data.AddOption("Here~is~my~payment.", 4);
                        data.AddOption("No,~thanks.", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    }
                    break;
                case 4:
                    {
                        int cost;
                        cost = client.Player.PKPoints * ServerKernel.Jail_Wanted;
                        int value;
                        value = cost;
                        if (client.Player.Money >= value)
                        {
                            client.Player.Money -= value;
                            client.Player.PKPoints = 0;
                            if (client.Player.JailerUID != 0)
                            {
                                if (Server.TheCrimePoll.TryGetValue(client.Player.JailerUID, out var crime))
                                    crime.AddCrime(client.Player.Name, client.Player.UID, (int)(cost / 2u));
                                else
                                {
                                    crime = new TheCrimeTable();
                                    crime.AddCrime(client.Player.Name, client.Player.UID, (int)(cost / 2u));
                                    Server.TheCrimePoll.TryAdd(client.Player.JailerUID, crime);
                                }
                                client.Player.JailerUID = 0u;
                                Program.SendGlobalPackets.Enqueue(new MsgMessage($"Congratulation {client.Player.Name} paid {cost} ConquerMoney compensation for his crimes!", MsgMessage.MsgColor.white, MsgMessage.ChatMode.BroadcastMessage).GetArray(stream));
                            }
                            client.Teleport(516, 356, 1002u);
                        }
                        else
                        {
                            data.AddText("You do not have " + cost.ToString("0,0") + " ConquerMoney with you.");
                            data.AddOption("I~see", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    client.Teleport(513, 355, 1002u);
                    break;
            }
        }

        [Npc(NpcID.JailJoin)]
        public static void JailJoin(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("What~can~I~do~for~you?");
                    data.AddOption("Visit~the~jail.", 1);
                    data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("Give~me~1000~silver,~I~will~teleport~you~there.");
                    data.AddOption("Here~are~1000~silver.", 2);
                    data.AddOption("If~so,~I~will~stay~here.", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.PKPoints < 30)
                    {
                        if (client.Player.Money >= 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Teleport(29, 72, 6000);
                        }
                        else
                            data.AddText("You do not have 1000 silvers with you.");
                        data.AddOption("I~see", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("I'm sorry you have more Pkpoints");
                        data.AddOption("I~see", byte.MaxValue).AddAvatar(37).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.CasinoHostess)]
        public static void CasinoHostess(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Greeting, I`m glad to be at your service. Win or lose is not that important. To win is not the ultimate aim of the game, happiness is what we have been pursuing. Here, I even more like to wish you a good health than a good luck!");
                    data.AddOption("I~have~no~interest~in~it.", 1);
                    data.AddOption("I~still~want~to~play.", byte.MaxValue);
                    data.AddAvatar(175).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(298, 283, 1002u);
                    break;
            }
        }

        [Npc(NpcID.Stanley)]
        public static void Stanley(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello there. Just let me know if you want to go to TwinCity.");
                    data.AddOption("TwinCity.", 2);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(428, 378, 1002u);
                    break;
                case 1:
                    break;
            }
        }

        [Npc(NpcID.Lab4)]
        public static void Lab4(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I~am~NorthGeneral.~This~is~the~fourth~floor.~If~you~want~to~go~back~to~Twin~City.~I~can~help~you.");
                    data.AddOption("To~Twin~City.", 2);
                    data.AddOption("I~will~stay~here.");
                    data.AddAvatar(31);
                    data.FinalizeDialog();
                    break;
                case 2:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 3:
                    client.Teleport(428, 378, 1002u);
                    break;
                case 1:
                    break;
            }
        }

        [Npc(NpcID.Lab3)]
        public static void Lab3(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I~am~SouthGeneral.~This~is~the~third~floor~of~Labyrinth.~If~you~want~to~enter~the~next~floor,~you~should~give~me~a");
                    data.AddText("~SoulToken.~Or~would~you~like~to~go~back~to~Twin~City?");
                    data.AddOption("To~the~next~floor.", 1);
                    data.AddOption("To~Twin~City.", 3);
                    data.AddOption("I~will~stay~here.");
                    data.AddAvatar(31);
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.Contain(721539u, 1u, 0))
                    {
                        data.AddText("The~next~floor~is~more~dangerous.~You~should~be~more~careful.");
                        data.AddOption("Thank~you~very~much.", 2);
                        data.AddAvatar(31);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~don`t~have~a~SoulToken,~I~cannot~teleport~you~there.");
                        data.AddOption("I~will~stay~here.");
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Inventory.Contain(721539u, 1u, 0))
                    {
                        client.Inventory.Remove(721539u, 1u, stream);
                        client.Teleport(5, 290, 1354u);
                    }
                    else
                        data.AddText("Sorry,~you~don`t~have~1~SoulToken.").AddOption("Sigh...", byte.MaxValue).AddAvatar(31)
                            .FinalizeDialog();
                    break;
                case 3:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 4);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 4:
                    client.Teleport(428, 378, 1002u);
                    break;
            }
        }

        [Npc(NpcID.Lab2)]
        public static void Lab2(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I~am~WestGeneral.~This~is~the~second~floor~of~Labyrinth.~If~you~want~to~enter~the~next~floor,~you~should~give~me~an");
                    data.AddText("~EarthToken,~or~would~you~like~to~go~back~to~Twin~City?");
                    data.AddOption("To~the~next~floor.", 1);
                    data.AddOption("To~Twin~City.", 3);
                    data.AddOption("I~will~stay~here.");
                    data.AddAvatar(31);
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.Contain(721538u, 1u, 0))
                    {
                        data.AddText("The~next~floor~is~more~dangerous.~You~should~be~more~careful.");
                        data.AddOption("Thank~you~very~much.", 2);
                        data.AddAvatar(31);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~don`t~have~an~EarthToken.~I~cannot~teleport~you~to~the~next~floor.");
                        data.AddOption("I~will~stay~here.");
                        data.AddAvatar(31);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Inventory.Contain(721538u, 1u, 0))
                    {
                        client.Inventory.Remove(721538u, 1u, stream);
                        client.Teleport(25, 268, 1353u);
                        break;
                    }
                    data.AddText("You~don`t~have~an~EarthToken.~I~cannot~teleport~you~to~the~next~floor.");
                    data.AddOption("I~will~stay~here.");
                    data.AddAvatar(31);
                    data.FinalizeDialog();
                    break;
                case 3:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 4);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 4:
                    client.Teleport(428, 378, 1002u);
                    break;
            }
        }

        [Npc(NpcID.Lab1)]
        public static void Lab1(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I~am~EastGeneral.~This~is~the~first~floor~of~Labyrinth.~If~you~want~to~enter~the~next~floor,~you~should~give~me~a");
                    data.AddText("~Sky~Token,~which~is~carried~by~the~Gold~Gosts.");
                    data.AddOption("To~the~next~floor.", 1);
                    data.AddOption("To~Twin~City.", 3);
                    data.AddOption("I~will~stay~here.");
                    data.AddAvatar(31);
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.Contain(721537u, 1u, 0))
                    {
                        data.AddText("The~next~floor~is~more~dangerous.~You~should~be~more~careful.");
                        data.AddOption("Thank~you~very~much.", 2);
                        data.AddAvatar(31);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~have~no~Sky~Token.~Hurry~to~loot~one~from~the~Gold~Gosts.");
                        data.AddOption("I~will~stay~here.");
                        data.AddAvatar(31);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Inventory.Contain(721537u, 1u, 0))
                    {
                        client.Inventory.Remove(721537u, 1u, stream);
                        client.Teleport(27, 227, 1352u);
                        break;
                    }
                    data.AddText("You~have~no~Sky~Token.~Hurry~to~loot~one~from~the~Gold~Gosts.");
                    data.AddOption("I~will~stay~here.");
                    data.AddAvatar(31);
                    data.FinalizeDialog();
                    break;
                case 3:
                    data.AddText("Sure you want to leave in TwinCity?");
                    data.AddOption("Yes.", 4);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 4:
                    client.Teleport(428, 378, 1002u);
                    break;
            }
        }

        [Npc(NpcID.Simon)]
        public static void Simon(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Great~rewards~will~attract~many~brave~people.~I~am~looking~for~brave~people~to~help~me~take~my~patrimony~back.");
                    data.AddOption("Please~tell~me~more.", 1);
                    //data.AddOption("What~rewards?", 10);
                    //data.AddOption("I~got~SunDiamonds.", 12);
                    //data.AddOption("I~got~MoonDiamonds.", 13);
                    //data.AddOption("I~got~StarDiamonds.", 14);
                    //data.AddOption("I~got~CloudDiamonds.", 15);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(87).FinalizeDialog();
                    break;
                case 15:
                    if (client.Inventory.Contain(721536u, 17u, 0))
                    {
                        client.Inventory.Remove(721536u, 17u, stream);
                        client.Inventory.Add(stream, 721540u, 1, 0, 0, 0);
                        data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                        data.AddOption("Thanks.");
                        data.AddAvatar(87);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~CloudDiamonds?");
                        data.AddOption("Wait.~I~will~get~more.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case 14:
                    if (client.Inventory.Contain(721535u, 17u, 0))
                    {
                        client.Inventory.Remove(721535u, 17u, stream);
                        Flags.Gem[] Gems;
                        Gems = new Flags.Gem[10]
                        {
                        Flags.Gem.NormalDragonGem,
                        Flags.Gem.NormalFuryGem,
                        Flags.Gem.NormalGloryGem,
                        Flags.Gem.NormalKylinGem,
                        Flags.Gem.NormalMoonGem,
                        Flags.Gem.NormalPhoenixGem,
                        Flags.Gem.NormalRainbowGem,
                        Flags.Gem.NormalThunderGem,
                        Flags.Gem.NormalTortoiseGem,
                        Flags.Gem.NormalVioletGem
                        };
                        Flags.Gem GemType;
                        GemType = Gems[ServerKernel.NextAsync(0, Gems.Length)];
                        client.Inventory.Add(stream, 700000u + (uint)GemType, 1, 0, 0, 0);
                        data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                        data.AddOption("Thanks.");
                        data.AddAvatar(63);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~StarDiamonds?");
                        data.AddOption("Wait.~I~will~get~more.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Inventory.Contain(721534u, 17u, 0))
                    {
                        client.Inventory.Remove(721534u, 17u, stream);
                        client.Inventory.Add(stream, 1088001u, 4, 0, 0, 0);
                        data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                        data.AddOption("Thanks.");
                        data.AddAvatar(63);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~MoonDiamonds?");
                        data.AddOption("Wait.~I~will~get~more.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Inventory.Contain(721533u, 17u, 0))
                    {
                        client.Inventory.Remove(721533u, 17u, stream);
                        client.Inventory.Add(stream, 1088001u, 2, 0, 0, 0);
                        data.AddText("Well~done.~Here~is~the~rewards~I~promised~to~you.");
                        data.AddOption("Thanks.");
                        data.AddAvatar(63);
                        data.FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~are~kidding~on~me.~How~dare~you~come~here~to~claim~prize~with~so~few~SunDiamonds?");
                        data.AddOption("Wait.~I~will~get~more.", byte.MaxValue);
                        data.AddAvatar(63).FinalizeDialog();
                    }
                    break;
                case 10:
                    data.AddText("I~need~Sun`Diamond,~Moon~Diamond,~Star~Diamond~and~Cloud~Diamond.");
                    data.AddText("If~You~get~them~for~me,~I~will~give~you~some~rewards.");
                    data.AddOption("What~rewards?", 11);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 11:
                    data.AddText("2~meteors~for~17~SunDiamonds,~4~meteors~for~17~MoonDiamonds,~a~normal~gem~for~17~StarDiamonds~and~a~AncestorBox");
                    data.AddText("for~17~CloudDiamonds.~If~you~are~lucky~enough,~you~will~get~a~big~surprise~from~the~box.");
                    data.AddOption("I~see.~Thank~you.", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("My~ancestors~built~a~Labyrinth~long~before.~Many~treasures~were~stored~there~like~SunDiamonds,~MoonDiamonds,~");
                    data.AddText("StarDiamond~and~so~on.~But~it~was~occupied~by~fiece~monsters~soon.~They~expelled~our~clansmen~and~kept~the~treasure.");
                    data.AddOption("Wow,~miserable.", 2);
                    data.AddOption("I~have~no~interest.", byte.MaxValue);
                    data.AddAvatar(87).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("The~Labyrinth~contains~4~floors~guarded~by~different~monsters.~If~you~can~find~the~treasures~and~give~them~to~me,~I~will~reward");
                    data.AddOption("Please~continue.", 3);
                    data.AddAvatar(87).FinalizeDialog();
                    break;
                case 3:
                    data.AddText("There~are~3~kinds~of~monsters~on~each~floor.~The~more~monsters,~the~weaker~they~are.~The~ones~in~lesser");
                    data.AddText("quantities~are~strong.~The~fiercest~monsters~are~always~moving~around.~And~they~drop~different~tokens.");
                    data.AddOption("What~do~they~drop?", 4);
                    data.AddAvatar(87).FinalizeDialog();
                    break;
                case 4:
                    data.AddText("SkyToken,~EarthToken~and~SoulToken~you~need~to~enter~the~next~floor.~While~the~weak~monsters~usually~drop~treasure.");
                    data.AddText("After~You~get~a~token,~find~a~general~who~will~send~you~to~the~next~floor.~Some~boss~monsters~drop~rare~items.");
                    data.AddOption("I~see.~Thanks.", 5);
                    data.AddOption("I~must~leave~now.", byte.MaxValue);
                    data.AddAvatar(87).FinalizeDialog();
                    break;
                case 5:
                    data.AddText("There are 3 ways to enter the Labyrinth: 1. Pay 2,000 Virtue Points; 2. Submit 5 meteors;");
                    data.AddText("~3. VIP service.");
                    data.AddOption("Give~you~2000~Virtue~Points.", 6);
                    data.AddOption("I~have~5~Meteors.", 7);
                    data.AddOption("VIP~service.", 8);
                    data.AddAvatar(87).FinalizeDialog();
                    break;
                case 8:
                    if (client.Player.VipLevel >= 1)
                    {
                        client.Teleport(18, 127, 1351u);
                        break;
                    }
                    data.AddText("Sorry,~you~don`t~have~VIP.");
                    data.AddOption("Sigh...", byte.MaxValue);
                    data.AddAvatar(87).FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.VirtutePoints > 2000)
                    {
                        client.Player.VirtutePoints -= 2000u;
                        client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                        client.Teleport(18, 127, 1351u);
                    }
                    else
                    {
                        data.AddText("Sorry,~you~don`t~have~enough~virtue~points.");
                        data.AddOption("Sigh...", byte.MaxValue);
                        data.AddAvatar(87).FinalizeDialog();
                    }
                    break;
                case 7:
                    if (client.Inventory.Contain(1088001u, 5u, 0))
                    {
                        client.Inventory.Remove(1088001u, 5u, stream);
                        client.Teleport(18, 127, 1351u);
                    }
                    else
                    {
                        data.AddText("Sorry,~you~don`t~have~5~Meteors.");
                        data.AddOption("Sigh...", byte.MaxValue);
                        data.AddAvatar(87).FinalizeDialog();
                    }
                    break;
                case 9:
                    break;
            }
        }

        [Npc(NpcID.FrozenGrottoGuardian5)]
        public static void FrozenGrottoGuardian5(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText(" Who`s there?.. Oh, you are from Twin City. aren`t you? Finally, i thoyght no one would come here to rescue us..");
                    data.AddText("We`ve still got some business to carry out on the 6th floor. You`re here to go there and clear out the monsters,");
                    data.AddText("right? I can also help you get the other floors, if you like.");
                    data.AddOption("How can i go FG6? ", 1);
                    data.AddOption("Gimme a Shadow Jave", 2);
                    data.AddOption("Send me to FG4 then.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("There is a portal on this floor (150,178). You can get to F6 from here. Be careful.");
                    data.AddOption("Thanks. I will.", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 2:
                    if (client.Inventory.HaveSpace(1))
                    {
                        if (client.Inventory.Contain(720599u, 1u, 0))
                        {
                            data.AddText("Sorry, but your have ShadowJade.");
                            data.AddOption("Ah~yes.", byte.MaxValue);
                            data.AddAvatar(0).FinalizeDialog();
                        }
                        else
                            client.Inventory.Add(stream, 720599u, 1, 0, 0, 0);
                    }
                    else
                    {
                        data.AddText("Please make 1 space in your inventory.");
                        data.AddOption("Ah~yes.", byte.MaxValue);
                        data.AddAvatar(0).FinalizeDialog();
                    }
                    break;
                case 3:
                    client.Teleport(379, 470, 2054u);
                    break;
            }
        }

        [Npc(NpcID.FrozenFroto4Teleporter)]
        public static void FrozenFroto4Teleporter(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText(" ~I guess you`ve heard about the 5th floor of Frozen Grotto before. The place is infested with so many ferocious monsters that no one dares go up there. Well, until recently,");
                    data.AddText(" that is... Yeah, you heard me... I found out that the monsters on the 3rd and 4th");
                    data.AddText("~are carrying a Grotto Key with them. With this key, it would be easier to kill the monsters on the 5th floor. If you are interested, go kill those monsters");
                    data.AddText(" on the 3rd and 4th floor and get a key, then I`ll send you to the 5th floor to get rid of");
                    data.AddText("~those nasty beasts. Hmmm,~I`m~on~it.");
                    data.AddText("If your VIP level has reached 4, you can enter the 5th floor of Frozen Grotto everyday, for free!");
                    data.AddOption("Hey,~I`ve~got~a~key~here.", 1);
                    data.AddOption("Frozen~Grotto~F5.", 2);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.Contain(721347u, 1u, 0))
                    {
                        client.Inventory.Remove(721347u, 1u, stream);
                        client.Teleport(526, 562, 2055u);
                    }
                    else
                    {
                        data.AddText("Sorry, you not have the Grotto Key in your inventory. Go to kill monsters to obtain that key..");
                        data.AddOption("Okay.", byte.MaxValue);
                        data.AddAvatar(31).FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Player.VipLevel >= 4)
                    {
                        client.Teleport(526, 562, 2055u);
                        break;
                    }
                    data.AddText("Sorry, but your VIP Level has to reach 4 to enter the 5th floor for free. If you want to go there, you must collect the Grotto Key.");
                    data.AddOption("I~see.", byte.MaxValue);
                    data.AddAvatar(31).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.DesertFrozenGroto)]
        public static void DesertFrozenGroto(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("The Frozen Grotto is a dangerous and ancient place. Many heroes have died there while searching for its hidden treasures.");
                    data.AddText("~Six layers of the Frozen Grotto have been excavated so far. If you have made up your mind to test your ability there, I can");
                    data.AddText("~teleport you to the first 2 floors. If you want to go to the 5th floor, speak to the Guardian on Frozen Grotto F4 (387,460).");
                    data.AddOption("Frozen~Grotto~1.", 1);
                    data.AddOption("Frozen~Grotto~2.", 2);
                    data.AddOption("Frozen~Grotto~6.", 3);
                    data.AddOption("Let~me~think...", byte.MaxValue);
                    data.AddAvatar(183).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(338, 354, 1762u);
                    break;
                case 2:
                    client.Teleport(379, 470, 2054u);
                    break;
                case 3:
                    client.Teleport(300, 300, 2056u);
                    break;
            }
        }


        public static void LotteryBoxes(GameClient user, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(user, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Are you sure you want to open this lottery box?");
                    data.AddOption("Pay 1 SmallLotteryPack.", 1);
                    data.AddOption("No thanks.", byte.MaxValue);
                    data.AddAvatar(0);
                    data.FinalizeDialog();
                    break;
                case 1:
                    {
                        byte chance;
                        chance = 0;
                        byte vipLevel;
                        vipLevel = user.Player.VipLevel;
                        chance = (byte)((vipLevel == 6) ? byte.MaxValue : 150);
                        if (user.Player.LotteryEntries < chance)
                        {
                            if (user.Inventory.Contain(724002u, 1u, 0))
                            {
                                if (user.Inventory.HaveSpace(1))
                                {
                                    user.Inventory.Remove(724002u, 1u, stream);
                                    user.Player.LotteryEntries++;
                                    user.Player.LotteryItem = Server.Lottery.GenerateLotteryItem(user);
                                    if (user.Player.LotteryItem != null)
                                    {
                                        if (Server.Lottery.CreateGameItem(user.Player.LotteryItem) != null)
                                            user.Inventory.Update(Server.Lottery.CreateGameItem(user.Player.LotteryItem), AddMode.ADD, stream);
                                        if (user.Player.LotteryItem.Rank < 5)
                                        {
                                            Program.SendGlobalPackets.Enqueue(new MsgMessage("Congratulations! " + user.Player.Name + " Won " + user.Player.LotteryItem.Name + " in Lottery.", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                            user.SendSysMesage("You won a " + user.Player.LotteryItem.Name + " from the lottery!");
                                        }
                                        user.SendSysMesage("You won a " + user.Player.LotteryItem.Name + " from the lottery!");
                                        user.Player.LotteryItem = null;
                                    }
                                    MsgStringPacket msgStringPacket;
                                    msgStringPacket = new MsgStringPacket();
                                    msgStringPacket.ID = MsgStringPacket.StringID.Effect;
                                    msgStringPacket.UID = id;
                                    msgStringPacket.Strings = new string[1] { "lottery" };
                                    MsgStringPacket packet;
                                    packet = msgStringPacket;
                                    user.Player.View.SendView(stream.StringPacketCreate(packet), true);
                                    data.AddText("You got an item from the lottery. Check your inventory.");
                                    data.AddOption("Okay thanks.", byte.MaxValue);
                                    data.AddAvatar(0).FinalizeDialog();
                                }
                                else
                                    user.CreateBoxDialog("Please make 1 more space in your inventory.");
                            }
                            else
                            {
                                data.AddText("You need to have a SmallLotteryPack to draw from the lottery in the lottery Center.");
                                data.AddOption("Oops.", byte.MaxValue);
                                data.AddAvatar(0).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, your LotteryEntries " + user.Player.LotteryEntries + "  has finished come tomorrow.");
                            data.AddOption("Oops.", byte.MaxValue);
                            data.AddAvatar(0).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        public unsafe static void Warehause(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {

                            ActionQuery actionQuery;
                            actionQuery = default(ActionQuery);
                            actionQuery.Type = ActionType.OpenDialog;
                            actionQuery.ObjId = client.Player.UID;
                            actionQuery.dwParam = 4u;
                            actionQuery.wParam1 = client.Player.X;
                            actionQuery.wParam2 = client.Player.Y;
                            ActionQuery action;
                            action = actionQuery;
                            client.Send(stream.ActionCreate(&action));
                            break;

                        }

                    }
            }

        }

        public unsafe static void Warehause2(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            //if (client.Player.VipLevel != 6)
                            //{
                            //    data.AddText("You most be VIP 6 to used this Warehause")
                            //       .AddOption("Okay,~thanks.", 255)
                            //       .AddAvatar(10).FinalizeDialog();
                            //    break;
                            //}
                            ActionQuery actionQuery;
                            actionQuery = default(ActionQuery);
                            actionQuery.Type = ActionType.OpenDialog;
                            actionQuery.ObjId = client.Player.UID;
                            actionQuery.dwParam = 4u;
                            actionQuery.wParam1 = client.Player.X;
                            actionQuery.wParam2 = client.Player.Y;
                            ActionQuery action;
                            action = actionQuery;
                            client.Send(stream.ActionCreate(&action));
                            break;

                        }

                    }
            }

        }
        public static void GuildCondTeleBack(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("In exchange of a fee of 500gold, I will teleport you back to the guild war map. Don't bother me if you are poor.");
                    data.AddOption("Teleport me.", 1);
                    data.AddOption("I'm too poor.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Teleport(348, 339, 1038);
                    }
                    else
                        data.AddText("You do not have 500 silvers with you.");
                    data.AddOption("I~see.", byte.MaxValue);
                    data.AddAvatar(3).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.GuildConductor1)]
        public static void GuildConductor1(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Are~you~heading~for~the~Basilisk~Map?~It~is~free~for~our~members,~and~1,000~silver~for~others.");
                    data.AddOption("Please~teleport~me~there.", 1);
                    data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Teleport(514, 558, 1217);
                    }
                    else
                    {
                        data.AddText("Please~take~1000~silvers~to~use~guild~teleporter.");
                        data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.GuildConductor4)]
        public static void GuildConductor4(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Are~you~heading~for~the~Advance~Map?~It~is~free~for~our~members,~and~1,000~silver~for~others.");
                    data.AddOption("Please~teleport~me~there.", 1);
                    data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Teleport(482, 013, 1216);
                    }
                    else
                    {
                        data.AddText("Please~take~1000~silvers~to~use~guild~teleporter.");
                        data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    }
                    break;
            }
        }

        public static void GuildConductorsProces(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);

            if (id == 101615)
            {
                GuildConductor4(client, stream, Option, Input, id);
                return;
            }

            if (id == 101621)
            {
                GuildConductor1(client, stream, Option, Input, id);
                return;
            }

            switch (Option)
            {
                case 0:
                    data.AddText("Are~you~heading~for~the~next~teleporter?~It~is~free~for~our~members,~and~1,000~silver~for~others.");
                    data.AddOption("Please~teleport~me~there.", 1);
                    //data.AddOption("Buy~Guild~Teleporter.", 2);
                    data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Money >= 1000)
                    {
                        client.Player.Money -= 1000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        MsgSchedules.GuildWar.GuildConductors[(NpcID)(client.ActiveNpc - 1)].GetCoords(out var x, out var y, out var map);
                        client.Teleport(x, y, map);
                    }
                    else
                    {
                        data.AddText("Please~take~1000~silvers~to~use~guild~teleporter.");
                        data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("A~Teleporter~costs~100,000~silver.~After~you~buy~one~and~place~it~at~a~good~location,~you~can~be~teleported~there~directly.");
                    data.AddOption("Buy~Teleporter~1.", 3);
                    data.AddOption("Buy~Teleporter~2.", 4);
                    data.AddOption("Buy~Teleporter~3.", 5);
                    data.AddOption("Buy~Teleporter~4.", 6);
                    data.AddOption("I~changed~my~mind.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    break;
                case 3:
                    if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.Add(stream, 720021, 1, 0, 0, 0);
                            }
                            else
                                data.AddText("You do not have 100.000 silvers with you.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Please make one more space in your inventory.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.");
                        data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    }
                    break;
                case 6:
                    if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.Add(stream, 720024u, 1, 0, 0, 0);
                            }
                            else
                                data.AddText("You do not have 100.000 silvers with you.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Please make one more space in your inventory.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.");
                        data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    }
                    break;
                case 5:
                    if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.Add(stream, 720023u, 1, 0, 0, 0);
                            }
                            else
                                data.AddText("You do not have 100.000 silvers with you.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Please make one more space in your inventory.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.");
                        data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    }
                    break;
                case 4:
                    if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                client.Inventory.Add(stream, 720022u, 1, 0, 0, 0);
                            }
                            else
                                data.AddText("You do not have 100.000 silvers with you.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Please make one more space in your inventory.");
                            data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~only~the~guild~leader~who~won~the~guild~war~can~buy~a~Guild~Teleporter.");
                        data.AddOption("I~see.", byte.MaxValue).AddAvatar(3).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.GuildOfficer)]
        public static void GuildOfficer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                    {
                        data.AddText("There~is~income~every~week.~Guild~leader~can~claim~it~from~Monday~to~Thursday.~First~come,~First~served.");
                        data.AddOption("I~would~like~to~claim~it", 1);
                        data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("Guild war is being held now. Afterwards the leader of winning guild can gain the tax income,");
                        data.AddText("which can be claimed from Monday to Thursday next week.");
                        data.AddOption("Ok,~I~see.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    break;
                case 1:
                    if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID && client.Player.MyGuild != null && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                    {
                        if (client.Player.GuildRank == Flags.GuildMemberRank.GuildLeader && MsgSchedules.GuildWar.Winner.LeaderReward > 0 && !MsgSchedules.GuildWar.RewardLeader.Contains(client.Player.UID))
                        {
                            if (!client.Inventory.HaveSpace(20))
                            {
                                data.AddText("Please make 20 more spaces in your inventory.");
                                data.AddOption("let me check.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                                break;
                            }
                            MsgSchedules.GuildWar.RewardLeader.Add(client.Player.UID);
                            MsgSchedules.GuildWar.Winner.LeaderReward--;
                            //client.Player.CurrentPoint(Flags.CurrentPoint.GiftCPS, Flags.CurrentPointAction.Add, (uint)ServerKernel.GUILD_WAR_REWARD);
                            //client.Inventory.Add(stream, 722078, 1, 0, 0, 0);//token
                            //client.Inventory.Add(stream, 721169, 2, 0, 0, 0);//5xUltimatePack
                            client.Inventory.Add(stream, 721080, 5, 0, 0, 0);//Moonbox
                            client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall
                            client.Inventory.Add(stream, 720547, 3, 0, 0, 0);//MegaMetsPack
                            //client.Inventory.Add(stream, 720546, 2, 0, 0, 0);//2xMegaDBPack
                            //client.Inventory.Add(stream, 780002, 1, 0, 0, 0);//15D/VIP
                            client.Inventory.Add(stream, 780001, 3, 0, 0, 0);//7D/VIP
                            client.Player.Money += 10000000;
                            IEventRewards.Add("GuildWar[" + client.Player.GuildRank.ToString() + "]", 0u, 0u, Server.ItemsBase[723467u].Name + " + " + Server.ItemsBase[730006u].Name, "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                            client.Player.AddFlag(MsgUpdate.Flags.TopGuildLeader, 2592000, false);
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , Guild Leader from " + client.Player.MyGuild.GuildName + " was rewarded 1xLordToken | 5xMoonBox | 5xDragonBall | 3xMegaMeteorScroll | 10,000,000 ConquerMoney.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            //Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , Guild Leader from " + client.Player.MyGuild.GuildName + " was rewarded 1xLordToken | 5xUltimatePack | 4xPowerExpball | 5xStone+5 | 2xMegaMeteorScrool | 2xMegaDBScrool .", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        }
                        else if (client.Player.GuildRank == Flags.GuildMemberRank.DeputyLeader && MsgSchedules.GuildWar.Winner.DeputiLeaderReward > 0 && !MsgSchedules.GuildWar.RewardDeputiLeader.Contains(client.Player.UID))
                        {
                            if (client.Player.ContainFlag(MsgUpdate.Flags.TopGuildLeader))
                            {
                                data.AddText("Sorry you already have the TOP GUILD LEADER TITTLE!");
                                data.AddOption("Ok~sorry~!.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                                return;
                            }

                            MsgSchedules.GuildWar.Winner.DeputiLeaderReward--;
                            MsgSchedules.GuildWar.RewardDeputiLeader.Add(client.Player.UID);
                            client.Player.AddFlag(MsgUpdate.Flags.TopDeputyLeader, 2592000, false);
                        }
                        else
                        {
                            data.AddText("Just the GuildLeader or DeputiLeader can claim the reward!");
                            data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Your~guild~has~not~dominated~guild~area.~Guild~war~will~be~held~on~every~" + ISchedule.Schedules[ISchedule.EventID.GuildWar].StartDay);
                        data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.EliteGuildOfficer)]
        public static void EliteGuildOfficer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            string day;
            day = ISchedule.Schedules[ISchedule.EventID.EliteGuildWar].StartDay;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.EliteGuildWar].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.EliteGuildWar].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (MsgSchedules.EliteGuildWar.Proces == ProcesType.Dead)
                    {
                        data.AddText("This~is~the~elite~guild~war~envoy.This~event~is~held~twice~a day~and you can gain a good amount of~CPs~income~every~day.~Only~GL~can~claim~this~prize.");
                        data.AddText($" The event is held from {Hour}:{minute}");
                        data.AddOption("I~would~like~to~claim~it", 1);
                        data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("EliteGW is being held now. Afterwards the leader of winning guild can gain the prize.");
                        data.AddOption("Ok,~I~see.", byte.MaxValue).AddAvatar(110)
                            .FinalizeDialog();
                    }
                    break;
                case 2:
                    if (!MsgSchedules.EliteGuildWar.SignUp(client, stream))
                    {
                        data.AddText($" The event is held from {Hour}:{minute}");
                        data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    break;
                case 1:
                    if (client.Player.GuildID == MsgSchedules.EliteGuildWar.Winner.GuildID && client.Player.MyGuild != null && MsgSchedules.EliteGuildWar.Proces == ProcesType.Dead)
                    {
                        if ((client.Player.GuildRank == Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Flags.GuildMemberRank.LeaderSpouse) && MsgSchedules.EliteGuildWar.Winner.LeaderReward > 0 && !MsgSchedules.EliteGuildWar.RewardLeader.Contains(client.Player.UID))
                        {
                            MsgSchedules.EliteGuildWar.RewardLeader.Add(client.Player.UID);
                            MsgSchedules.EliteGuildWar.Winner.LeaderReward--;
                            //client.Inventory.Add(stream, 721169, 2, 0, 0, 0);//5xUltimatePack
                            //client.Inventory.Add(stream, 722057, 5, 0, 0, 0);//4xPowerExpball
                            //client.Inventory.Add(stream, 730003, 3, 0, 0, 0);//+5 stone
                            client.Inventory.Add(stream, 720547, 3, 0, 0, 0);//MegaMetsPack
                            client.Inventory.Add(stream, 1088000, 10, 0, 0, 0);//DragonBall
                            client.Inventory.Add(stream, 721080, 3, 0, 0, 0);//+5
                            client.Inventory.Add(stream, 780001, 1, 0, 0, 0);//+5 stone
                            client.Player.Money += 15000000;
                            IEventRewards.Add("EliteGuildWar[" + client.Player.GuildRank.ToString() + "]", 0u, 5000000u, Server.ItemsBase[720028u].Name + " + " + Server.ItemsBase[720027u].Name, "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                            //client.Player.AddFlag(MsgUpdate.Flags.TopGuildLeader, 2592000, false);
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , Guild Leader from " + client.Player.MyGuild.GuildName + " was rewarded x2 MegaMeteorScroll | x10 DragonBall | x3 MoonBox | 15,000,000 GOLD | x1 VIP6(7Days).", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        }
                        else
                        {
                            data.AddText("Just the GuildLeader/LeaderSpouse can claim the reward!");
                            data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Your~guild~has~not~dominated~guild~area..");
                        data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    break;
            }
        }
        [Npc(NpcID.ScoreWarOfficer)]
        public static void ScoreWarOfficer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            //string day;
            //day = ISchedule.Schedules[ISchedule.EventID.EliteGuildWar].StartDay;
            //uint Hour;
            //Hour = ISchedule.Schedules[ISchedule.EventID.EliteGuildWar].StartHour;
            //uint minute;
            //minute = ISchedule.Schedules[ISchedule.EventID.EliteGuildWar].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (MsgSchedules.ScoresWar.Proces == ProcesType.Dead)
                    {
                        data.AddText("This~is~the~scores~war~war~envoy.This~event~is~held~twice~a day~and you can gain a good amount of~CPs~income~every~day.~Only~GL~can~claim~this~prize.");
                        data.AddText($" The event is held from {14}:{00}");
                        data.AddOption("I~would~like~to~claim~it", 1);
                        data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("ScoreWar is being held now. Afterwards the leader of winning guild can gain the prize.");
                        data.AddOption("Sign Up", 2);
                        data.AddOption("Ok,~I~see.", byte.MaxValue).AddAvatar(110)
                            .FinalizeDialog();
                    }
                    break;
                case 2:
                    if (!MsgSchedules.ScoresWar.SignUp(client, stream))
                    {
                        data.AddText($" The event is held from {14}:{00}");
                        data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    break;
                case 1:
                    if (client.Player.GuildID == MsgSchedules.ScoresWar.Winner.GuildID && client.Player.MyGuild != null && MsgSchedules.ScoresWar.Proces == ProcesType.Dead)
                    {
                        if ((client.Player.GuildRank == Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Flags.GuildMemberRank.LeaderSpouse) && MsgSchedules.ScoresWar.Winner.LeaderReward > 0 && !MsgSchedules.ScoresWar.RewardLeader.Contains(client.Player.UID))
                        {
                            MsgSchedules.ScoresWar.RewardLeader.Add(client.Player.UID);
                            MsgSchedules.ScoresWar.Winner.LeaderReward--;
                            //client.Inventory.Add(stream, 721169, 2, 0, 0, 0);//5xUltimatePack
                            //client.Inventory.Add(stream, 722057, 5, 0, 0, 0);//4xPowerExpball
                            //client.Inventory.Add(stream, 730003, 3, 0, 0, 0);//+5 stone
                            client.Inventory.Add(stream, 720547, 5, 0, 0, 0);//MegaMetsPack
                            client.Inventory.Add(stream, 720028, 2, 0, 0, 0);//MegaMetsPack
                            //client.Inventory.Add(stream, 720546, 1, 0, 0, 0);//2xMegaDBPack
                            client.Player.Money += 10000000;
                            IEventRewards.Add("ScoresWar[" + client.Player.GuildRank.ToString() + "]", 0u, 0u, Server.ItemsBase[723467u].Name + " + " + Server.ItemsBase[730006u].Name, "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                            client.Player.AddFlag(MsgUpdate.Flags.TopGuildLeader, 2592000, false);
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , Guild Leader from " + client.Player.MyGuild.GuildName + " was rewarded 5x MegaMeteorScroll | 2x DragonBallScroll | 10,000,000 Conquer Money .", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        }
                        else
                        {
                            data.AddText("Just the GuildLeader/LeaderSpouse can claim the reward!");
                            data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Your~guild~has~not~dominated~guild~area..");
                        data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(110).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.ClanWar)]
        public static void ClanWar(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            string day;
            day = ISchedule.Schedules[ISchedule.EventID.ClanWar].StartDay;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.ClanWar].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.ClanWar].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (MsgSchedules.ClanWar.Proces == ProcesType.Dead)
                    {
                        data.AddText($"This is the daily clan war. It is held {day} at {Hour}:{minute} and after the war ends you can come and claim the prize from here.");
                        data.AddOption("I~would~like~to~claim~it.", 1);
                        data.AddOption("Sign~up (Closed now)", byte.MaxValue);
                        data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(62).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("ClanWar is being held now. Afterwards the leader of winning clan can gain the prize.");
                        data.AddOption("Let me in Spot 1.", 21);
                        data.AddOption("Let me in Spot 2.", 22);
                        data.AddOption("Let me in Spot 3.", 23);
                        data.AddOption("Ok,~I~see.", byte.MaxValue).AddAvatar(62).FinalizeDialog();
                    }
                    break;
                case 21:
                    {
                        client.Teleport(155, 248, 1125);
                        break;
                    }
                case 22:
                    {
                        client.Teleport(246, 157, 1125);
                        break;
                    }
                case 23:
                    {
                        client.Teleport(86, 88, 1125);
                        break;
                    }
                case 1:
                    if (!client.Inventory.HaveSpace(25))
                    {
                        data.AddText("------------------------------------------------------\n")
                                        .AddText("There`s not enough space in your inventory\n")
                                        .AddText("you need (25) free space in your inventory\n")
                                        .AddText("------------------------------------------------------")
                                        .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                        return;
                    }
                    if (client.Player.ClanUID == MsgSchedules.ClanWar.Winner.ClanID && client.Player.MyClan != null && MsgSchedules.ClanWar.Proces == ProcesType.Dead)
                    {
                        if (client.Player.ClanRank == 100 && MsgSchedules.ClanWar.Winner.LeaderReward > 0 && !MsgSchedules.ClanWar.RewardLeader.Contains(client.Player.UID))
                        {
                            MsgSchedules.ClanWar.RewardLeader.Add(client.Player.UID);
                            MsgSchedules.ClanWar.Winner.LeaderReward--;
                            client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
                            client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
                            client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
                            client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
                            client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
                            client.Inventory.Add(stream, 720547, 5, 0, 0, 0);//MegaMetsPack x2
                            client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
                            client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
                            client.Player.Money += 10000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            IEventRewards.Add("ClanWar[" + client.Player.GuildRank.ToString() + "]", 0u, 0u, Server.ItemsBase[723467u].Name + " + " + Server.ItemsBase[730006u].Name, "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , leader of winner clan (" + client.Player.MyClan.Name + ") redeem their rewards.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        }
                        else
                        {
                            data.AddText("Just the leader can claim the reward!");
                            data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(62).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Your~clan~has~not~won~the~clan~war.");
                        data.AddOption("Ok~thank~you.", byte.MaxValue).AddAvatar(62).FinalizeDialog();
                    }
                    break;
                case 2:
                    if (!MsgSchedules.ClanWar.SignUp(client, stream))
                    {
                        data.AddText($" The event is held from {Hour}:{minute}.");
                        data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(62).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.LeftGate)]
        public static void LeftGate(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            if (((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader
                  || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader
                  || client.Player.GuildRank == Role.Flags.GuildMemberRank.HDeputyLeader)
                  && MsgTournaments.MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID) == false)
                return;
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.AddText("Select the option you want to pursue.");
                    dialog.AddOption("Open~the~gate", (byte)1);
                    dialog.AddOption("Close gate.", (byte)2);
                    dialog.AddOption("Get inside.", (byte)3);
                    dialog.AddOption("Not~interested.", byte.MaxValue).FinalizeDialog();
                    break;
                case 1:
                    if ((client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.LeaderSpouse || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.HDeputyLeader) && (int)MsgSchedules.GuildWar.Winner.GuildID == (int)client.Player.GuildID)
                    {
                        if (DateTime.Now < MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].LeftGateStamp.AddSeconds(30.0))
                        {
                            dialog.AddText(string.Format("You have to wait {0} seconds to open the gate again.", (object)(int)(MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].LeftGateStamp.AddSeconds(30.0) - DateTime.Now).TotalSeconds));
                            dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                            break;
                        }
                        if (MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Mesh == SobNpc.StaticMesh.OpenLeftGate)
                        {
                            dialog.AddText("Gate~is~already~opened.");
                            dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                            break;
                        }
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].LeftGateStamp = DateTime.Now;
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Mesh = SobNpc.StaticMesh.OpenLeftGate;
                        MsgUpdate msgUpdate = new MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].UID);
                        stream = msgUpdate.Append(stream, MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Mesh);
                        stream = msgUpdate.GetArray(stream);
                        using (IEnumerator<GameClient> enumerator = Server.GamePoll.Values.GetEnumerator())
                        {
                            while (enumerator.MoveNext())
                            {
                                GameClient current = enumerator.Current;
                                if (current.Player.Map == 1038 && Core.GetDistance(current.Player.X, current.Player.Y, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].X, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Y) <= (short)19)
                                    current.Send(stream);
                            }
                            break;
                        }
                    }
                    else
                    {
                        dialog.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.");
                        dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                        break;
                    }
                case 2:
                    if ((client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.LeaderSpouse || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.HDeputyLeader) && (int)MsgSchedules.GuildWar.Winner.GuildID == (int)client.Player.GuildID)
                    {
                        if (MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Mesh == SobNpc.StaticMesh.LeftGate)
                        {
                            dialog.AddText("Gate~is~already~closed.");
                            dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                            break;
                        }
                        //if (MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].HitPoints == 0)
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].HitPoints = MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].MaxHitPoints;
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Mesh = SobNpc.StaticMesh.LeftGate;
                        MsgUpdate msgUpdate = new MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].UID, 2);
                        stream = msgUpdate.Append(stream, MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Mesh);
                        stream = msgUpdate.Append(stream, MsgUpdate.DataType.Hitpoints, (long)MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].HitPoints);
                        stream = msgUpdate.GetArray(stream);
                        using (IEnumerator<GameClient> enumerator = Server.GamePoll.Values.GetEnumerator())
                        {
                            while (enumerator.MoveNext())
                            {
                                GameClient current = enumerator.Current;
                                if (current.Player.Map == 1038 && Core.GetDistance(current.Player.X, current.Player.Y, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].X, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.LeftGate].Y) <= (short)19)
                                    current.Send(stream);
                            }
                            break;
                        }
                    }
                    else
                    {
                        dialog.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.");
                        dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                        break;
                    }
                case 3:
                    if ((int)client.Player.GuildID == (int)MsgSchedules.GuildWar.Winner.GuildID)
                    {
                        client.TerainMask = 0;
                        client.Teleport((ushort)162, (ushort)192, 1038);
                        break;
                    }
                    dialog.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.");
                    dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.RightGate)]
        public static void RightGate(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.AddText("Select the option you want to pursue.");
                    dialog.AddOption("Open~the~gate", (byte)1);
                    dialog.AddOption("Close gate.", (byte)2);
                    dialog.AddOption("Get inside.", (byte)3);
                    dialog.AddOption("Not~interested.", byte.MaxValue).FinalizeDialog();
                    break;
                case 1:
                    if ((client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.LeaderSpouse || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.HDeputyLeader) && (int)MsgSchedules.GuildWar.Winner.GuildID == (int)client.Player.GuildID)
                    {
                        if (DateTime.Now < MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].RightGateStamp.AddSeconds(30.0))
                        {
                            dialog.AddText(string.Format("You have to wait {0} seconds to open the gate again.", (object)(int)(MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].RightGateStamp.AddSeconds(30.0) - DateTime.Now).TotalSeconds));
                            dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                            break;
                        }
                        if (MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Mesh == SobNpc.StaticMesh.OpenRightGate)
                        {
                            dialog.AddText("Gate~is~already~opened.");
                            dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                            break;
                        }
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].RightGateStamp = DateTime.Now;
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Mesh = SobNpc.StaticMesh.OpenRightGate;
                        MsgUpdate msgUpdate = new MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].UID);
                        stream = msgUpdate.Append(stream, MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Mesh);
                        stream = msgUpdate.GetArray(stream);
                        using (IEnumerator<GameClient> enumerator = Server.GamePoll.Values.GetEnumerator())
                        {
                            while (enumerator.MoveNext())
                            {
                                GameClient current = enumerator.Current;
                                if (current.Player.Map == 1038U && Core.GetDistance(current.Player.X, current.Player.Y, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].X, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Y) <= (short)19)
                                    current.Send(stream);
                            }
                            break;
                        }
                    }
                    else
                    {
                        dialog.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.");
                        dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                        break;
                    }
                case 2:
                    if ((client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.LeaderSpouse || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == TheChosenProject.Role.Flags.GuildMemberRank.HDeputyLeader) && (int)MsgSchedules.GuildWar.Winner.GuildID == (int)client.Player.GuildID)
                    {
                        if (DateTime.Now < MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].RightGateStamp.AddSeconds(30.0))
                        {
                            dialog.AddText(string.Format("You have to wait {0} seconds to open the gate again.", (object)(int)(MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].RightGateStamp.AddSeconds(30.0) - DateTime.Now).TotalSeconds));
                            dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                            break;
                        }
                        if (MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Mesh == SobNpc.StaticMesh.RightGate)
                        {
                            dialog.AddText("Gate~is~already~closed.");
                            dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                            break;
                        }
                        //if (MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].HitPoints == 0)
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].HitPoints = MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].MaxHitPoints;
                        MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Mesh = SobNpc.StaticMesh.RightGate;
                        MsgUpdate msgUpdate = new MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].UID, 2);
                        stream = msgUpdate.Append(stream, MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Mesh);
                        stream = msgUpdate.Append(stream, MsgUpdate.DataType.Hitpoints, (long)MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].HitPoints);
                        stream = msgUpdate.GetArray(stream);
                        using (IEnumerator<GameClient> enumerator = Server.GamePoll.Values.GetEnumerator())
                        {
                            while (enumerator.MoveNext())
                            {
                                GameClient current = enumerator.Current;
                                if (current.Player.Map == 1038U && Core.GetDistance(current.Player.X, current.Player.Y, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].X, MsgSchedules.GuildWar.Furnitures[SobNpc.StaticMesh.RightGate].Y) <= (short)19)
                                    current.Send(stream);
                            }
                            break;
                        }
                    }
                    else
                    {
                        dialog.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.");
                        dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                        break;
                    }
                case 3:
                    if ((int)client.Player.GuildID == (int)MsgSchedules.GuildWar.Winner.GuildID)
                    {
                        client.TerainMask = 0;
                        client.Teleport((ushort)203, (ushort)176, 1038U);
                        break;
                    }
                    dialog.AddText("Sorry,~you~cannot~open~it.Only DSl or GLs can, from guild who dominated the pole.");
                    dialog.AddOption("Okay.", byte.MaxValue).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.HouseAdmin)]
        public static void HouseAdmin(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (client.MyHouse == null)
                    {
                        data.AddText("What can i do for you?");
                        data.AddOption("buy a house.", 1);
                        data.AddOption("buy house certificate.", 2);
                        data.AddOption("Visit my wife`s House.", 3);
                        data.AddOption("Just passing by.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    else if (client.MyHouse.Level == 0)
                    {
                        data.AddText("What can i do for you?");
                        data.AddOption("buy a house.", 1);
                        data.AddOption("buy house certificate.", 2);
                        data.AddOption("Visit my wife`s House.", 3);
                        data.AddOption("Just passing by.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    else if (client.MyHouse.Level == 1)
                    {
                        data.AddText("What can i do for you?");
                        data.AddOption("Visit house.", 4);
                        data.AddOption("Upgrade house.", 5);
                        data.AddOption("buy house certificate.", 2);
                        data.AddOption("Visit my wife`s House.", 3);
                        data.AddOption("Just passing by.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    else if (client.MyHouse.Level == 5)
                    {
                        data.AddText("As the owner of a Class 5 house, you`ll be able to hold a Grand Wedding. Additionally, you can upgrade it to Class 6");
                        data.AddText("~to get a more luxurious living space and more services.");
                        data.AddOption("I~wanna~go~home.", 4);
                        if (client.MyHouse.Level < 6)
                        {
                            data.AddOption("Upgrade~to~Class~6.", 20);
                            data.AddOption("Remove All furnitures.", 6);
                        }
                        data.AddOption("Visit my wife`s House.", 3);
                        data.AddOption("Just passing by.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("What can i do for you?");
                        data.AddOption("Visit house.", 4);
                        data.AddOption("Upgrade house.", 5);
                        data.AddOption("Remove All furnitures.", 6);
                        if (client.MyHouse.Level < 5)
                            data.AddOption("buy house certificate.", 2);
                        data.AddOption("Visit my wife`s House.", 3);
                        data.AddOption("Just passing by.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    break;
                case 20:
                    data.AddText("To upgrade your house to Class 6, you need to talk to the Class 6 House Admin in the Class 6 model house. I cannot help you in this matter.");
                    data.AddOption("Okay,~send~me~there.", 21);
                    data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    break;
                case 21:
                    client.Teleport(127, 138, 3995u);
                    break;
                case 6:
                    if (client.MyHouse != null)
                    {
                        client.MyHouse.Furnitures.Clear();
                        data.AddText("You furnitures remove Successful");
                        data.AddOption("Thank~you", byte.MaxValue);
                        data.AddAvatar(7).FinalizeDialog();
                    }
                    break;
                case 1:
                    if (client.MyHouse == null)
                    {
                        if (client.Inventory.Remove(721170u, 1u, stream))
                        {
                            client.MyHouse = new House(client.Player.UID);
                            data.AddText("You're create a house Successful. ");
                            data.AddOption("Thank~you", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry you not have house Permit");
                            data.AddOption("Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        }
                    }
                    break;
                case 5:
                    {
                        if (client.MyHouse == null)
                            break;
                        if (client.MyHouse.Level == 0)
                        {
                            data.AddText("You don`t have house.");
                            data.AddOption("Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        ushort House_ID;
                        House_ID = HouseTable.GetHouseId(client.MyHouse.Level);
                        if (House_ID != 0)
                        {
                            foreach (GameClient pClient in Server.GamePoll.Values)
                            {
                                if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                    pClient.Teleport(200, 200, 1036u);
                            }
                        }
                        if (client.MyHouse.Furnitures.Count != 0)
                        {
                            data.AddText("Please remove all your furnitures from your house.");
                            data.AddOption("Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        }
                        else if (client.MyHouse.Level == 1)
                        {
                            if (client.Inventory.Remove(721174u, 1u, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.");
                                data.AddOption("Thank you.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert for update.");
                                data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 2)
                        {
                            if (client.Inventory.Remove(711198u, 1u, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.");
                                data.AddOption("Thank you.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert(class 3) for update.");
                                data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 3)
                        {
                            if (client.Inventory.Remove(711200u, 1u, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.");
                                data.AddOption("Thank you.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert(class 4) for update.");
                                data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 4)
                        {
                            if (client.Inventory.Remove(711553u, 1u, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.");
                                data.AddOption("Thank you.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you not have Upgrade Cert(class 5) for update.");
                                data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You house is the best level");
                            data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.MyHouse == null)
                            break;
                        if (client.MyHouse.Level == 0)
                        {
                            data.AddText("You don`t have house.");
                            data.AddOption("Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        ushort HouseID2;
                        HouseID2 = 0;
                        ushort house_x2;
                        house_x2 = 0;
                        ushort house_y2;
                        house_y2 = 0;
                        if (client.MyHouse.Level == 1)
                        {
                            HouseID2 = 1098;
                            house_x2 = 32;
                            house_y2 = 39;
                        }
                        else if (client.MyHouse.Level == 2)
                        {
                            HouseID2 = 1099;
                            house_x2 = 53;
                            house_y2 = 83;
                        }
                        else if (client.MyHouse.Level == 3)
                        {
                            HouseID2 = 2080;
                            house_x2 = 78;
                            house_y2 = 57;
                        }
                        else if (client.MyHouse.Level == 4)
                        {
                            HouseID2 = 601;
                            house_x2 = 80;
                            house_y2 = 58;
                        }
                        else if (client.MyHouse.Level == 5)
                        {
                            HouseID2 = 3024;
                            house_x2 = 105;
                            house_y2 = 139;
                        }
                        else if (client.MyHouse.Level == 6)
                        {
                            HouseID2 = 3995;
                            house_x2 = 127;
                            house_y2 = 138;
                        }
                        if (HouseID2 == 0)
                            break;
                        if (client.Team != null)
                        {
                            Team.MemberInfo[] temates;
                            temates = client.Team.Temates;
                            foreach (Team.MemberInfo members in temates)
                            {
                                if (members.client != null && members.client.Player.UID != client.Player.UID && Core.GetDistance(client.Player.X, client.Player.Y, members.client.Player.X, members.client.Player.Y) < 18)
                                    members.client.Teleport(house_x2, house_y2, HouseID2, client.Player.UID);
                            }
                        }
                        client.Teleport(house_x2, house_y2, HouseID2, client.Player.UID);
                        break;
                    }
                case 3:
                    if (client.Player.SpouseUID != 0)
                    {
                        if (Server.GamePoll.ContainsKey(client.Player.SpouseUID))
                        {
                            GameClient MySpouse;
                            MySpouse = Server.GamePoll[client.Player.SpouseUID];
                            if (MySpouse.MyHouse != null)
                            {
                                ushort HouseID;
                                HouseID = 0;
                                ushort house_x;
                                house_x = 0;
                                ushort house_y;
                                house_y = 0;
                                if (MySpouse.MyHouse.Level == 1)
                                {
                                    HouseID = 1098;
                                    house_x = 33;
                                    house_y = 40;
                                }
                                else if (MySpouse.MyHouse.Level == 2)
                                {
                                    HouseID = 1099;
                                    house_x = 53;
                                    house_y = 83;
                                }
                                else if (MySpouse.MyHouse.Level == 3)
                                {
                                    HouseID = 2080;
                                    house_x = 78;
                                    house_y = 57;
                                }
                                else if (MySpouse.MyHouse.Level == 4)
                                {
                                    HouseID = 601;
                                    house_x = 80;
                                    house_y = 58;
                                }
                                else if (MySpouse.MyHouse.Level == 5)
                                {
                                    HouseID = 3024;
                                    house_x = 105;
                                    house_y = 139;
                                }
                                else if (client.MyHouse.Level == 6)
                                {
                                    HouseID = 3995;
                                    house_x = 127;
                                    house_y = 138;
                                }
                                client.Teleport(house_x, house_y, HouseID, MySpouse.Player.UID);
                            }
                            else
                            {
                                data.AddText("Sorry, but you vife not have House");
                                data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you vife is not online.");
                            data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry, but you vife not have House");
                        data.AddOption("Ah Ok", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("Do you want a memorable wedding ceremony? it`s not easy, you know However,");
                    data.AddText("I can help you with that. First of all, we need a professional emcee.");
                    data.AddOption("House Permit: 99 CPs.", 10);
                    data.AddOption("Let me think about it.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                    break;
                case 10:
                    {
                        ushort cost;
                        cost = 99;
                        int value;
                        value = cost;
                        if (client.Player.ConquerPoints >= value)
                        {
                            client.Player.ConquerPoints -= value;
                            client.Inventory.Add(stream, 721170, 1, 0, 0, 0);
                            break;
                        }
                        data.AddText("Sorry, but you don`t have enough CPs to buy that.");
                        data.AddOption("Alright.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 11:
                    {

                        int value2;
                        value2 = 199;
                        if (client.Player.ConquerPoints >= value2)
                        {
                            client.Player.ConquerPoints -= value2;
                            client.Inventory.Add(stream, 721174u, 1, 0, 0, 0);
                            break;
                        }
                        data.AddText("Sorry, but you don`t have enough CPs to buy that.");
                        data.AddOption("Alright.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 12:
                    {

                        int value3;
                        value3 = 259;
                        if (client.Player.ConquerPoints >= value3)
                        {
                            client.Player.ConquerPoints -= value3;
                            client.Inventory.Add(stream, 711198u, 1, 0, 0, 0);
                            break;
                        }
                        data.AddText("Sorry, but you don`t have enough CPs to buy that.");
                        data.AddOption("Alright.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 13:
                    {

                        int value4;
                        value4 = 299;
                        if (client.Player.ConquerPoints >= value4)
                        {
                            client.Player.ConquerPoints -= value4;
                            client.Inventory.Add(stream, 711200u, 1, 0, 0, 0);
                            break;
                        }
                        else
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.");
                        data.AddOption("Alright.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 14:
                    {

                        int value5;
                        value5 = 9999;
                        if (client.Player.ConquerPoints >= value5)
                        {
                            client.Player.ConquerPoints -= value5;
                            client.Inventory.Add(stream, 711553u, 1, 0, 0, 0);
                            break;
                        }
                        else
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.");
                        data.AddOption("Alright.", byte.MaxValue).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 7:
                case 8:
                case 9:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                    break;
            }
        }

        [Npc(NpcID.Barber)]
        public static void Barber(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                case 100:
                    data.AddText("I`m capable of doing more hairstyles now! A New Dynasty Hairstyle is worth 10000 silvers. Previous hairstyles cost 500 silvers.");
                    data.AddOption("New~Dynasty~Hairstyles.", 1);
                    data.AddOption("New~styles.", 2);
                    data.AddOption("Nostalgic~styles.", 3);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(111).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("Which style would you like to change to?");
                    data.AddOption("New~Dynasty~Hairstyle~01", 10);
                    data.AddOption("New~Dynasty~Hairstyle~02", 11);
                    data.AddOption("New~Dynasty~Hairstyle~03", 12);
                    data.AddOption("New~Dynasty~Hairstyle~04", 13);
                    data.AddOption("New~Dynasty~Hairstyle~05", 14);
                    data.AddOption("Next~Page.", 4);
                    data.AddAvatar(111).FinalizeDialog();
                    break;
                case 16:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 48);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 15:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 47);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 14:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 46);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 13:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 45);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 12:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 44);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 11:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 43);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 42);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                default:
                    {
                        if (client.Player.Hair < 300)
                            client.Player.Hair = 300;
                        ushort NewHaire;
                        NewHaire = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + Option);
                        if (client.Player.Money >= 500)
                        {
                            client.Player.Money -= 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                            client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                            client.Player.Hair = NewHaire;
                            client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        else
                            data.AddText("You do not have 500 silvers with you.").AddOption("I~see.", byte.MaxValue).AddAvatar(111)
                                .FinalizeDialog();
                        break;
                    }
                case 17:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 49);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 21:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 50);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 22:
                    if (client.Player.Money < 10000)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 10000)
                    {
                        client.Player.Money -= 10000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 51);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It was completed. Are you satisfied with your new hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 1);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 56:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 70);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("Done! What do you think? Do you like it?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 6);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 57:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 71);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("Done! What do you think? Do you like it?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 6);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 70:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 72);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("Done! What do you think? Do you like it?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 6);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 71:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 73);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("Done! What do you think? Do you like it?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 6);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 72:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 74);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("Done! What do you think? Do you like it?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 6);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 6:
                    if (client.Player.VipLevel < 4)
                    {
                        data.AddText("Sorry, your VIP Level has to be at least Level 4 to purchase this hairstyle.");
                        data.AddOption("Alright.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                        break;
                    }
                    data.AddText("You can try out the different hairstyles, until you find your favorite!");
                    data.AddOption("(Level~4+)~VIP~Hairstyle~1.", 56);
                    data.AddOption("(Level~4+)~VIP~Hairstyle~2.", 57);
                    data.AddOption("(Level~4+)~VIP~Hairstyle~3.", 70);
                    data.AddOption("(Level~4+)~VIP~Hairstyle~4.", 71);
                    data.AddOption("(Level~4+)~VIP~Hairstyle~5.", 72);
                    data.AddOption("I~won`t~change~my~hairstyle.");
                    data.AddAvatar(111).FinalizeDialog();
                    break;
                case 4:
                    data.AddText("Which style would you like to change to?");
                    data.AddOption("New~Dynasty~Hairstyle~06", 15);
                    data.AddOption("New~Dynasty~Hairstyle~07", 16);
                    data.AddOption("New~Dynasty~Hairstyle~08", 17);
                    data.AddOption("New~Dynasty~Hairstyle~09", 21);
                    data.AddOption("New~Dynasty~Hairstyle~10", 22);
                    data.AddOption("Previous.", 1);
                    data.AddAvatar(111).FinalizeDialog();
                    break;
                case 30:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 30);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 31:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 33);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 32:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 34);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 33:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 35);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 34:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 36);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 35:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 37);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 36:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 38);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 37:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 39);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 38:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 40);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 2);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("Which~style~would~you~like~to~select~from?");
                    data.AddOption("New~HairStyle01", 30);
                    data.AddOption("New~HairStyle02", 31);
                    data.AddOption("New~HairStyle03", 32);
                    data.AddOption("New~HairStyle04", 33);
                    data.AddOption("New~HairStyle05", 34);
                    data.AddOption("New~HairStyle06", 35);
                    data.AddOption("New~HairStyle07", 36);
                    data.AddOption("Next~Page.", 5);
                    data.AddAvatar(111).FinalizeDialog();
                    break;
                case 5:
                    data.AddText("Which~style~would~you~like~to~select~from?");
                    data.AddOption("New~HairStyle08", 37);
                    data.AddOption("New~HairStyle09", 38);
                    data.AddOption("Previous.", 2);
                    data.AddAvatar(111).FinalizeDialog();
                    break;
                case 44:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 10);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 3);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 45:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 11);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 3);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 46:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 12);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 3);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 47:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 13);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 3);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 48:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 14);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 3);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 49:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100 + 15);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 3);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 50:
                    if (client.Player.Money < 500)
                    {
                        data.AddText("You~have~not~enough~money.");
                        data.AddOption("I`m~sorry.");
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    else if (client.Player.Money >= 500)
                    {
                        client.Player.Money -= 500;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Player.Hair = (ushort)(client.Player.Hair - (int)client.Player.Hair % 100);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "Health");
                        client.Player.SendString(stream, MsgStringPacket.StringID.Sound, 0u, false, "sound/gethp.wav", "1");
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgUpdate.DataType.HairStyle);
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                        data.AddOption("Cool!");
                        data.AddOption("I~want~to~change~it.", 3);
                        data.AddAvatar(111);
                        data.FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("Which style would you like to change to?");
                    data.AddOption("Nostalgic01", 44);
                    data.AddOption("Nostalgic02", 45);
                    data.AddOption("Nostalgic03", 46);
                    data.AddOption("Nostalgic04", 47);
                    data.AddOption("Nostalgic05", 48);
                    data.AddOption("Nostalgic06", 49);
                    data.AddOption("Bald~head", 50);
                    data.AddOption("I~chanded~my~mind.");
                    data.AddAvatar(111).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.GuildGateKeeper)]
        public static void GuildGateKeeper(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Are~you~going~to~leave~here?");
                    data.AddOption("Yes.", 1);
                    data.AddOption("No.~Wait~a~moment.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(428, 378, 1002u);
                    break;
            }
        }

        [Npc(NpcID.GuildConductor)]
        public static void GuildConductor(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            string day;
            day = ISchedule.Schedules[ISchedule.EventID.CaptureTheFlag].StartDay;
            uint Hour;
            Hour = ISchedule.Schedules[ISchedule.EventID.CaptureTheFlag].StartHour;
            uint minute;
            minute = ISchedule.Schedules[ISchedule.EventID.CaptureTheFlag].StartMinute;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("What~can~I~do~for~you?");
                    data.AddOption("Enter~the~guild~area.", 1);
                    //data.AddOption("Buy~statue.", 2);
                    data.AddOption("Claim~the~Top5~Killer/Reviver~Reward.", 9);
                    //data.AddOption("Sign up Capture The Flag.", 5);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(286).FinalizeDialog();
                    break;
                case 9:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            if (!AtributesStatus.IsWater(client.Player.Class))
                            {
                                var top5kills = MsgSchedules.GuildWar.Scoreboards.Values.Where(x => !AtributesStatus.IsWater(x.Class)).OrderByDescending(x => x.MainPoints).Take(5);
                                var rank = 1;
                                bool Exists = false;

                                foreach (var user in top5kills)
                                {
                                    if (client.Player.UID == user.UID)
                                    {
                                        Exists = true;
                                        break;
                                    }
                                    rank++;
                                }
                                if (Exists == false)
                                {
                                    client.CreateBoxDialog("you're not in top 5 killers.");
                                    break;
                                }
                                if (rank == 1 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 3, 0, 0, 0);
                                    client.Inventory.Add(stream, 720027, 5, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Killer !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 2 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 2, 0, 0, 0);
                                    client.Inventory.Add(stream, 720027, 5, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Killer !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 3 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                    client.Inventory.Add(stream, 720027, 5, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Killer !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 4 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);//720027
                                    client.Inventory.Add(stream, 720027, 3, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Killer !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 5 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);//720027
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Killer !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else
                                {
                                    client.CreateBoxDialog("You already claimed your prize!");
                                }
                            }
                            else
                            {
                                var top5rev = MsgSchedules.GuildWar.Scoreboards.Values.Where(x => AtributesStatus.IsWater(x.Class)).OrderByDescending(x => x.MainPoints).Take(5);
                                var rank = 1;
                                bool Exists = false;
                                foreach (var user in top5rev)
                                {
                                    if (client.Player.UID == user.UID)
                                    {
                                        Exists = true;
                                        break;
                                    }
                                    rank++;
                                }
                                if (Exists == false)
                                {
                                    client.CreateBoxDialog("you're not in top 5 reviver.");
                                    break;
                                }
                                if (rank == 1 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 3, 0, 0, 0);
                                    client.Inventory.Add(stream, 720027, 5, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Reviver !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 2 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 2, 0, 0, 0);
                                    client.Inventory.Add(stream, 720027, 5, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Reviver !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 3 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                    client.Inventory.Add(stream, 720027, 5, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Reviver !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 4 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);//720027
                                    client.Inventory.Add(stream, 720027, 3, 0, 0, 0);
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Reviver !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else if (rank == 5 && !MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed)
                                {
                                    client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);//720027
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has claimed his reward as the Top " + rank + " Reviver !", MsgMessage.MsgColor.white, MsgMessage.ChatMode.Talk).GetArray(stream));
                                    MsgSchedules.GuildWar.Scoreboards[client.Player.UID].Claimed = true;
                                }
                                else
                                {
                                    client.CreateBoxDialog("you're not in top 5 revivers.");
                                }
                            }

                        }
                        break;
                    }
                case 4:
                    if (MsgSchedules.CaptureTheFlag.Proces != ProcesType.Dead)
                        break;
                    if (client.Player.MyGuild != null && client.Player.MyGuild.CTF_Rank >= 1 && client.Player.MyGuild.CTF_Rank <= 3)
                    {
                        if (client.Player.MyGuildMember.CTF_Claimed == 1)
                        {
                            data.AddText("Sorry, you already claimed the reward.");
                            data.AddOption("Ah~yes.", byte.MaxValue).AddAvatar(286).FinalizeDialog();
                        }
                        else if (client.Player.GuildRank == Flags.GuildMemberRank.GuildLeader)
                        {
                            if (client.Player.MyGuild.ClaimCtfReward == 1)
                            {
                                data.AddText("Sorry, you already claimed the reward.");
                                data.AddOption("Ah~yes.", byte.MaxValue).AddAvatar(286).FinalizeDialog();
                                break;
                            }
                            client.Player.MyGuild.ClaimCtfReward = 1u;
                            //client.Player.ConquerPoints += (int)client.Player.MyGuild.GetLeaderReward()[0];
                            client.Player.Money += (int)client.Player.MyGuild.GetLeaderReward()[1];
                            IEventRewards.Add("CaptureTheFlag[Leader]", client.Player.MyGuild.GetLeaderReward()[0], (uint)client.Player.MyGuild.GetLeaderReward()[1], "", "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                            client.Player.MyGuild.CTF_Next_ConquerPoints = client.Player.MyGuild.GetLeaderReward()[0];
                            client.Player.MyGuild.CTF_Next_Money = client.Player.MyGuild.GetLeaderReward()[1];
                            client.Player.MyGuildMember.CTF_Claimed = 1;
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded " + client.Player.MyGuild.GetLeaderReward()[0].ToString("0,0") + " ConquerPoints for the domination the CaptureTheFlag rank No." + client.Player.MyGuild.CTF_Rank + " .", MsgMessage.MsgColor.red, MsgMessage.ChatMode.TopLeft).GetArray(stream));
                        }
                        else
                        {
                            IEventRewards.Add("CaptureTheFlag", client.Player.MyGuildMember.RewardConquerPoints, (uint)client.Player.MyGuildMember.RewardMoney, "", "[" + client.Player.Name + "]: " + DateTime.Now.ToString("d/M/yyyy (H:mm)"));
                            //client.Player.ConquerPoints += (int)client.Player.MyGuildMember.RewardConquerPoints;
                            client.Player.Money += (int)client.Player.MyGuildMember.RewardMoney;
                            client.Player.MyGuildMember.CTF_Claimed = 1;
                        }
                    }
                    else
                    {
                        data.AddText("Sorry, your guild is not top 3.");
                        data.AddOption("Ah~yes.", byte.MaxValue).AddAvatar(286).FinalizeDialog();
                    }
                    break;
                case 6:
                    client.Teleport(232, 385, 3868u);
                    break;
                case 5:
                    if (client.Player.MyGuild == null)
                    {
                        data.AddText("Sorry you not have Guild.");
                        data.AddAvatar(123).FinalizeDialog();
                    }
                    else if (!MsgSchedules.CaptureTheFlag.Join(client, stream))
                    {
                        data.AddText($"The Capture The Flag will open at Every {day} , {Hour}:{minute}");
                        data.AddAvatar(123).FinalizeDialog();
                    }
                    break;
                case 1:
                    if (MsgSchedules.GuildWar.Proces == ProcesType.Alive)
                    {
                        switch ((byte)ServerKernel.NextAsync(1, 14))
                        {
                            case 1:
                                client.Teleport(326, 374, 1038u);
                                break;
                            case 2:
                                client.Teleport(299, 371, 1038u);
                                break;
                            case 3:
                                client.Teleport(293, 352, 1038u);
                                break;
                            case 4:
                                client.Teleport(262, 337, 1038u);
                                break;
                            case 5:
                                client.Teleport(285, 324, 1038u);
                                break;
                            case 6:
                                client.Teleport(315, 289, 1038u);
                                break;
                            case 7:
                                client.Teleport(323, 268, 1038u);
                                break;
                            case 8:
                                client.Teleport(351, 282, 1038u);
                                break;
                            case 9:
                                client.Teleport(371, 305, 1038u);
                                break;
                            case 10:
                                client.Teleport(370, 326, 1038u);
                                break;
                            case 11:
                                client.Teleport(357, 335, 1038u);
                                break;
                            case 12:
                                client.Teleport(333, 330, 1038u);
                                break;
                            default:
                                client.Teleport(322, 321, 1038u);
                                break;
                        }
                    }
                    else
                        client.Teleport(349, 340, 1038u);
                    break;
                case 2:
                    data.AddText("A~statue~costs~50,000~silver.~Are~you~sure~that~you~want~to~buy?");
                    data.AddOption("Yeah.", 3);
                    data.AddOption("No,~thanks.", byte.MaxValue);
                    data.AddAvatar(286).FinalizeDialog();
                    break;
                case 3:
                    if (client.Player.Money >= 50000)
                    {
                        client.Player.Money -= 50000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(286).FinalizeDialog();
                        }
                        else
                            client.Inventory.Add(stream, 720020u, 1, 0, 0, 0);
                    }
                    else
                    {
                        data.AddText("Sorry,~you~do~not~have~50000~silver.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(286).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.FurnitureStore)]
        public static void FurnitureStore(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Welcome!~This~is~the~Twin~City~Furniture~Store.~Take~a~look~around.~I~have~the~best~furniture~in~Twin~City.");
                    data.AddOption("Show~me~your~wares.", 1);
                    data.AddOption("Not~my~concern.", byte.MaxValue);
                    data.AddAvatar(188).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(52, 70, 1511u);
                    break;
            }
        }

        [Npc(NpcID.Tinter)]
        public static void Tinter(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Welcome!~Please~wear~the~armors~first.~What~armors~do~you~want~me~to~dye?");
                    data.AddOption("Headgear", 1);
                    data.AddOption("Armor", 2);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 2:
                    data.AddText("There~are~seven~style~for~you~to~choose.~You~can~try~all~the~style~for~no~more~charges.~What~color~do~you~like~best?");
                    data.AddOption("Style~1", 13);
                    data.AddOption("Style~2", 14);
                    data.AddOption("Style~3", 15);
                    data.AddOption("Style~4", 16);
                    data.AddOption("Style~5", 17);
                    data.AddOption("Style~6", 18);
                    data.AddOption("Style~7", 19);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                    {
                        if (client.Equipment.TryGetEquip(Flags.ConquerItem.Armor, out var Coat))
                        {
                            Coat.Color = (Flags.Color)(Option - 10);
                            Coat.Mode = Flags.ItemMode.Update;
                            Coat.Send(client, stream);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        break;
                    }
                case 1:
                    data.AddText("There~are~seven~style~for~you~to~choose.~You~can~try~all~the~style~for~no~more~charges.~What~color~do~you~like~best?");
                    data.AddOption("Style~1", 3);
                    data.AddOption("Style~2", 4);
                    data.AddOption("Style~3", 5);
                    data.AddOption("Style~4", 6);
                    data.AddOption("Style~5", 7);
                    data.AddOption("Style~6", 8);
                    data.AddOption("Style~7", 9);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                    {
                        if (client.Equipment.TryGetEquip(Flags.ConquerItem.Head, out var Cap))
                        {
                            Cap.Color = (Flags.Color)Option;
                            Cap.Mode = Flags.ItemMode.Update;
                            Cap.Send(client, stream);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        break;
                    }
                case 10:
                case 11:
                case 12:
                    break;
            }
        }


        [Npc(NpcID.ArenaNpc)]
        public static void ArenaNpc(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Welcome to the arenas! We offer two types of challenges for you:");
                    data.AddText("\n1. Kill Counter Arena: Track your kills and deaths.");
                    data.AddText("\n2. Pro Arena: Test your skills by seeing who excels in hits and misses.");
                    data.AddOption("Enter the Kill Counter Arena", 1);
                    data.AddOption("Enter the Pro Arena", 2);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 2:
                    data.Text("This is the Unlimited Stamina envoy.");
                    data.AddInput("Enter ID:", 5);
                    data.Option("Leave", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 5:
                    {
                        if (uint.TryParse(Input, out var result))
                        {
                            if (UnlimitedArenaRooms.Maps.ContainsKey(result))
                            {
                                GameMap map2;
                                map2 = Server.ServerMaps[700u];
                                uint mapId2;
                                mapId2 = UnlimitedArenaRooms.Maps[result];
                                ushort x2;
                                x2 = 0;
                                ushort y2;
                                y2 = 0;
                                map2.GetRandCoord(ref x2, ref y2);
                                client.Teleport(x2, y2, 700u, mapId2);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                            }
                            else
                            {
                                GameMap map;
                                map = Server.ServerMaps[700u];
                                uint mapId;
                                mapId = map.GenerateDynamicID();
                                UnlimitedArenaRooms.Maps.Add(result, mapId);
                                ushort x;
                                x = 0;
                                ushort y;
                                y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700u, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                            }
                        }
                        break;
                    }
                case 1:
                    if (client.Player.Money >= 50)
                    {
                        client.Player.Money -= 50;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        client.Teleport(51, 69, 1005);
                    }
                    else
                        data.AddText("You do not have 50 silvers with you.");
                    data.AddOption("I~see.", byte.MaxValue);
                    data.AddAvatar(7).FinalizeDialog();
                    break;
                case 3:
                case 4:
                    break;
            }
        }

        [Npc(NpcID.SurgeonMiracle)]
        public static void SurgeonMiracle(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Do~you~want~to~have~your~size~changed~so~that~you~can~become~much~more~adorable?~Now~here~is~a~precious~chance~for~you.");
                    data.AddOption("I~want~to~change~my~size.", 1);
                    data.AddOption("I~don`t~want~to~change.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("If~you~pay~me~one~dragonball,~I~can~have~your~size~changed.~You~will~become~more~attractive~and~start~a~fresh~life.~");
                    data.AddText("By~the~way,~to~avoid~some~unexpected~things,~make~sure~you~are~not~in~any~disguise~form.");
                    data.AddOption("Here~is~a~(x2)~dragonball.", 2);
                    data.AddOption("I~have~no~dragonball.", byte.MaxValue);
                    data.AddAvatar(67).FinalizeDialog();
                    break;
                case 2:
                    if (client.Inventory.Contain(1088000u, 2u, 0))
                    {
                        switch (client.Player.Body)
                        {
                            case 1003:
                                client.Player.Body = 1004;
                                break;
                            case 1004:
                                client.Player.Body = 1003;
                                break;
                            case 2001:
                                client.Player.Body = 2002;
                                break;
                            case 2002:
                                client.Player.Body = 2001;
                                break;
                        }
                        client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        client.Inventory.Remove(1088000u, 1u, stream);
                        data.AddText("You Size was change Successful !");
                        data.AddOption("Thank~you~master.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("Sorry,~there~is~no~x2~dragonball~in~your~inventory.~I~can`t~have~your~size~changed.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(67).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.Confiscator)]
        public unsafe static void Confiscator(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("The red/black name can redeem their detained equipment within 7 days. The CPs they pay for their guilt will be rewarded to the");
                    data.AddText("~who killed them. If they do not pay, the equipment detained will be given to the one who killed them as rewards.");
                    data.AddOption("I~want~to~redeem~my~equipment.", 1);
                    data.AddOption("I~want~to~claim~my~rewards.", 3);
                    data.AddOption("What?", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("You can pay some CPs to redeem your equipment.");
                    data.AddOption("I~want~my~equipment.", 2);
                    data.AddOption("Let~me~think.", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 2:
                    if (!client.Confiscator.IsEmptyReadem())
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 336u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                    }
                    else
                    {
                        data.AddText("You do not have any equipment detained.");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(102).FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("The red/black name you killed can redeem equipment within 7 days. You will be rewarded the CPs that he/she pay for the guilt.");
                    data.AddText("~If not, you will get the detained equipment as rewards.");
                    data.AddOption("I~want~my~equipment.", 4);
                    data.AddOption("Let~me~think.", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 4:
                    if (!client.Confiscator.IsEmptyClaim())
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 337u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action2;
                        action2 = actionQuery;
                        client.Send(stream.ActionCreate(&action2));
                    }
                    else
                    {
                        data.AddText("Sorry, you do not have anything to claim now.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(102).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.JailConfiscator)]
        public unsafe static void JailConfiscator(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("The red/black name can redeem their detained equipment within 7 days. The CPs they pay for their guilt will be rewarded to the");
                    data.AddText("~who killed them. If they do not pay, the equipment detained will be given to the one who killed them as rewards.");
                    data.AddOption("I~want~to~redeem~my~equipment.", 1);
                    data.AddOption("I~want~to~claim~my~rewards.", 3);
                    data.AddOption("What?", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 1:
                    data.AddText("You can pay some CPs to redeem your equipment.");
                    data.AddOption("I~want~my~equipment.", 2);
                    data.AddOption("Let~me~think.", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 2:
                    if (!client.Confiscator.IsEmptyReadem())
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 336u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                    }
                    else
                    {
                        data.AddText("You do not have any equipment detained.");
                        data.AddOption("Got~it.", byte.MaxValue);
                        data.AddAvatar(102).FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("The red/black name you killed can redeem equipment within 7 days. You will be rewarded the CPs that he/she pay for the guilt.");
                    data.AddText("~If not, you will get the detained equipment as rewards.");
                    data.AddOption("I~want~my~equipment.", 4);
                    data.AddOption("Let~me~think.", byte.MaxValue);
                    data.AddAvatar(102).FinalizeDialog();
                    break;
                case 4:
                    if (!client.Confiscator.IsEmptyClaim())
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.dwParam = 337u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action2;
                        action2 = actionQuery;
                        client.Send(stream.ActionCreate(&action2));
                    }
                    else
                    {
                        data.AddText("Sorry, you do not have anything to claim now.");
                        data.AddOption("I~see.", byte.MaxValue);
                        data.AddAvatar(102).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.GarmentShopKeeper)]
        public unsafe static void GarmentShopKeeper(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.Type = ActionType.OpenDialog;
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 502u;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.MillionaireLee)]
        public static void MillionaireLee(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hunting~and~mining~for~the~treasure~is~an~exciting~thing.~However,~they~also~pile~up~in~your~inventories.")
                    .AddOption("Pack~PowerEXPBalls~for~me!", 1)
                    //.AddOption("Pack~Normal~Gems.", 7)
                    //.AddOption("Pack~EXP~Balls~for~me!", 32)
                    .AddOption("Pack~Meteors.", 34)
                    .AddOption("Pack~DragonBalls.", 36)
                    .AddOption("Pack~Meteor~Scroll.", 38)
                    .AddOption("Pack~DragonBall~Scrolls.", 40)
                    .AddOption("Just~passing~by.", 255)
                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 40:
                    {
                        data.AddText("10 DragonBall Scrolls can be packed into a Super DragonBall Scroll. Would you like me to pack them for you?")
                           .AddOption("Yes,~please.", 41)
                           .AddOption("Bye.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBallScroll, 10))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBallScroll, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MegaDBPack, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 DragonBall Scrolls.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 38:
                    {
                        data.AddText("10 Meteor Scrolls can be packed into a Super Meteor Scroll. Would you like me to pack them for you?")
                           .AddOption("Yes,~please.", 39)
                           .AddOption("Bye.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 39:
                    {
                        if (client.Inventory.Contain(Database.ItemType.MeteorScroll, 10, 0))
                        {
                            client.Inventory.Remove(Database.ItemType.MeteorScroll, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MegaMetsPack, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 meteor scrolls.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 36:
                    {
                        data.AddText("10 DragonBall can be packed into a DragonBall Pack. Would you like me to pack them for you?")
                           .AddOption("Yes,~please.", 37)
                           .AddOption("Bye.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 37:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 10))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.DragonBallScroll, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 DragonBall.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }

                case 34:
                    {
                        data.AddText("10 Meteors can be packed into a Meteor Pack. Would you like me to pack them for you?")
                            .AddOption("Yes,~please.", 35)
                            .AddOption("Bye.", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 35:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 10, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                        }
                        else if (client.Inventory.Contain(Database.ItemType.Meteor, 10, 0))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 meteors.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 32:
                    {
                        data.AddText("Pay 100,000 Silver and give me 5 EXP Balls, I can pack them into an EXP Ball Gift Box for you!")
                                                    .AddOption("Pack~EXP~Balls~for~me!", 33)
                                                    .AddOption("Bye.", 255)
                                                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 33:
                    {
                        if (client.Inventory.Contain(Database.ItemType.ExpBall, 5, 1))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Inventory.Remove(Database.ItemType.ExpBall, 5, stream);
                                client.Inventory.Add(stream, 727464, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            }
                            else
                            {
                                data.AddText("You do not have 100,000 silvers with you.")
                 .AddOption("My~bad.", 255)
                 .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.Inventory.Contain(Database.ItemType.ExpBall, 5, 0))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Inventory.Remove(Database.ItemType.ExpBall, 5, stream);
                                client.Inventory.Add(stream, 727464, 1);
                            }
                            else
                            {
                                data.AddText("You do not have 100,000 silvers with you.")
                 .AddOption("My~bad.", 255)
                 .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 EXP Balls.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 7:
                    {
                        data.AddText("Which kind of Normal Gems do you want to pack up?")
                   .AddOption("Glory~Gems.", 8)
                   .AddOption("Thunder~Gems.", 9)
                   .AddOption("Kylin~Gems.", 10)
                   .AddOption("Rainbow~Gems.", 11)
                   .AddOption("Fury~Gems.", 12)
                   .AddOption("Next~page.", 13)
                   .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        data.AddText("Which kind of Normal Gems do you want to pack up?")
                  .AddOption("Dragon~Gems.", 14)
                  .AddOption("Phoenix~Gems.", 15)
                  .AddOption("Violet~Gems.", 16)
                  .AddOption("Moon~Gems.", 17)
                  .AddOption("Tortoise~Gems.", 18)
                  .AddOption("Back~page.", 7)
                  .AddOption("Just~passing~by.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 18:
                    {
                        data.AddText("5 Normal Tortoise Gems can be packed into a Tortoise Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 29)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 29:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalTortoiseGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalTortoiseGem), 5, stream);
                            client.Inventory.Add(stream, 727069, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Tortoise Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 17:
                    {
                        data.AddText("5 Normal Moon Gems can be packed into a Moon Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 28)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalMoonGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalMoonGem), 5, stream);
                            client.Inventory.Add(stream, 727068, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Moon Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 16:
                    {
                        data.AddText("5 Normal Violet Gems can be packed into a Violet Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 27)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 27:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalVioletGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalVioletGem), 5, stream);
                            client.Inventory.Add(stream, 727067, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Violet Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 15:
                    {
                        data.AddText("5 Normal Phoenix Gems can be packed into a Phoenix Gem Pack! Would you like me to pack them for you?")
                .AddOption("Yes,~please.", 26)
                .AddOption("Bye.", 255)
                .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 26:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalPhoenixGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalPhoenixGem), 5, stream);
                            client.Inventory.Add(stream, 727066, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Phoenix Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 14:
                    {
                        data.AddText("5 Normal Dragon Gems can be packed into a Dragon Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 25)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 25:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalDragonGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalDragonGem), 5, stream);
                            client.Inventory.Add(stream, 727065, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Dragon Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 12:
                    {
                        data.AddText("5 Normal Fury Gems can be packed into a Fury Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 24)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 24:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalFuryGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalFuryGem), 5, stream);
                            client.Inventory.Add(stream, 727064, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Fury Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 11:
                    {
                        data.AddText("5 Normal Rainbow Gems can be packed into a Rainbow Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 23)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalRainbowGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalRainbowGem), 5, stream);
                            client.Inventory.Add(stream, 727063, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Rainbow Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("5 Normal Kylin Gems can be packed into a Kylin Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 22)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalKylinGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalKylinGem), 5, stream);
                            client.Inventory.Add(stream, 727062, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Kylin Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 9:
                    {
                        data.AddText("5 Normal Thunder Gems can be packed into a Thunder Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 21)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalThunderGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalThunderGem), 5, stream);
                            client.Inventory.Add(stream, 727061, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Thunder Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }

                case 8:
                    {
                        data.AddText("5 Normal Glory Gems can be packed into a Glory Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 20)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalGloryGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalGloryGem), 5, stream);
                            client.Inventory.Add(stream, 727060, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Normal Glory.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("10 +3 Stones can be packed into a +3 Stone Pack. Would you like me to pack them for you?")
                .AddOption("Yes,~please.", 6)
                .AddOption("Bye.", 255)
                .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(730003, 10))
                        {
                            client.Inventory.Remove(730003, 10, stream);
                            client.Inventory.Add(stream, 729023, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 +3 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("10 +2 Stones can be packed into a +2 Stone Pack. Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 4)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(730002, 10))
                        {
                            client.Inventory.Remove(730002, 10, stream);
                            client.Inventory.Add(stream, 729022, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 +2 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 1:
                    {
                        data.AddText("Pay 500,000 Silver and give me 10 PowerEXPBalls, I can pack them into an PowerEXPBall Gift Box for you!")
                                                    .AddOption("Pack~PowerEXPBalls~for~me!", 2)
                                                    .AddOption("Bye.", 255)
                                                    .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 2:
                    {

                        if (client.Inventory.Contain(722057, 10, 0))
                        {
                            if (client.Player.Money >= 500000)
                            {
                                client.Player.Money -= 500000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Inventory.Remove(722057, 10, stream);
                                client.Inventory.Add(stream, 720758, 1);
                            }
                            else
                            {
                                data.AddText("Sorry, you don`t have 500,000 Silver.")
                      .AddOption("My~bad.", 255)
                      .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 PowerEXPBalls.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
            }
        }


        [Npc(NpcID.LotteryCollectorWong)]
        public static void LotteryCollectorWong(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I~am~fond~of~collecting~all~kinds~of~treasure.~If~you~happen~to~have~any~Disguise Amulets,~Life Fruit Basket,~or");
                    data.AddText("~PenitenceAmulets,~you~may~sell~them~to~me.~I~will~pay~you~ten~CPs~for~each~one.");
                    data.AddOption("Here~are~my~Disguise~Amulets.", 1);
                    data.AddOption("Here~are~my~Life~Fruit~Baskets.", 2);
                    data.AddOption("Here~are~my~Penitence~Amulets.", 3);
                    data.AddOption("Really?~I~don`t~believe~it.", byte.MaxValue);
                    data.AddAvatar(10).FinalizeDialog();
                    break;
                case 1:
                    if (client.Inventory.Contain(723724u, 1u, 0))
                    {
                        client.Inventory.Remove(723724u, 1u, stream);
                        int value;
                        value = 15;
                        //client.Player.ConquerPoints += value;
                        data.AddText("You receive 15 ConquerPoints for you item.");
                        data.AddOption("Ok~thank~you.", byte.MaxValue);
                        data.AddAvatar(10).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.");
                        data.AddOption("See~you~again.", byte.MaxValue);
                        data.AddAvatar(10).FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Inventory.Contain(723725u, 1u, 0))
                    {
                        client.Inventory.Remove(723725u, 1u, stream);
                        int value2;
                        value2 = 15;
                        //client.Player.ConquerPoints += value2;
                        data.AddText("You receive 15 ConquerPoints for you item.");
                        data.AddOption("Ok~thank~you.", byte.MaxValue);
                        data.AddAvatar(10).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.");
                        data.AddOption("See~you~again.", byte.MaxValue);
                        data.AddAvatar(10).FinalizeDialog();
                    }
                    break;
                case 3:
                    if (client.Inventory.Contain(723727u, 1u, 0))
                    {
                        client.Inventory.Remove(723727u, 1u, stream);
                        int value3;
                        value3 = 15;
                        //client.Player.ConquerPoints += value3;
                        data.AddText("You receive 15 ConquerPoints for you item.");
                        data.AddOption("Ok~thank~you.", byte.MaxValue);
                        data.AddAvatar(10).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.");
                        data.AddOption("See~you~again.", byte.MaxValue);
                        data.AddAvatar(10).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.LotteryLadyLuck)]
        public static void LotteryLadyLuck(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Look!~Here~is~the~LuckyBox,~a~kind~of~magical~box~which~makes~your~dream~come~true.");
                    data.AddOption("Get~me~out~of~here!", 1);
                    data.AddOption("Tell~me~more~about~it~please.", 2);
                    data.AddOption("Really?~I~don`t~believe~it.", byte.MaxValue);
                    data.AddAvatar(159).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(217, 193, 1036u);
                    break;
                case 2:
                    data.AddText("You~have~chance~to~get~whatever~you~desire~from~a~LuckyBox.~It~May~be~a~Dragonball,~+8~weapon,~or");
                    data.AddText("~two-socket~boot,~you~don`t~know~what~you~will~get~from~the~Box,~it~totally~depends~on~your~luck.~Well,");
                    data.AddText("~let`s~get~started~now.~Good~luck!");
                    data.AddOption("Thanks~a~lot.", byte.MaxValue);
                    data.AddAvatar(123).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.MarketLadyLuck)]
        public static void MarketLadyLuck(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Welcome to the Lottery Center! There are many Lucky Boxes here, each containing incredible treasures! Pay me a small lottery ticket to draw. You are allowed to enter the Lottery Center and try your luck upto 10 and 50 times for VIP-6 players. ");
                    data.AddText("times a day. You will have extra lottery chances if you are a VIP player.");
                    data.AddOption("Let`s~try~my~luck!", 1);
                    data.AddOption("May~I~know~the~rules~first?", 3);
                    data.AddOption("Nice~to~see~you.", byte.MaxValue);
                    data.AddAvatar(123).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.Level >= 70)
                    {
                        client.Teleport(39, 45, 700u);
                        break;
                    }
                    data.AddText("Sorry, you need level 70.");
                    data.AddOption("Oops.", byte.MaxValue);
                    data.AddAvatar(123).FinalizeDialog();
                    break;
                case 3:
                    data.AddText("There are many Lucky Boxes in the Lottery Center. Pay 1 lotto ticket, and you can draw from the Lucky Box!");
                    data.AddText("~ Each player is allowed to draw from the Lottery up to 10 times, each day.");
                    data.AddOption("Okay,~I~see.", byte.MaxValue);
                    data.AddAvatar(123).FinalizeDialog();
                    break;
                case 2:
                    break;
            }
        }


        [Npc(NpcID.MountRetailer)]
        public unsafe static void MountRetailer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 32u;
                actionQuery.Type = ActionType.OpenGuiNpc;
                actionQuery.Timestamp = (int)client.ActiveNpc;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                actionQuery.dwParam3 = client.Player.Map;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.MountTrainer)]
        public static void MountTrainer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I`m the best Mount Trainer in the Empire. You can learn the Mount Skills from me. It costs 50,000 silver for the Riding skill,");
                    data.AddText("~100,000 silver for the Spook skill, and 1,000,000 silver for the War Cry skill. Is there something you needed?");
                    data.AddOption("Learn~Riding" + (client.MySpells.ClientSpells.ContainsKey(7001) ? "(Learnt)" : "(50,000~silver)"), 1);
                    data.AddOption("Learn~Spook" + (client.MySpells.ClientSpells.ContainsKey(7002) ? "(Learnt)" : "(100,000~silver)"), 3);
                    data.AddOption("Learn~War~Cry" + (client.MySpells.ClientSpells.ContainsKey(7003) ? "(Learnt)" : "(1,000,000~silver)"), 5);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(15).FinalizeDialog();
                    break;
                case 7:
                    data.AddText("It`s upgradable. You`ll need to equip a two-handed weapon and be mounted to use this skill. You will attack a target area within 15 paces and cause");
                    data.AddText("~70%damage on all targets within 3 paces. It costs 30 Stamina. Are you sure you want to pay 500,000 silver to learn it?");
                    data.AddOption("Yes.", 8);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(15).FinalizeDialog();
                    break;
                case 8:
                    if (client.Player.Level < 30)
                    {
                        data.AddText("Sorry, but you`ll need to reach Level 30, first.");
                        data.AddOption("Okay.~I~see..", byte.MaxValue);
                        data.AddAvatar(15).FinalizeDialog();
                    }
                    else
                    {
                        if (client.Player.Class != 25)
                            break;
                        if (client.Player.Money >= 500000)
                        {
                            client.Player.Money -= 500000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            Flags.SpellID SpellID4;
                            SpellID4 = Flags.SpellID.ChargingVortex;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID4))
                            {
                                data.AddText("You`ve learned " + SpellID4.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(15)
                                    .FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID4, 0, 0, 0);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID4);
                            data.AddOption("Ok , thank you.", byte.MaxValue);
                            data.AddAvatar(15).FinalizeDialog();
                        }
                        else
                            data.AddText("You don`t have 500,000 silver. You are unable to learn the ChargingVortex skill.").AddOption("Oh,~I`ll~fetch~some~money!", byte.MaxValue).AddAvatar(15)
                                .FinalizeDialog();
                    }
                    break;
                case 5:
                    data.AddText("After you equip and ride your mount, you can right click the War Cry skill to dismount the players in a certain area whose");
                    data.AddText("~mounts` Lineage Levels are lower than yours and force the Vigors of their mounts drop to 0. Cool down time: 60 seconds.");
                    data.AddOption("Learn~War~Cry.", 6);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(15).FinalizeDialog();
                    break;
                case 6:
                    if (client.Player.Money >= 1000000)
                    {
                        client.Player.Money -= 1000000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        Flags.SpellID SpellID3;
                        SpellID3 = Flags.SpellID.WarCry;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID3))
                        {
                            data.AddText("You`ve learned " + SpellID3.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(15)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID3, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID3);
                        data.AddOption("Ok , thank you.", byte.MaxValue);
                        data.AddAvatar(15).FinalizeDialog();
                    }
                    else
                        data.AddText("You don`t have 1,000,000 silver. You are unable to learn the war cry skill.").AddOption("Oh,~I`ll~fetch~some~money!", byte.MaxValue).AddAvatar(15)
                            .FinalizeDialog();
                    break;
                case 3:
                    data.AddText("After you equip and ride your mount, you can right click the Spook skill to dismount a player whose mount`s Lineage Level is");
                    data.AddText("~lower than yours and force the Vigor of his mount drop to 0. Cool down time: 15 seconds.");
                    data.AddOption("Learn~Spook.", 4);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(15).FinalizeDialog();
                    break;
                case 4:
                    if (client.Player.Money >= 100000)
                    {
                        client.Player.Money -= 100000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        Flags.SpellID SpellID2;
                        SpellID2 = Flags.SpellID.Spook;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID2))
                        {
                            data.AddText("You`ve learned " + SpellID2.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(15)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID2, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID2);
                        data.AddOption("Ok , thank you.", byte.MaxValue);
                        data.AddAvatar(15).FinalizeDialog();
                    }
                    else
                        data.AddText("You don`t have 100,000 silver. You are unable to learn the Spook skill.").AddOption("Oh,~I`ll~fetch~some~money!", byte.MaxValue).AddAvatar(15)
                            .FinalizeDialog();
                    break;
                case 1:
                    data.AddText("After the mount is equipped, you can right click the (Riding) button or drag the button into the shortcut column to ride");
                    data.AddText("~your mount. The higher the Lineage Level, the higher Vigor and the less limits for your mount!");
                    data.AddOption("Learn~Riding~skill.", 2);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(15).FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.Money >= 50000)
                    {
                        client.Player.Money -= 50000;
                        client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                        Flags.SpellID SpellID;
                        SpellID = Flags.SpellID.Riding;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(15)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID);
                        data.AddOption("Ok , thank you.", byte.MaxValue);
                        data.AddAvatar(15).FinalizeDialog();
                    }
                    else
                        data.AddText("You don`t have 50,000 silver. You are unable to learn the Riding skill.").AddOption("Oh,~I`ll~fetch~some~money!", byte.MaxValue).AddAvatar(15)
                            .FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.PromotionTaoist)]
        public static void PromotionTaoist(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if ((client.Player.Class < 130 || client.Player.Class > 145) && client.Player.Class != 100 && client.Player.Class != 101)
            {
                data.AddText("Sorry, but you are not a Taoist.").AddOption("Alright.", byte.MaxValue).AddAvatar(6)
                    .FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    if (client.Player.Class == 100)
                    {
                        data.AddText("Every Taoist wants holy spirit, and few gain. You`re gifted in controlling inner power. Just pay more attention to details, you may be the next achiever!");
                        data.AddOption("I~want~to~get~promoted", 1);
                        data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                        break;
                    }
                    data.AddText("Every Taoist wants holy spirit, and few gain. You`re gifted in controlling inner power. Just pay more attention to details, you may be the next achiever!");
                    if (client.Player.Class == 100 || client.Player.Class == 101)
                        data.AddOption("I~want~to~get~promoted.", 3);
                    else
                        data.AddOption("I~want~to~get~promoted.", 53);
                    data.AddOption("Learn~class~skills.", 10);
                    //data.AddOption("Learn~Pure~Skills.", 50);
                    //if (client.Player.NewbieProtection == Flags.NewbieExperience.Enable)
                    //    data.Option("Disable~Newbie~protection?", 240);
                    //else if (client.Player.NewbieProtection == Flags.NewbieExperience.Disable)
                    //{
                    //    data.Option("Enable~Newbie~protection?", 240);
                    //}
                    data.AddOption("Nothing.", byte.MaxValue);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                //case 240:
                //    if (client.Player.Level < 110)
                //    {
                //        switch (client.Player.NewbieProtection)
                //        {
                //            case Flags.NewbieExperience.Enable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Disable;
                //                break;
                //            case Flags.NewbieExperience.Disable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Enable;
                //                break;
                //        }
                //    }
                //    else
                //    {
                //        data.Option("this only for newbie", 255);
                //    }
                //    break;
                case 110:
                    data.AddText("Ah, you look promising. I bet Taoist will be a big name in a short time. Listen, you can learn class skills and");
                    data.AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                    data.AddOption("Thanks.", 111);
                    data.AddAvatar(259).FinalizeDialog();
                    break;
                case 111:
                    data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?");
                    data.AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                    if (client.Player.Class == 100)
                        data.AddOption("I~want~to~get~promoted", 1);
                    else if (client.Player.Class == 101)
                    {
                        data.AddOption("I~want~to~get~promoted.", 3);
                    }
                    else
                    {
                        data.AddOption("I~want~to~get~promoted.", 53);
                    }
                    data.AddAvatar(259).FinalizeDialog();
                    break;
                case 53:
                    switch (client.Player.Class)
                    {
                        case 132:
                        case 142:
                            if (client.Player.Level < 70)
                            {
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]");
                                data.AddOption("I~see.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else if (!client.Inventory.Contain(1080001u, 1u, 0) && !client.Inventory.Contain(1080001u, 1u, 1))
                            {
                                data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .");
                                data.AddOption("I~see.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1080001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!");
                                data.AddOption("Thank~you,~Master.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(6)
                                    .FinalizeDialog();
                            }
                            break;
                        case 133:
                        case 143:
                            if (client.Player.Level < 100)
                            {
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]");
                                data.AddOption("I~see.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else if (!client.Inventory.Contain(1088001u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.");
                                data.AddOption("I~see.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1088001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!");
                                data.AddOption("Thank~you,~Master.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(6)
                                    .FinalizeDialog();
                            }
                            break;
                        case 134:
                        case 144:
                            if (client.Player.Level < 110)
                            {
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]");
                                data.AddOption("I~see.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else if (!client.Inventory.Contain(721080u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.");
                                data.AddOption("I~see.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory");
                                    data.AddOption("Let me check.", byte.MaxValue);
                                    data.AddAvatar(6).FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Remove(721080u, 1u, stream);
                                client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                client.SendSysMesage("You received DragonBall.");
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!");
                                data.AddOption("Thank~you,~Master.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(6)
                                    .FinalizeDialog();
                            }
                            break;
                        default:
                            data.AddText("You cannot be promoted anymore. You have mastered your class");
                            data.AddOption("Thank~you,~Master.", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                            break;
                    }
                    break;
                case 50:
                    if (client.Player.Class > 101)
                    {
                        if (AtributesStatus.IsWater(client.Player.Class))
                            data.AddText("Only Pure Fire Taoists, who have trained as Water Taoists for all 3 lives, can learn the Pure Skills, Azure Shield. If you`ve been Reborn twice, but are not a Pure Fire Taoist, you can take some").AddText("~Oblivion Dew to the Reincarnation Seer in the Market and be Reincarnated! That way, you can obtain a new class combination. Oh, by the way, Chain Bolt is a XP skill, and it`ll allow you to throw").AddText("~bolts of lightning at several targets during the XP time.")
                                .AddOption("AzureShield" + (client.MySpells.ClientSpells.ContainsKey(30000) ? "(Learnt)" : "(Lv.40)"), 51)
                                .AddOption("I`ll~think~about~it.", byte.MaxValue)
                                .AddAvatar(6)
                                .FinalizeDialog();
                        else if (AtributesStatus.IsFire(client.Player.Class))
                        {
                            data.AddText("Only Pure Fire Taoists, who have trained as Fire Taoists for all 3 lives, can learn the Pure Skills, Heaven Blade. If you`ve been Reborn twice, but are not a Pure Fire Taoist, you can take some").AddText("~Oblivion Dew to the Reincarnation Seer in the Market and be Reincarnated! That way, you can obtain a new class combination. Oh, by the way, Chain Bolt is a XP skill, and it`ll allow you to throw").AddText("~bolts of lightning at several targets during the XP time.")
                                .AddOption("Learn~Heaven~Blade" + (client.MySpells.ClientSpells.ContainsKey(10310) ? "(Learnt)" : "(Lv.40)"), 52)
                                .AddOption("I`ll~think~about~it.", byte.MaxValue)
                                .AddAvatar(6)
                                .FinalizeDialog();
                        }
                    }
                    break;
                case 51:
                    {
                        if (!AtributesStatus.IsWater(client.Player.Class))
                            break;
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("Only pure Fire Taoists, who have trained as Water Taoists for all 3 of their lives, can learn the Pure Skill, AzureShield.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        if (!AtributesStatus.IsWater(client.Player.FirstClass) || !AtributesStatus.IsWater(client.Player.SecondClass))
                        {
                            data.AddText("Only pure water Taoists, who have trained as Water Taoists for all 3 of their lives, can learn the Pure Skill, AzureShield.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID24;
                        SpellID24 = Flags.SpellID.AzureShield;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID24))
                        {
                            data.AddText("You`ve learned " + SpellID24.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID24, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID24).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 52:
                    {
                        if (!AtributesStatus.IsFire(client.Player.Class))
                            break;
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("Only pure Fire Taoists, who have trained as Fire Taoists for all 3 of their lives, can learn the Pure Skill, Heaven Blade.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        if (!AtributesStatus.IsFire(client.Player.FirstClass) || !AtributesStatus.IsFire(client.Player.SecondClass))
                        {
                            data.AddText("Only pure Fire Taoists, who have trained as Fire Taoists for all 3 of their lives, can learn the Pure Skill, Heaven Blade.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID25;
                        SpellID25 = Flags.SpellID.HeavenBlade;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID25))
                        {
                            data.AddText("You`ve learned " + SpellID25.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID25, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID25).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 10:
                    data.AddText("I know many types of skills and spells for a true Taoist, like you! Which of them do you want to learn, first?").AddOption("Learn~magic.", 11).AddOption("Learn~XP~Skill.", 12)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(6)
                        .FinalizeDialog();
                    break;
                case 12:
                    data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?").AddOption("ChainBolt" + (client.MySpells.ClientSpells.ContainsKey(10309) ? "(Learnt)" : "(Lv.1)"), 40).AddOption("Lightning" + (client.MySpells.ClientSpells.ContainsKey(1010) ? "(Learnt)" : "(Lv.3)"), 41)
                        .AddOption("Vulcano" + (client.MySpells.ClientSpells.ContainsKey(1125) ? "(Learnt)" : "(Lv.40)"), 42);
                    if (client.Player.Class > 101 && AtributesStatus.IsWater(client.Player.Class))
                        data.AddOption("Revive" + (client.MySpells.ClientSpells.ContainsKey(1050) ? "(Learnt)" : "[Lv.40]"), 43);
                    // data.AddOption("SoulShackle" + (client.MySpells.ClientSpells.ContainsKey(10405) ? "(Learnt)" : "[Lv.135]"), 44);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue).AddAvatar(6).FinalizeDialog();
                    break;
                case 44:
                    {
                        if (client.Player.Level < 135)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 135 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID23;
                        SpellID23 = Flags.SpellID.SoulShackle;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID23))
                        {
                            data.AddText("You`ve learned " + SpellID23.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID23, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID23).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 43:
                    {
                        if (!AtributesStatus.IsWater(client.Player.Class))
                            break;
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID22;
                        SpellID22 = Flags.SpellID.Revive;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID22))
                        {
                            data.AddText("You`ve learned " + SpellID22.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID22, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID22).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 42:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID21;
                        SpellID21 = Flags.SpellID.Vulcano;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID21))
                        {
                            data.AddText("You`ve learned " + SpellID21.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID21, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID21).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 41:
                    {
                        if (client.Player.Level < 3)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 3 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID20;
                        SpellID20 = Flags.SpellID.Lightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID20))
                        {
                            data.AddText("You`ve learned " + SpellID20.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID20, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID20).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        Flags.SpellID SpellID19;
                        SpellID19 = Flags.SpellID.ChainBolt;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID19))
                        {
                            data.AddText("You`ve learned " + SpellID19.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID19, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID19).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 58:
                    {
                        if (client.Player.Level < 93)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID27;
                        SpellID27 = Flags.SpellID.FireofHell;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID27))
                        {
                            data.AddText("You`ve learned " + SpellID27.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID27, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID27).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 11:
                    data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?").AddOption("Thunder" + (client.MySpells.ClientSpells.ContainsKey(1000) ? "(Learnt)" : "(Lv.1)"), 20).AddOption("Cure" + (client.MySpells.ClientSpells.ContainsKey(1005) ? "(Learnt)" : "(Lv.1)"), 21)
                        .AddOption("Meditation" + (client.MySpells.ClientSpells.ContainsKey(1195) ? "(Learnt)" : "(Lv.44)"), 22);
                    if (client.Player.Class >= 101)
                        data.AddOption("ChainBolt" + (client.MySpells.ClientSpells.ContainsKey(10309) ? "(Learnt)" : "[Lv.1]"), 70).AddOption("Lightning" + (client.MySpells.ClientSpells.ContainsKey(1010) ? "(Learnt)" : "[Lv.1]"), 71).AddOption("Next page.", 241);
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue).AddAvatar(6).FinalizeDialog();
                    break;
                case 241:
                    if (AtributesStatus.IsFire(client.Player.Class))
                        data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?").AddOption("Fire" + (client.MySpells.ClientSpells.ContainsKey(1001) ? "(Learnt)" : "[Lv.40][Thunder~Level~4]"), 23).AddOption("Tornado" + (client.MySpells.ClientSpells.ContainsKey(1002) ? "(Learnt)" : "[Lv.92][Fire~Level~3]"), 24)
                            .AddOption("FireRing" + (client.MySpells.ClientSpells.ContainsKey(1150) ? "(Learnt)" : "(Lv.55)"), 25)
                            .AddOption("FireMeteor" + (client.MySpells.ClientSpells.ContainsKey(1180) ? "(Learnt)" : "(Lv.52)"), 26)
                            .AddOption("FireCircle" + (client.MySpells.ClientSpells.ContainsKey(1120) ? "(Learnt)" : "(Lv.65)"), 27)
                            .AddOption("Bomb" + (client.MySpells.ClientSpells.ContainsKey(1160) ? "(Learnt)" : "(Lv.82)"), 28)
                            .AddOption("FireofHell" + (client.MySpells.ClientSpells.ContainsKey(1165) ? "(Learnt)" : "(Lv.93)"), 58)
                            .AddAvatar(6)
                            .FinalizeDialog();
                    else if (AtributesStatus.IsWater(client.Player.Class))
                    {
                        data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?");
                        data.AddOption("HealingRain" + (client.MySpells.ClientSpells.ContainsKey(1055) ? "(Learnt)" : "(Lv.40)"), 29).AddOption("StarofAccuracy" + (client.MySpells.ClientSpells.ContainsKey(1085) ? "(Learnt)" : "(Lv.45)"), 30).AddOption("MagicShield" + (client.MySpells.ClientSpells.ContainsKey(1090) ? "(Learnt)" : "(Lv.50)"), 31)
                            .AddOption("Stigma" + (client.MySpells.ClientSpells.ContainsKey(1095) ? "(Learnt)" : "(Lv.55)"), 32)
                            .AddOption("Invisibility" + (client.MySpells.ClientSpells.ContainsKey(1075) ? "(Learnt)" : "(Lv.60)"), 33)
                            .AddOption("Pray" + (client.MySpells.ClientSpells.ContainsKey(1100) ? "(Learnt)" : "(Lv.70)"), 34)
                            .AddOption("AdvancedCure" + (client.MySpells.ClientSpells.ContainsKey(1175) ? "(Learnt)" : "(Lv.81)"), 35)
                            .AddOption("Nectar" + (client.MySpells.ClientSpells.ContainsKey(1170) ? "(Learnt)" : "(Lv.94)"), 36)
                            .AddAvatar(6)
                            .FinalizeDialog();
                    }
                    break;
                case 70:
                    {
                        Flags.SpellID SpellID26;
                        SpellID26 = Flags.SpellID.ChainBolt;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID26))
                        {
                            data.AddText("You`ve learned " + SpellID26.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID26, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID26).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 71:
                    {
                        Flags.SpellID SpellID;
                        SpellID = Flags.SpellID.Lightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 28:
                    {
                        if (client.Player.Level < 82)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 82 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID10;
                        SpellID10 = Flags.SpellID.Bomb;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID10))
                        {
                            data.AddText("You`ve learned " + SpellID10.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID10, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID10).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 27:
                    {
                        if (client.Player.Level < 65)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 65 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID9;
                        SpellID9 = Flags.SpellID.FireCircle;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID9))
                        {
                            data.AddText("You`ve learned " + SpellID9.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID9, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID9).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 26:
                    {
                        if (client.Player.Level < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 52 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID8;
                        SpellID8 = Flags.SpellID.FireMeteor;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID8))
                        {
                            data.AddText("You`ve learned " + SpellID8.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID8, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID8).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 25:
                    {
                        if (client.Player.Level < 55)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 55 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID7;
                        SpellID7 = Flags.SpellID.FireRing;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID7))
                        {
                            data.AddText("You`ve learned " + SpellID7.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID7, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID7).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 24:
                    {
                        MsgSpell spell2;
                        if (client.Player.Level < 92)
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 92 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                        else if (client.MySpells.ClientSpells.TryGetValue(1001, out spell2))
                        {
                            if (spell2.Level == 3)
                            {
                                Flags.SpellID SpellID6;
                                SpellID6 = Flags.SpellID.Tornado;
                                if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID6))
                                {
                                    data.AddText("You`ve learned " + SpellID6.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                        .FinalizeDialog();
                                    break;
                                }
                                client.MySpells.Add(stream, (ushort)SpellID6, 0, 0, 0);
                                data.AddText("Congratulation! You just have learned the skill " + SpellID6).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                                    .FinalizeDialog();
                            }
                            else
                                data.AddText("Sorry. but you need thunder level 4.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                    .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry. but you need thunder level 4.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                        }
                        break;
                    }
                case 23:
                    {
                        MsgSpell spell;
                        if (client.Player.Level < 40)
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                        else if (client.MySpells.ClientSpells.TryGetValue(1000, out spell))
                        {
                            if (spell.Level == 4)
                            {
                                Flags.SpellID SpellID5;
                                SpellID5 = Flags.SpellID.Fire;
                                if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID5))
                                {
                                    data.AddText("You`ve learned " + SpellID5.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                        .FinalizeDialog();
                                    break;
                                }
                                client.MySpells.Add(stream, (ushort)SpellID5, 0, 0, 0);
                                data.AddText("Congratulation! You just have learned the skill " + SpellID5).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                                    .FinalizeDialog();
                            }
                            else
                                data.AddText("Sorry. but you need thunder level 4.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                    .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry. but you need thunder level 4.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                        }
                        break;
                    }
                case 36:
                    {
                        if (client.Player.Level < 94)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 94 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID18;
                        SpellID18 = Flags.SpellID.Nectar;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID18))
                        {
                            data.AddText("You`ve learned " + SpellID18.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID18, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID18).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 35:
                    {
                        if (client.Player.Level < 81)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 81 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID17;
                        SpellID17 = Flags.SpellID.EffectMP;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID17))
                        {
                            data.AddText("You`ve learned " + SpellID17.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID17, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID17).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 34:
                    {
                        if (client.Player.Level < 70)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID16;
                        SpellID16 = Flags.SpellID.Pray;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID16))
                        {
                            data.AddText("You`ve learned " + SpellID16.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID16, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID16).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 33:
                    {
                        if (client.Player.Level < 60)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 60 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID15;
                        SpellID15 = Flags.SpellID.Invisibility;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID15))
                        {
                            data.AddText("You`ve learned " + SpellID15.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID15, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID15).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 32:
                    {
                        if (client.Player.Level < 55)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 55 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID14;
                        SpellID14 = Flags.SpellID.Stigma;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID14))
                        {
                            data.AddText("You`ve learned " + SpellID14.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID14, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID14).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 31:
                    {
                        if (client.Player.Level < 50)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 50 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID13;
                        SpellID13 = Flags.SpellID.MagicShield;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID13))
                        {
                            data.AddText("You`ve learned " + SpellID13.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID13, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID13).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        if (client.Player.Level < 45)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 45 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID12;
                        SpellID12 = Flags.SpellID.StarofAccuracy;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID12))
                        {
                            data.AddText("You`ve learned " + SpellID12.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID12, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID12).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 29:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID11;
                        SpellID11 = Flags.SpellID.HealingRain;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID11))
                        {
                            data.AddText("You`ve learned " + SpellID11.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID11, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID11).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 22:
                    {
                        if (client.Player.Level < 44)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 44 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID4;
                        SpellID4 = Flags.SpellID.Meditation;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID4))
                        {
                            data.AddText("You`ve learned " + SpellID4.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID4, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID4).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        Flags.SpellID SpellID3;
                        SpellID3 = Flags.SpellID.Cure;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID3))
                        {
                            data.AddText("You`ve learned " + SpellID3.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID3, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID3).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        Flags.SpellID SpellID2;
                        SpellID2 = Flags.SpellID.Thunder;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID2))
                        {
                            data.AddText("You`ve learned " + SpellID2.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(6)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID2, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID2).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                    data.AddText("The Taoist are capable of casting devastating skills and deadly spells, and proved to be versatile. Do you want to be a Taoist, now?").AddOption("Yeah,~please!", 2).AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(6)
                        .FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.Class == 100)
                    {
                        if (!client.MySpells.ClientSpells.ContainsKey(10309))
                            client.MySpells.Add(stream, 10309, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(1010))
                            client.MySpells.Add(stream, 1010, 0, 0, 0);
                        client.Player.Class++;
                        data.AddText("You`ve been promoted and learned corresponding XP skill. The system will notify you when your XP is full. Keep up with the good work!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("There are two paths of the Taoist, the Fire and the Water. Which one would you choose?").AddOption("Fire~Taoist.", 4).AddOption("Water~Taoist.", 5)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(6)
                        .FinalizeDialog();
                    break;
                case 4:
                    if (!client.Inventory.HaveSpace(1))
                        data.AddText("Please make 1 more space in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                    else if (client.Player.Class == 101)
                    {
                        client.Inventory.Add(stream, 421079u, 1, 0, 0, 0);
                        client.SendSysMesage("You received 1 (Super)EndBacksword.");
                        client.Player.Class = 142;
                        data.AddText("Good, you`ve finished the training as a Fire Taoist. Hope you can play the role of a saver in your groups well!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                    }
                    break;
                case 5:
                    if (!client.Inventory.HaveSpace(1))
                        data.AddText("Please make 1 more space in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                    else if (client.Player.Class == 101)
                    {
                        client.Inventory.Add(stream, 421079u, 1, 0, 0, 0);
                        client.SendSysMesage("You received 1 (Super)EndBacksword.");
                        client.Player.Class = 132;
                        data.AddText("Good, you`ve finished the training as a Water Taoist. Hope you can play the role of a saver in your groups well!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(6)
                            .FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.PromotionMonk)]
        public static void PromotionMonk(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (client.Player.Class < 60 || client.Player.Class > 65)
            {
                data.AddText("Sorry, but you are not a Monk.").AddOption("Alright.", byte.MaxValue).AddAvatar(226)
                    .FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    if (client.Player.Class == 60)
                    {
                        data.AddText("Monk and Saints have a deep understanding of both the physical and spiritual world! Through intense training, Monk and Saints have gained devastating power. What is it, my child?").AddOption("I~want~to~get~promoted", 1).AddOption("I`ll~think~about~it.", byte.MaxValue)
                            .AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                    data.AddText("Monk and Saints have a deep understanding of both the physical and spiritual world! Through intense training, Monk and Saints have gained devastating power. What is it, my child?");
                    data.AddOption("I~want~to~get~promoted.", 22);
                    data.AddOption("Learn~class~skills.", 3);
                    data.AddOption("Learn~Pure~Skills.", 20);
                    //if (client.Player.NewbieProtection == Flags.NewbieExperience.Enable)
                    //    data.Option("Disable~Newbie~protection?", 240);
                    //else if (client.Player.NewbieProtection == Flags.NewbieExperience.Disable)
                    //{
                    //    data.Option("Enable~Newbie~protection?", 240);
                    //}
                    data.AddOption("Nothing.", byte.MaxValue);
                    data.AddAvatar(226).FinalizeDialog();
                    break;
                //case 240:
                //    if (client.Player.Level < 110)
                //    {
                //        switch (client.Player.NewbieProtection)
                //        {
                //            case Flags.NewbieExperience.Enable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Disable;
                //                break;
                //            case Flags.NewbieExperience.Disable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Enable;
                //                break;
                //        }
                //    }
                //    else
                //    {
                //        data.Option("this only for newbie", 255);
                //    }
                //    break;
                case 110:
                    data.AddText("Ah, you look promising. I bet Monk will be a big name in a short time. Listen, you can learn class skills and").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.").AddOption("Thanks.", 111)
                        .AddAvatar(259)
                        .FinalizeDialog();
                    break;
                case 111:
                    data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                    if (client.Player.Class == 60)
                        data.AddOption("I~want~to~get~promoted", 1);
                    else
                        data.AddOption("I~want~to~get~promoted", 22);
                    data.AddAvatar(259).FinalizeDialog();
                    break;
                case 22:
                    switch (client.Player.Class)
                    {
                        case 61:
                            if (client.Player.Level < 40)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]").AddOption("I~see.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            break;
                        case 62:
                            if (client.Player.Level < 70)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]").AddOption("I~see.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1080001u, 1u, 0) && !client.Inventory.Contain(1080001u, 1u, 1))
                            {
                                data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .").AddOption("I~see.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1080001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            break;
                        case 63:
                            if (client.Player.Level < 100)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]").AddOption("I~see.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1088001u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1088001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            break;
                        case 64:
                            if (client.Player.Level < 110)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]").AddOption("I~see.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(721080u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(226)
                                        .FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Remove(721080u, 1u, stream);
                                client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                client.SendSysMesage("You received DragonBall.");
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Monk. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(226)
                                    .FinalizeDialog();
                            }
                            break;
                        default:
                            data.AddText("You cannot be promoted anymore. You have mastered your class").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                    }
                    break;
                case 20:
                    data.AddText("Only a Pure Monk/Saint can learn the skill, Soul Shackle. If you`ve been reborn twice, but are not Pure, you can take Oblivion Dew to the Reincarnation Seer in the Market").AddText("~and ask him to help you get Reincarnated. That way, you can obtain a new class combination.").AddOption("I~want~to~learn~it~now.", 21)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(226)
                        .FinalizeDialog();
                    break;
                case 21:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("You can only learn the Pure Skill `Soul Shackle` when you`ve been reborn twice, and have become a Pure Monk or Saint.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        if (!AtributesStatus.IsMonk(client.Player.FirstClass) || !AtributesStatus.IsMonk(client.Player.SecondClass))
                        {
                            data.AddText("You can only learn the Pure Skill `Soul Shackle` when you`ve been reborn twice, and have become a Pure Monk or Saint.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 62)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID13;
                        SpellID13 = Flags.SpellID.SoulShackle;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID13))
                        {
                            data.AddText("You`ve learned " + SpellID13.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID13, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID13).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 3:
                    data.AddText("The Monk`s skills are varied and powerful. Which skill do you want to learn?").AddOption("Deflection~Aura" + (client.MySpells.ClientSpells.ContainsKey(10410) ? "(Learnt)" : "(Lv.20)"), 4).AddOption("Tyrant~Aura" + (client.MySpells.ClientSpells.ContainsKey(10395) ? "(Learnt)" : "(Lv.20)"), 5)
                        .AddOption("Serenity" + (client.MySpells.ClientSpells.ContainsKey(10400) ? "(Learnt)" : "(Lv.40)"), 6)
                        .AddOption("Radiant~Palm" + (client.MySpells.ClientSpells.ContainsKey(10381) ? "(Learnt)" : "(Lv.40)"), 7)
                        .AddOption("Tranquility" + (client.MySpells.ClientSpells.ContainsKey(10425) ? "(Learnt)" : "(Lv.70)"), 8)
                        .AddOption("Next~page.", 9)
                        .AddAvatar(226)
                        .FinalizeDialog();
                    break;
                case 9:
                    data.AddText("The Monk`s skills are varied and powerful. Which skill do you want to learn?").AddOption("Compassion" + (client.MySpells.ClientSpells.ContainsKey(10430) ? "(Learnt)" : "(Lv.100)"), 10).AddOption("ElementalAuraMetal" + (client.MySpells.ClientSpells.ContainsKey(10420) ? "(Learnt)" : "(Lv.100)"), 11)
                        .AddOption("ElementalAuraWood" + (client.MySpells.ClientSpells.ContainsKey(10421) ? "(Learnt)" : "(Lv.100)"), 12)
                        .AddOption("ElementalAuraWater" + (client.MySpells.ClientSpells.ContainsKey(10422) ? "(Learnt)" : "(Lv.100)"), 13)
                        .AddOption("ElementalAuraFire" + (client.MySpells.ClientSpells.ContainsKey(10423) ? "(Learnt)" : "(Lv.100)"), 14)
                        .AddOption("ElementalAuraEarth" + (client.MySpells.ClientSpells.ContainsKey(10424) ? "(Learnt)" : "(Lv.100)"), 15)
                        .AddOption("Next~page.", 70)
                        .AddAvatar(226)
                        .FinalizeDialog();
                    break;
                case 70:
                    data.AddText("The Monk`s skills are varied and powerful. Which skill do you want to learn?").AddOption("WhirlwindKick" + (client.MySpells.ClientSpells.ContainsKey(10415) ? "(Learnt)" : "(Lv.1)"), 71).AddOption("TripleAttack" + (client.MySpells.ClientSpells.ContainsKey(10490) ? "(Learnt)" : "(Lv.1)"), 72)
                        .AddOption("Oblivion" + (client.MySpells.ClientSpells.ContainsKey(10390) ? "(Learnt)" : "(Lv.1)"), 73)
                        .AddAvatar(226)
                        .FinalizeDialog();
                    break;
                case 71:
                    {
                        Flags.SpellID SpellID15;
                        SpellID15 = Flags.SpellID.WhirlwindKick;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID15))
                        {
                            data.AddText("You`ve learned " + SpellID15.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID15, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID15).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 72:
                    {
                        Flags.SpellID SpellID14;
                        SpellID14 = Flags.SpellID.TripleAttack;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID14))
                        {
                            data.AddText("You`ve learned " + SpellID14.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID14, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID14).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 73:
                    {
                        Flags.SpellID SpellID;
                        SpellID = Flags.SpellID.Oblivion;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID12;
                        SpellID12 = Flags.SpellID.EarthAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID12))
                        {
                            data.AddText("You`ve learned " + SpellID12.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID12, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID12).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID11;
                        SpellID11 = Flags.SpellID.FireAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID11))
                        {
                            data.AddText("You`ve learned " + SpellID11.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID11, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID11).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID10;
                        SpellID10 = Flags.SpellID.WatherAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID10))
                        {
                            data.AddText("You`ve learned " + SpellID10.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID10, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID10).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID9;
                        SpellID9 = Flags.SpellID.WoodAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID9))
                        {
                            data.AddText("You`ve learned " + SpellID9.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID9, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID9).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID8;
                        SpellID8 = Flags.SpellID.MetalAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID8))
                        {
                            data.AddText("You`ve learned " + SpellID8.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID8, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID8).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 64)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 100 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID7;
                        SpellID7 = Flags.SpellID.Compassion;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID7))
                        {
                            data.AddText("You`ve learned " + SpellID7.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID7, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID7).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 63)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID6;
                        SpellID6 = Flags.SpellID.Tranquility;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID6))
                        {
                            data.AddText("You`ve learned " + SpellID6.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID6, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID6).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 62)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID5;
                        SpellID5 = Flags.SpellID.RadiantPalm;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID5))
                        {
                            data.AddText("You`ve learned " + SpellID5.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID5, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID5).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 62)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID4;
                        SpellID4 = Flags.SpellID.Serenity;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID4))
                        {
                            data.AddText("You`ve learned " + SpellID4.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID4, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID4).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.Level < 20 || client.Player.Class < 61)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 20 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID3;
                        SpellID3 = Flags.SpellID.TyrantAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID3))
                        {
                            data.AddText("You`ve learned " + SpellID3.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID3, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID3).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (client.Player.Level < 20 || client.Player.Class < 61)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 20 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID2;
                        SpellID2 = Flags.SpellID.FendAura;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID2))
                        {
                            data.AddText("You`ve learned " + SpellID2.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(226)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID2, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID2).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                    data.AddText("You`ve met the requirement for job promotion. You can get promoted from Intern to a Monk and learn `Whirlwind Kick` when you are Level 15 or above.").AddOption("Get~promoted.", 2).AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(226)
                        .FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.Class == 60)
                    {
                        if (!client.MySpells.ClientSpells.ContainsKey(10415))
                            client.MySpells.Add(stream, 10415, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(10490))
                            client.MySpells.Add(stream, 10490, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(10390))
                            client.MySpells.Add(stream, 10390, 0, 0, 0);
                        client.Player.Class++;
                        data.AddText("You`ve been promoted and learned corresponding XP skill. The system will notify you when your XP is full. Keep up with the good work!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(226)
                            .FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.PromotionNinja)]
        public static void PromotionNinja(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (client.Player.Class < 50 || client.Player.Class > 55)
            {
                data.AddText("Sorry, but you are not a Ninja.").AddOption("Alright.", byte.MaxValue).AddAvatar(203)
                    .FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    if (client.Player.Class == 50)
                    {
                        data.AddText("Cloaked in shadow, mysterious and aloof, the Ninja is the fastest class, with the most devastating attacks! So, what can I do for you?").AddOption("I~want~to~get~promoted", 1).AddOption("I`ll~think~about~it.", byte.MaxValue)
                            .AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                    data.AddText("Cloaked in shadow, mysterious and aloof, the Ninja is the fastest class, with the most devastating attacks! So, what can I do for you?");
                    data.AddOption("I~want~to~get~promoted.", 20);
                    data.AddOption("Learn~Katana~skills.", 6);
                    data.AddOption("Learn~XP~skills.", 11);
                    data.AddOption("Learn~class~skills.", 3);
                    data.AddOption("Learn~Pure~Skills.", 15);
                    //if (client.Player.NewbieProtection == Flags.NewbieExperience.Enable)
                    //    data.Option("Disable~Newbie~protection?", 240);
                    //else if (client.Player.NewbieProtection == Flags.NewbieExperience.Disable)
                    //{
                    //    data.Option("Enable~Newbie~protection?", 240);
                    //}
                    data.AddOption("You~bet!", byte.MaxValue);
                    data.AddAvatar(203).FinalizeDialog();
                    break;
                //case 240:
                //    if (client.Player.Level < 110)
                //    {
                //        switch (client.Player.NewbieProtection)
                //        {
                //            case Flags.NewbieExperience.Enable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Disable;
                //                break;
                //            case Flags.NewbieExperience.Disable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Enable;
                //                break;
                //        }
                //    }
                //    else
                //    {
                //        data.Option("this only for newbie", 255);
                //    }
                //    break;
                case 110:
                    data.AddText("Ah, you look promising. I bet `Ninja` will be a big name in a short time. Listen, you can learn class skills and").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.").AddOption("Thanks.", 111)
                        .AddAvatar(259)
                        .FinalizeDialog();
                    break;
                case 111:
                    data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                    if (client.Player.Class == 50)
                        data.AddOption("I~want~to~get~promoted", 1);
                    else
                        data.AddOption("I~want~to~get~promoted", 20);
                    data.AddAvatar(259).FinalizeDialog();
                    break;
                case 20:
                    switch (client.Player.Class)
                    {
                        case 51:
                            if (client.Player.Level < 40)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]").AddOption("I~see.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            break;
                        case 52:
                            if (client.Player.Level < 70)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]").AddOption("I~see.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1080001u, 1u, 0) && !client.Inventory.Contain(1080001u, 1u, 1))
                            {
                                data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .").AddOption("I~see.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                if (client.Player.Reborn == 0)
                                {
                                    if (!client.Inventory.HaveSpace(2))
                                    {
                                        data.AddText("Please make 2 more spaces in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(203)
                                            .FinalizeDialog();
                                        break;
                                    }
                                    client.Inventory.Add(stream, 135069u, 1, 0, 0, 0);
                                    client.Inventory.Add(stream, 150139u, 1, 0, 0, 0);
                                    client.SendSysMesage("You received 1 (Super)TigerVest and 1 (Super)PearlRing.");
                                }
                                client.Inventory.Remove(1080001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            break;
                        case 53:
                            if (client.Player.Level < 100)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]").AddOption("I~see.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1088001u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1088001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            break;
                        case 54:
                            if (client.Player.Level < 110)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]").AddOption("I~see.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(721080u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(203)
                                        .FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Remove(721080u, 1u, stream);
                                client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                client.SendSysMesage("You received DragonBall.");
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Ninja. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(203)
                                    .FinalizeDialog();
                            }
                            break;
                        default:
                            data.AddText("You cannot be promoted anymore. You have mastered your class").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                    }
                    break;
                case 1:
                    data.AddText("You are over level 15. You can now get promoted to Ninja and learn Fatal Strike (XP skill).").AddOption("Yeah,~please!", 2).AddOption("Let~me~think~it~over.", byte.MaxValue)
                        .AddAvatar(203)
                        .FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.Class == 50)
                    {
                        if (!client.MySpells.ClientSpells.ContainsKey(6011))
                            client.MySpells.Add(stream, 6011, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(6001))
                            client.MySpells.Add(stream, 6001, 0, 0, 0);
                        client.Player.Class++;
                        data.AddText("You`ve been promoted and learned corresponding XP skill. The system will notify you when your XP is full. Keep up with the good work!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                    }
                    break;
                case 15:
                    data.AddText("Only Pure Ninjas can learn the Pure Skill, Counter Kill. If you`ve been Reborn twice, but are not a Pure Ninja, you can take some Oblivion Dew to the Reincarnation Seer in the Market and be").AddText("~Reincarnated! That way, you can obtain a new class combination.").AddOption("I~want~to~learn~it~now.", 16)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(203)
                        .FinalizeDialog();
                    break;
                case 16:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("Only pure Ninja, who have spent all 3 lives as a Ninja, can learn the Pure Skill, Counter Kill.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        if (!AtributesStatus.IsNinja(client.Player.FirstClass) || !AtributesStatus.IsNinja(client.Player.SecondClass))
                        {
                            data.AddText("Only pure Ninja, who have spent all 3 lives as a Ninja, can learn the Pure Skill, Counter Kill.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID10;
                        SpellID10 = Flags.SpellID.CounterKill;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID10))
                        {
                            data.AddText("You`ve learned " + SpellID10.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID10, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID10).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 11:
                    data.AddText("Which skill do you want to learn?").AddOption("ShurikenVortex" + (client.MySpells.ClientSpells.ContainsKey(6010) ? "(Learnt)" : "(Lv.70)"), 12).AddOption("FatalStrike" + (client.MySpells.ClientSpells.ContainsKey(6011) ? "(Learnt)" : "(Lv.3)"), 13)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(203)
                        .FinalizeDialog();
                    break;
                case 13:
                    {
                        if (client.Player.Level < 3)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 3 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID8;
                        SpellID8 = Flags.SpellID.FatalStrike;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID8))
                        {
                            data.AddText("You`ve learned " + SpellID8.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID8, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID8).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 53)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID7;
                        SpellID7 = Flags.SpellID.ShurikenVortex;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID7))
                        {
                            data.AddText("You`ve learned " + SpellID7.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID7, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID7).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 8:
                    data.AddText("Which skill do you want to learn?").AddOption("MortalDrag" + (client.MySpells.ClientSpells.ContainsKey(11180) ? "(Learnt)" : "(Lv.20)"), 9).AddOption("BloodyScythe" + (client.MySpells.ClientSpells.ContainsKey(11170) ? "(Learnt)" : "(Lv.40)"), 10)
                        .AddOption("GapingWounds" + (client.MySpells.ClientSpells.ContainsKey(11170) ? "(Learnt)" : "(Lv.100)"), 87)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(203)
                        .FinalizeDialog();
                    break;
                case 87:
                    {
                        if (client.Player.Level < 100 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID;
                        SpellID = Flags.SpellID.GapingWounds;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID6;
                        SpellID6 = Flags.SpellID.BloodyScythe;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID6))
                        {
                            data.AddText("You`ve learned " + SpellID6.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID6, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID6).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level < 20 || client.Player.Class < 51)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 20 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID5;
                        SpellID5 = Flags.SpellID.MortalDrag;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID5))
                        {
                            data.AddText("You`ve learned " + SpellID5.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID5, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID5).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 6:
                    data.AddText("Which skill do you want to learn?").AddOption("TwofoldBlades" + (client.MySpells.ClientSpells.ContainsKey(6000) ? "(Learnt)" : "(Lv.40)"), 7).AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(203)
                        .FinalizeDialog();
                    break;
                case 7:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 52)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID4;
                        SpellID4 = Flags.SpellID.TwofoldBlades;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID4))
                        {
                            data.AddText("You`ve learned " + SpellID4.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID4, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID4).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 3:
                    data.AddText("Which skill do you want to learn?").AddOption("Archer~Bane" + (client.MySpells.ClientSpells.ContainsKey(6004) ? "(Learnt)" : "(Lv.100)"), 5).AddOption("ToxicFog" + (client.MySpells.ClientSpells.ContainsKey(6001) ? "(Learnt)" : "(Lv.15)"), 14)
                        .AddOption("Okay.~I~see.", byte.MaxValue)
                        .AddAvatar(203)
                        .FinalizeDialog();
                    break;
                case 14:
                    {
                        if (client.Player.Level < 15 || client.Player.Class < 51)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID9;
                        SpellID9 = Flags.SpellID.ToxicFog;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID9))
                        {
                            data.AddText("You`ve learned " + SpellID9.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID9, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID9).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.Level < 110 || client.Player.Class < 55)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 110 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID3;
                        SpellID3 = Flags.SpellID.ArcherBane;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID3))
                        {
                            data.AddText("You`ve learned " + SpellID3.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID3, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID3).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                        break;
                    }
                case 4:
                    if (client.Player.Reborn == 0)
                        data.AddText("Only reborn Ninja-ninja, who have spent all 2 lives as Ninja, can learn the that Skill, PoisonStar.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                    else if ((client.Player.Reborn == 1 && client.Player.FirstClass == 55) || (client.Player.Reborn == 2 && client.Player.SecondClass == 55))
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 53)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID2;
                        SpellID2 = Flags.SpellID.PoisonStar;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID2))
                        {
                            data.AddText("You`ve learned " + SpellID2.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(203)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID2, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID2).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("Only reborn Ninja-ninja, who have spent all 2 lives as Ninja, can learn the that Skill, PoisonStar.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(203)
                            .FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.PromotionWarrior)]
        public static void PromotionWarrior(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (client.Player.Class < 20 || client.Player.Class > 25)
            {
                data.AddText("Sorry, but you are not a Warrior.").AddOption("Alright.", byte.MaxValue).AddAvatar(8)
                    .FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    if (client.Player.Class == 20)
                    {
                        data.AddText("To be a good Warrior, you must know your weapon, your armor be a 2nd skin, and use your shield to ward off your enemy! Remember, fortune favors the brave, and you must keep your head, even in the darkest hours. So, what can I do for you?.").AddOption("I~want~to~get~promoted", 1).AddOption("I`ll~think~about~it.", byte.MaxValue)
                            .AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                    data.AddText("To be a good Warrior, you must know your weapon, your armor be a 2nd skin, and use your shield to ward off your enemy! Remember, fortune favors the brave, and you must keep your head, even in the darkest hours. So, what can I do for you?");
                    data.AddOption("I~want~to~get~promoted.", 3);
                    data.AddOption("Learn~shield~skills.", 4);
                    data.AddOption("Learn~XP~skills.", 10);
                    data.AddOption("Learn~weapon~skills.", 20);
                    data.AddOption("Learn~Pure~Skills.", 21);
                    //if (client.Player.NewbieProtection == Flags.NewbieExperience.Enable)
                    //    data.Option("Disable~Newbie~protection?", 240);
                    //else if (client.Player.NewbieProtection == Flags.NewbieExperience.Disable)
                    //{
                    //    data.Option("Enable~Newbie~protection?", 240);
                    //}
                    data.AddOption("You~bet!", byte.MaxValue);
                    data.AddAvatar(8).FinalizeDialog();
                    break;
                //case 240:
                //    if (client.Player.Level < 110)
                //    {
                //        switch (client.Player.NewbieProtection)
                //        {
                //            case Flags.NewbieExperience.Enable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Disable;
                //                break;
                //            case Flags.NewbieExperience.Disable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Enable;
                //                break;
                //        }
                //    }
                //    else
                //    {
                //        data.Option("this only for newbie", 255);
                //    }
                //    break;
                case 110:
                    data.AddText("Ah, you look promising. I bet `Warrior` will be a big name in a short time. Listen, you can learn class skills and").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.").AddOption("Thanks.", 111)
                        .AddAvatar(259)
                        .FinalizeDialog();
                    break;
                case 111:
                    data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                    if (client.Player.Class == 20)
                        data.AddOption("I~want~to~get~promoted", 1);
                    else
                        data.AddOption("I~want~to~get~promoted", 3);
                    data.AddAvatar(259).FinalizeDialog();
                    break;
                case 3:
                    switch (client.Player.Class)
                    {
                        case 21:
                            if (client.Player.Level < 40)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]").AddOption("I~see.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            break;
                        case 22:
                            if (client.Player.Level < 70)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]").AddOption("I~see.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1080001u, 1u, 0) && !client.Inventory.Contain(1080001u, 1u, 1))
                            {
                                data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .").AddOption("I~see.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1080001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            break;
                        case 23:
                            if (client.Player.Level < 100)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]").AddOption("I~see.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1088001u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1088001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            break;
                        case 24:
                            if (client.Player.Level < 110)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]").AddOption("I~see.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(721080u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(8)
                                        .FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Remove(721080u, 1u, stream);
                                client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                client.SendSysMesage("You received DragonBall.");
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(8)
                                    .FinalizeDialog();
                            }
                            break;
                        default:
                            data.AddText("You cannot be promoted anymore. You have mastered your class").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                    }
                    break;
                case 21:
                    data.AddText("Only Warriors who`ve trained for all three lives can learn the Pure Skill, Perseverance. If you`ve been Reborn twice, but are not a Pure Warrior, you take some Oblivion Dew to the Reincarnation Seer in the Market and be").AddText("~Reincarnated! That way, you can obtain a new class combination.").AddOption("I~want~to~learn~it~now.", 22)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(8)
                        .FinalizeDialog();
                    break;
                case 22:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("Only pure Warriors, who have spent all 3 lives as a Warrior, can learn the Pure Skill, Perseverance.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        if (!AtributesStatus.IsWarrior(client.Player.FirstClass) || !AtributesStatus.IsWarrior(client.Player.SecondClass))
                        {
                            data.AddText("Only pure Warriors, who have spent all 3 lives as a Warrior, can learn the Pure Skill, Perseverance.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID;
                        SpellID = Flags.SpellID.Perseverance;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        if (client.MySpells.ClientSpells.ContainsKey(1045) && client.MySpells.ClientSpells.ContainsKey(1046))
                        {
                            data.AddText("You`ve learned Fast Blade and Scented Sword!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        string line;
                        line = "You just have learned the skill ";
                        if (!client.MySpells.ClientSpells.ContainsKey(1045))
                        {
                            client.MySpells.Add(stream, 1045, 0, 0, 0);
                            line += Flags.SpellID.FastBlader;
                        }
                        if (!client.MySpells.ClientSpells.ContainsKey(1046))
                        {
                            client.MySpells.Add(stream, 1046, 0, 0, 0);
                            line = line + "/" + Flags.SpellID.ScrenSword;
                        }
                        data.AddText(line).AddOption("Thank you..", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 10:
                    data.AddText("Which skill do you want to learn?").AddOption("Superman" + (client.MySpells.ClientSpells.ContainsKey(1025) ? "(Learnt)" : "(Lv.3)"), 11).AddOption("Accuracy" + (client.MySpells.ClientSpells.ContainsKey(1015) ? "(Learnt)" : "(Lv.3)"), 12)
                        .AddOption("Roar" + (client.MySpells.ClientSpells.ContainsKey(1040) ? "(Learnt)" : "(Lv.3)"), 13)
                        .AddOption("Shield" + (client.MySpells.ClientSpells.ContainsKey(1020) ? "(Learnt)" : "(Lv.3)"), 14)
                        .AddOption("FlyingMoon" + (client.MySpells.ClientSpells.ContainsKey(1320) ? "(Learnt)" : "(Lv.40)"), 15)
                        .AddOption("Let~me~think~it~over.", byte.MaxValue)
                        .AddAvatar(8)
                        .FinalizeDialog();
                    break;
                case 15:
                    {
                        Flags.SpellID SpellID2;
                        SpellID2 = Flags.SpellID.FlyingMoon;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID2))
                        {
                            data.AddText("You`ve learned " + SpellID2.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID2, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID2).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        Flags.SpellID SpellID3;
                        SpellID3 = Flags.SpellID.Shield;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID3))
                        {
                            data.AddText("You`ve learned " + SpellID3.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID3, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID3).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        Flags.SpellID SpellID4;
                        SpellID4 = Flags.SpellID.Roar;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID4))
                        {
                            data.AddText("You`ve learned " + SpellID4.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID4, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID4).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        Flags.SpellID SpellID5;
                        SpellID5 = Flags.SpellID.Accuracy;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID5))
                        {
                            data.AddText("You`ve learned " + SpellID5.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID5, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID5).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        Flags.SpellID SpellID10;
                        SpellID10 = Flags.SpellID.Superman;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID10))
                        {
                            data.AddText("You`ve learned " + SpellID10.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID10, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID10).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 4:
                    data.AddText("Which skill do you want to learn?").AddOption("Dash" + (client.MySpells.ClientSpells.ContainsKey(1051) ? "(Learnt)" : "(Lv.40)"), 5).AddOption("Shield~Block" + (client.MySpells.ClientSpells.ContainsKey(10470) ? "(Learnt)" : "(Lv.40)"), 6)
                        .AddOption("Let~me~think~it~over.", byte.MaxValue)
                        .AddAvatar(8)
                        .FinalizeDialog();
                    break;
                case 5:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID6;
                        SpellID6 = Flags.SpellID.Dash;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID6))
                        {
                            data.AddText("You`ve learned " + SpellID6.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID6, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID6).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID7;
                        SpellID7 = Flags.SpellID.ShieldBlock;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID7))
                        {
                            data.AddText("You`ve learned " + SpellID7.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID7, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID7).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 23)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID8;
                        SpellID8 = Flags.SpellID.MagicDefender;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID8))
                        {
                            data.AddText("You`ve learned " + SpellID8.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID8, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID8).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 23)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID9;
                        SpellID9 = Flags.SpellID.DefensiveStance;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID9))
                        {
                            data.AddText("You`ve learned " + SpellID9.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(8)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID9, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID9).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                    data.AddText("I`m proud that you made a mature decision! The warriors are adept in the use of weapons and shields for additional defense. Do you want to get promoted, now?").AddOption("Yeah,~please!", 2).AddOption("Let~me~think~it~over.", byte.MaxValue)
                        .AddAvatar(8)
                        .FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.Class == 20)
                    {
                        if (!client.MySpells.ClientSpells.ContainsKey(1025))
                            client.MySpells.Add(stream, 1025, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(1045))
                            client.MySpells.Add(stream, 1045, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(1046))
                            client.MySpells.Add(stream, 1046, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(1020))
                            client.MySpells.Add(stream, 1020, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(1015))
                            client.MySpells.Add(stream, 1015, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(1040))
                            client.MySpells.Add(stream, 1040, 0, 0, 0);
                        client.Player.Class++;
                        data.AddText("You`ve learned ways of the Warrior. Now, more weapons and armors are available for you, while new skills are at your disposal. Go test your power!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(8)
                            .FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.PromotionTrojan)]
        public static void PromotionTrojan(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (client.Player.Class < 10 || client.Player.Class > 15)
            {
                data.AddText("Trojans do not share their secrets of battle with others. I shall not teach you.").AddOption("Alright.", byte.MaxValue).AddAvatar(5)
                    .FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    if (client.Player.Class == 10)
                    {
                        data.AddText("Wielding dual weapons, the Trojans always charge fearlessly into combat and they believe courage is the secret of victory. So, what can I do for you?").AddOption("I~want~to~get~promoted.", 1).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                    data.AddText("Wielding dual weapons, the Trojans always charge fearlessly into combat and they believe courage is the secret of victory. So, what can I do for you?");
                    data.AddOption("I~want~to~get~promoted.", 3);
                    data.AddOption("Learn~class~and~weapon~skills.", 4);
                    //data.AddOption("Pure~skills~for~Trojans.", 30);
                    //if (client.Player.NewbieProtection == Flags.NewbieExperience.Enable)
                    //    data.Option("Disable~Newbie~protection?", 240);
                    //else if (client.Player.NewbieProtection == Flags.NewbieExperience.Disable)
                    //{
                    //    data.Option("Enable~Newbie~protection?", 240);
                    //}
                    data.AddOption("Okay.~I~see.", byte.MaxValue);
                    data.AddAvatar(5).FinalizeDialog();
                    break;
                //case 240:
                //    if (client.Player.Level < 110)
                //    {
                //        switch (client.Player.NewbieProtection)
                //        {
                //            case Flags.NewbieExperience.Enable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Disable;
                //                break;
                //            case Flags.NewbieExperience.Disable:
                //                client.Player.NewbieProtection = Flags.NewbieExperience.Enable;
                //                break;
                //        }
                //    }
                //    else
                //    {
                //        data.Option("this only for newbie", 255);
                //    }
                //    break;
                case 110:
                    data.AddText("Ah, you look promising. I bet `Trojan` will be a big name in a short time. Listen, you can learn class skills and").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.").AddOption("Thanks.", 111)
                        .AddAvatar(259)
                        .FinalizeDialog();
                    break;
                case 111:
                    data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                    if (client.Player.Class == 10)
                        data.AddOption("I~want~to~get~promoted", 1);
                    else
                        data.AddOption("I~want~to~get~promoted", 3);
                    data.AddAvatar(259).FinalizeDialog();
                    break;
                case 30:
                    data.AddText("The Dragon Whirl is a Pure skill, which means that only players who`ve been a Trojan on their two past lives and their current life as well can learn it. Though you`ve been Reborn twice, You are not a Pure Trojan.").AddText("~Why not take an Oblivion Dew and speak with the Reincarnation Seer? Through the power of Reincarnation, you can obtain new class combinations and make yourself a Pure Trojan!").AddOption("Learn~Dragon~Whirl~(Lv~40).", 31)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(5)
                        .FinalizeDialog();
                    break;
                case 31:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("After your 2nd Rebirth, you still have to be Reincarnated and become a Pure Trojan, to be able to learn the Dragon Whirl skill.").AddOption("Ok~I~see.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        if (!AtributesStatus.IsTrojan(client.Player.FirstClass) || !AtributesStatus.IsTrojan(client.Player.SecondClass))
                        {
                            data.AddText("You don'thave the combo ( Tro - Tro - Tro ) in your status.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID2;
                        SpellID2 = Flags.SpellID.DragonWhirl;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID2))
                        {
                            data.AddText("You`ve learned " + SpellID2.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID2, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID2).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                case 5:
                    data.AddText("300 years ago, General Pak was ordered to fight against the Flame Devastator. However, a traitor in his army led to Pak`s unexpected death.").AddText("~and the annihilation of his army. Pak`s Ghost (Twin City 267,194) refused to rest in peace, waiting for a chosen Trojan to change the history.").AddText("~The Trojan who successfully changes the history will earn a fabulous Epic Weapon.")
                        .AddText("\n\n    (Level 120+ or reborn Trojans will receive a Trojan Epic Weapon for free by completing a specified Trojan Epic Quest every day, and a series of Epic Quests in 90 days.)")
                        .AddOption("Head~to~see~General~Pak.", 101)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(5)
                        .FinalizeDialog();
                    break;
                case 3:
                    switch (client.Player.Class)
                    {
                        case 11:
                            if (client.Player.Level < 40)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]").AddOption("I~see.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        case 12:
                            if (client.Player.Level < 70)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]").AddOption("I~see.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1080001u, 1u, 0) && !client.Inventory.Contain(1080001u, 1u, 1))
                            {
                                data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .").AddOption("I~see.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1080001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        case 13:
                            if (client.Player.Level < 100)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]").AddOption("I~see.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1088001u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1088001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        case 14:
                            if (client.Player.Level < 110)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]").AddOption("I~see.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(721080u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                if (!client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Please make 1 more space in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(5)
                                        .FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Remove(721080u, 1u, stream);
                                client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                client.SendSysMesage("You received DragonBall.");
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        default:
                            data.AddText("You cannot be promoted anymore. You have mastered your class").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                    }
                    break;
                case 4:
                    data.AddText("The XP skills for Trojans are Accuracy, Cyclone and Golem. Accuracy can triple your hit rate; Cyclone can increase your speed; By using the Golem skill, you can transform").AddText("~into a fearful Golem! Trojans are always fearless. Hercules makes them powerful and swift, while the mysterious Epic skills enable Trojans to be much fiercer than ever.").AddText("~So, which one did you want to learn?")
                        .AddOption("Trojan`s~skills.", 6)
                        .AddOption("Let~me~see.", byte.MaxValue)
                        .AddAvatar(5)
                        .FinalizeDialog();
                    break;
                case 6:
                    data.AddText("The XP skills for Trojans are Accuracy, Cyclone and Golem. Accuracy can triple your hit rate, Cyclone can increase your attack speed, and by using the Golem skill, you can transform").AddText("~into a fearful Golem! Trojans are always fearless. Hercules makes them powerful and swift, and the Breath Focus recovers the Stamina in time.").AddText("When the Super Cyclone sweeps, no one can stand. Which one would you like to learn?")
                        .AddOption("Accuracy~and~Cyclone~" + ((client.MySpells.ClientSpells.ContainsKey(1110) && client.MySpells.ClientSpells.ContainsKey(1015)) ? "(Learnt)" : "(Lv.40)") + ".", 9)
                        .AddOption("Golem~" + (client.MySpells.ClientSpells.ContainsKey(1270) ? "(Learnt)" : "(Lv.40)") + ".", 10)
                        .AddOption("Hercules~" + (client.MySpells.ClientSpells.ContainsKey(1115) ? "(Learnt)" : "(Lv.40)") + ".", 11)
                        .AddOption("Spirit~Healing~" + (client.MySpells.ClientSpells.ContainsKey(1190) ? "(Learnt)" : "(Lv.40)") + ".", 12)
                        .AddOption("Superior~skills.", 14)
                        .AddOption("Learn~weapon~skills.", 15)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(5)
                        .FinalizeDialog();
                    break;
                case 14:
                    if (client.Player.Reborn > 1)
                        data.AddText("Please choose the spell you want to learn.").AddOption("CruelShade(L40).", 31).AddOption("I`ll~think~about~it.", byte.MaxValue)
                            .AddAvatar(5)
                            .FinalizeDialog();
                    else
                        data.AddText("Sorry, only reborn players can learn this skill.").AddOption("Okay.~I~see.", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                    break;
                case 32:
                    {
                        if (client.Player.Reborn <= 1)
                            break;
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID;
                        SpellID = Flags.SpellID.CruelShade;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID5;
                        SpellID5 = Flags.SpellID.Golem;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID5))
                        {
                            data.AddText("You`ve learned " + SpellID5.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID5, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID5).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID4;
                        SpellID4 = Flags.SpellID.Hercules;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID4))
                        {
                            data.AddText("You`ve learned " + SpellID4.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID4, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID4).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID3;
                        SpellID3 = Flags.SpellID.EffectHP;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID3))
                        {
                            data.AddText("You`ve learned " + SpellID3.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID3, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID3).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        if (client.MySpells.ClientSpells.ContainsKey(1015) && client.MySpells.ClientSpells.ContainsKey(1110))
                        {
                            data.AddText("You`ve learned Accuracy and Cyclone!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        string line2;
                        line2 = "You just have learned the skill ";
                        if (!client.MySpells.ClientSpells.ContainsKey(1015))
                        {
                            client.MySpells.Add(stream, 1015, 0, 0, 0);
                            line2 += Flags.SpellID.Accuracy;
                        }
                        if (!client.MySpells.ClientSpells.ContainsKey(1110))
                        {
                            client.MySpells.Add(stream, 1110, 0, 0, 0);
                            line2 = line2 + "/" + Flags.SpellID.Cyclone;
                        }
                        data.AddText(line2).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        if (client.MySpells.ClientSpells.ContainsKey(1045) && client.MySpells.ClientSpells.ContainsKey(1046))
                        {
                            data.AddText("You`ve learned Fast Blade and Scented Sword!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        string line;
                        line = "You just have learned the skill ";
                        if (!client.MySpells.ClientSpells.ContainsKey(1045))
                        {
                            client.MySpells.Add(stream, 1045, 0, 0, 0);
                            line += Flags.SpellID.FastBlader;
                        }
                        if (!client.MySpells.ClientSpells.ContainsKey(1046))
                        {
                            client.MySpells.Add(stream, 1046, 0, 0, 0);
                            line = line + "/" + Flags.SpellID.ScrenSword;
                        }
                        data.AddText(line).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                    if (client.Player.Level >= 15 && client.Player.Class == 10)
                        data.AddText("The Trojans are all-out offensive melee combat fighters. Do you want to be a qualified Trojan, now?.").AddOption("Yeah,~please!", 2).AddAvatar(5)
                            .FinalizeDialog();
                    else
                        data.AddText("Only the powerful deserve to be trained. You are still a mere fledgeling.").AddOption("Oh,~I~see..", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.Level >= 15 && client.Player.Class == 10)
                    {
                        if (!client.MySpells.ClientSpells.ContainsKey(1045))
                            client.MySpells.Add(stream, 1045, 0, 0, 0);
                        if (!client.MySpells.ClientSpells.ContainsKey(1046))
                            client.MySpells.Add(stream, 1046, 0, 0, 0);
                        client.Player.Class++;
                        data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                    }
                    else
                        data.AddText("Only the powerful deserve to be trained. You are still a mere fledgeling.").AddOption("Oh,~I~see..", byte.MaxValue).AddAvatar(5)
                            .FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.PromotionArcher)]
        public static void PromotionArcher(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (client.Player.Class < 40 || client.Player.Class > 45)
            {
                data.AddText("Sorry, but you are not a Archer.").AddOption("Alright.", byte.MaxValue).AddAvatar(10)
                    .FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    if (client.Player.Class == 40)
                    {
                        data.AddText("Born with sharp insight and swift skill, the Archers are expert in shooting arrows and wielding throwing knives to deadly purpose.").AddOption("I~want~to~get~promoted", 1).AddOption("I`ll~think~about~it.", byte.MaxValue)
                            .AddAvatar(10)
                            .FinalizeDialog();
                        break;
                    }
                    data.AddText("Born with sharp insight and swift skill, the Archers are expert in shooting arrows and wielding throwing knives to deadly purpose.");
                    data.AddOption("I~want~to~get~promoted", 33);
                    data.AddOption("Learn~the~Class~Skill.", 5);
                    //data.AddOption("Learn~the~Pure~Skill.", 30);
                    //if (client.Player.NewbieProtection == Flags.NewbieExperience.Enable)
                    //    data.Option("Disable~Newbie~protection?", 240);
                    //else if (client.Player.NewbieProtection == Flags.NewbieExperience.Disable)
                    //{
                    //    data.Option("Enable~Newbie~protection?", 240);
                    //}
                    data.AddOption("I`ll~think~about~it.", byte.MaxValue);
                    data.AddAvatar(10).FinalizeDialog();
                    break;
                case 240:
                    //if (client.Player.Level < 110)
                    //{
                    //    switch (client.Player.NewbieProtection)
                    //    {
                    //        case Flags.NewbieExperience.Enable:
                    //            client.Player.NewbieProtection = Flags.NewbieExperience.Disable;
                    //            break;
                    //        case Flags.NewbieExperience.Disable:
                    //            client.Player.NewbieProtection = Flags.NewbieExperience.Enable;
                    //            break;
                    //    }
                    //}
                    //else
                    //{
                    //    data.Option("this only for newbie", 255);
                    //}
                    break;
                case 110:
                    data.AddText("Ah, you look promising. I bet `Archer` will be a big name in a short time. Listen, you can learn class skills and").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.").AddOption("Thanks.", 111)
                        .AddAvatar(259)
                        .FinalizeDialog();
                    break;
                case 111:
                    data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?").AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                    if (client.Player.Class == 40)
                        data.AddOption("I~want~to~get~promoted", 1);
                    else
                        data.AddOption("I~want~to~get~promoted", 33);
                    data.AddAvatar(259).FinalizeDialog();
                    break;
                case 33:
                    if (client.Player.Level >= 15 && client.Player.Level < 40 && client.Player.Class == 41)
                    {
                        data.AddText("Sorry,~you~cannot~get~promoted~before~you~reach~level~40.~Please~train~harder.").AddOption("I`ll~think~about~it.", byte.MaxValue).AddAvatar(234)
                            .FinalizeDialog();
                        break;
                    }
                    switch (client.Player.Class)
                    {
                        case 41:
                            if (client.Player.Level < 40)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1072031u, 5u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 5 EuxeniteOre in your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1072031u, 5u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        case 42:
                            if (client.Player.Level < 70)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1080001u, 1u, 0) && !client.Inventory.Contain(1080001u, 1u, 1))
                            {
                                data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1080001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        case 43:
                            if (client.Player.Level < 100)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(1088001u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                client.Inventory.Remove(1088001u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        case 44:
                            if (client.Player.Level < 110)
                                data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            else if (!client.Inventory.Contain(721080u, 1u, 0))
                            {
                                data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.").AddOption("I~see.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else if (DataCore.AtributeStatus.CheckStatus(client.Player))
                            {
                                if (!client.Inventory.HaveSpace(2))
                                {
                                    data.AddText("Please make 2 more spaces in your inventory").AddOption("Let me check.", byte.MaxValue).AddAvatar(10)
                                        .FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Add(stream, 1088000u, 1, 0, 0, 0);
                                client.SendSysMesage("You received 1 DragonBall.");
                                client.Inventory.Remove(721080u, 1u, stream);
                                client.Player.Class++;
                                data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(10)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText(DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", byte.MaxValue).AddAvatar(5)
                                    .FinalizeDialog();
                            }
                            break;
                        default:
                            data.AddText("You cannot be promoted anymore. You have mastered your class").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                    }
                    break;
                case 1:
                    data.AddText("Flight, ranged attack and maneuverability are powers all possessed by the archer.").AddOption("I~want~to~get~promoted", 2).AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(10)
                        .FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.Class == 40)
                    {
                        client.MySpells.Add(stream, 8002, 0, 0, 0);
                        client.Player.Class++;
                        data.AddText("Good, you have trained hard, and completed my lesson this day. You have gained power and skills.").AddOption("Thank~you,~Master.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                    }
                    break;
                case 30:
                    data.AddText("Only Pure Archers can learn the Pure Skill, Star Arrow. If you`ve been Reborn twice, but are not a Pure Archer, you can take some Oblivion Dew to the Reincarnation Seer in the Market and be").AddText("~Reincarnated. That way, you can obtain a new class combination.").AddOption("I~want~to~learn~it~now.", 31)
                        .AddOption("I`ll~think~about~it.", byte.MaxValue)
                        .AddAvatar(10)
                        .FinalizeDialog();
                    break;
                case 31:
                    if (client.Player.Reborn == 2 && AtributesStatus.IsArcher(client.Player.FirstClass) && AtributesStatus.IsArcher(client.Player.SecondClass))
                    {
                        Flags.SpellID SpellID7;
                        SpellID7 = Flags.SpellID.StarArrow;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID7))
                        {
                            data.AddText("You`ve learned " + SpellID7.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID7, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID7).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                    }
                    else
                        data.AddText("Only pure Archers, whose classes for their past two lives and their current life are all Archers, can learn the pure skill Star Arrow.").AddOption("Okay.~I~see.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                    break;
                case 5:
                    data.AddText("The powerful Archers are expert in shooting clustered demons to death. When transforming into Oriental Assassins, they are able to wield the Throwing Knives to deadly purpose.").AddOption("Learn~Archer~skills.", 10).AddOption("Leave.", byte.MaxValue)
                        .AddAvatar(10)
                        .FinalizeDialog();
                    break;
                case 10:
                    data.AddText("After equipping bow and arrows, Archers can fly and attack enemies in the air!").AddOption("XP~Fly~[Level~1]", 70).AddOption("Rapid~Fire" + (client.MySpells.ClientSpells.ContainsKey(8000) ? "(Learnt)" : "[Level~46+]"), 13)
                        .AddOption("Improved~Fly" + (client.MySpells.ClientSpells.ContainsKey(8003) ? "(Learnt)" : "[Level~70+]"), 14)
                        .AddOption("Arrow~Rain" + (client.MySpells.ClientSpells.ContainsKey(8030) ? "(Learnt)" : "[Level~70+]"), 15)
                        .AddOption("Intensify" + (client.MySpells.ClientSpells.ContainsKey(9000) ? "(Learnt)" : "[Level~71+]"), 16)
                        .AddOption("Scatter~Fire" + (client.MySpells.ClientSpells.ContainsKey(8001) ? "(Learnt)" : "[Level~23+]"), 17)
                        .AddAvatar(10)
                        .FinalizeDialog();
                    break;
                case 70:
                    {
                        Flags.SpellID SpellID;
                        SpellID = Flags.SpellID.XpFly;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        if (client.Player.Level < 23 || client.Player.Class < 41)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 23 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID6;
                        SpellID6 = Flags.SpellID.ScatterFire;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID6))
                        {
                            data.AddText("You`ve learned " + SpellID6.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID6, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID6).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                        break;
                    }
                case 16:
                    {
                        if (client.Player.Level < 71 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 71 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID5;
                        SpellID5 = Flags.SpellID.Intensify;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID5))
                        {
                            data.AddText("You`ve learned " + SpellID5.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID5, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID5).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID4;
                        SpellID4 = Flags.SpellID.ArrowRain;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID4))
                        {
                            data.AddText("You`ve learned " + SpellID4.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(5)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID4, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID4).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID3;
                        SpellID3 = Flags.SpellID.Fly;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID3))
                        {
                            data.AddText("You`ve learned " + SpellID3.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID3, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID3).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 46 || client.Player.Class < 41)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 46 and get promoted.").AddOption("Okay.~I~see..", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        Flags.SpellID SpellID2;
                        SpellID2 = Flags.SpellID.RapidFire;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID2))
                        {
                            data.AddText("You`ve learned " + SpellID2.ToString() + "!").AddOption("Okay.", byte.MaxValue).AddAvatar(10)
                                .FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID2, 0, 0, 0);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID2).AddOption("Ok , thank you.", byte.MaxValue).AddAvatar(10)
                            .FinalizeDialog();
                        break;
                    }
            }
        }

        [Npc(NpcID.ClanNpc)]
        public static void ClanNpc(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    if (client.Player.MyClan == null)
                    {
                        data.AddText("The Clan is not only a group, but also a bond between its members! You can have a maximum of 12 members in a clan at one time,");
                        data.AddText("~this means 6 members and their Spouses.");
                        data.AddOption("How~to~create~a~Clan?", 1);
                        data.AddOption("I~have~no~interest.", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                        break;
                    }
                    data.AddText("Your current Clan Level is Level " + (byte)(client.Player.MyClan.Level + 1));
                    if (ServerKernel.UpdateLevelAmount.Length > client.Player.MyClan.Level)
                        data.AddText("~You need " + ServerKernel.UpdateLevelAmount[client.Player.MyClan.Level] + " Silver`s in the Clan Fund to upgrade the Clan Level.");
                    data.AddText("~You can gain BP Bonus Level " + client.Player.MyClan.BP + " now: The members can share " + client.Player.MyClan.ProcentClanBp(client.Player.MyClan.BP) + " percent of the Battle Power margin between themselves and");
                    data.AddText("~the highest Battle Power team member in the same map at BP Bonus Level " + client.Player.MyClan.BP + ".");
                    data.AddOption("Upgrade~the~Clan~Level", 5);
                    data.AddOption("Upgrade~the~BP~Bonus~Level", 7);
                    data.AddOption("Disband~my~Clan", 10);
                    data.AddOption("Change~my~Clan`s~name.", 30);
                    data.AddOption("Leave.", byte.MaxValue);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 30:
                    data.AddText("Only~the~Clan~Leader~can~change~the~Guild`s~name,~which~will~take~effect~after~the~server~maintenance~on~the~second~day.~It`ll~cost~you~" + ServerKernel.CREATE_CLAN.ToString("0,0") + "~CPs.~Deal?");
                    data.AddOption("Deal!", 31);
                    data.AddOption("Wait~a~minute.");
                    data.AddAvatar(39);
                    data.FinalizeDialog();
                    break;
                case 31:
                    data.AddText("Please~enter~a~new~name~for~your~Clan.");
                    data.AddInput("Name:", 32);
                    data.AddOption("Cancel.");
                    data.AddAvatar(39);
                    data.FinalizeDialog();
                    break;
                case 32:
                    if (client.Player.MyClan == null)
                        break;
                    if (client.Player.MyClanMember.Rank == Clan.Ranks.Leader)
                    {
                        if (client.Player.ConquerPoints < ServerKernel.CREATE_CLAN)
                        {
                            data.AddText("Sorry,~you~don`t~have~enough~CPs.");
                            data.AddOption("My~bad.");
                            data.AddAvatar(39);
                            data.FinalizeDialog();
                        }
                        else if (Clan.AllowCreateClan(Input))
                        {
                            if (client.Player.ConquerPoints >= ServerKernel.CREATE_CLAN)
                            {
                                client.Player.ConquerPoints -= ServerKernel.CREATE_CLAN;
                                Clan.RegisterChangeName(client.Player.MyClan.ID, Input);
                                data.AddText("Done!~You~can~check~the~name~after~the~server~maintenance~tomorrow.");
                                data.AddOption("Great!");
                                data.AddAvatar(39);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Failed~to~change~name~Clan.~The~name~has~been~used~or~you~use~invalid~characters.");
                        }
                    }
                    else
                    {
                        data.AddText("Sorry,~you`re~not~the~Clan~Leader.");
                        data.AddOption("My~bad.");
                        data.FinalizeDialog();
                    }
                    break;
                case 10:
                    if (client.Player.MyClan != null)
                    {
                        if (client.Player.MyClanMember.Rank == Clan.Ranks.Leader)
                        {
                            data.AddText("Only the Clan Leader has the right to disband the Clan. Do you really want to disband your Clan?");
                            data.AddOption("Yes.", 11);
                            data.AddOption("Of~course~not.", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You aren`t the Clan Leader. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the BP Bonus Level.");
                            data.AddOption("I~see.").AddAvatar(6).FinalizeDialog();
                        }
                    }
                    break;
                case 11:
                    if (client.Player.ClanRank != 100)
                    {
                        data.AddText("You aren`t the Clan Leader. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the BP Bonus Level.");
                        data.AddOption("I~see.").AddAvatar(6).FinalizeDialog();
                    }
                    else if (client.Player.MyClan != null)
                    {
                        client.Player.MyClan.DisbandClan(stream);
                        client.CreateBoxDialog("Your~Clan~has~been~disbanded.");
                    }
                    break;
                case 7:
                    if (client.Player.MyClan == null)
                        break;
                    if (client.Player.MyClanMember.Rank == Clan.Ranks.Leader)
                    {
                        if (ServerKernel.UpdateBPAmount.Length > client.Player.MyClan.BP)
                        {
                            data.AddText("You have reached BP Bonus Level " + client.Player.MyClan.BP + ", and the Clan members can share " + client.Player.MyClan.ProcentClanBp(client.Player.MyClan.BP) + " percent of the Battle Power margin in the same map. Do you");
                            data.AddText("~want to upgrade the BP Bonus Level using " + ServerKernel.UpdateBPAmount[client.Player.MyClan.BP] + " in Clan Fund?");
                            data.AddOption("Yes.", 8);
                            data.AddOption("Not~right~now.");
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                            data.AddOption("Sounds~good!");
                            data.AddAvatar(39);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You can`t create or upgrade the BP Bonus Level. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the");
                        data.AddText("~BP Bonus Level.");
                        data.AddOption("I~see.");
                        data.FinalizeDialog();
                    }
                    break;
                case 8:
                    if (client.Player.MyClanMember.Rank == Clan.Ranks.Leader)
                    {
                        if (client.Player.MyClan == null)
                            break;
                        int Money2;
                        Money2 = ServerKernel.UpdateBPAmount[client.Player.MyClan.BP];
                        if (client.Player.MyClan.Donation > Money2)
                        {
                            client.Player.MyClan.Donation -= Money2;
                            client.Player.MyClan.BP++;
                            if (ServerKernel.UpdateBPAmount.Length > client.Player.MyClan.BP)
                            {
                                data.AddText("You have reached BP Bonus Level " + client.Player.MyClan.BP + ", and the Clan members can share " + client.Player.MyClan.ProcentClanBp(client.Player.MyClan.BP) + " percent of the Battle Power margin in the same map. Do you");
                                data.AddText("~want to upgrade the BP Bonus Level using " + ServerKernel.UpdateBPAmount[client.Player.MyClan.BP] + " in Clan Fund?");
                                data.AddOption("Yes.", 8);
                                data.AddOption("Not~right~now.");
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                                data.AddOption("Sounds~good!");
                                data.AddAvatar(39);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Oh, you don`t have " + Money2 + " in Clan Fund to gain the BP Bonus Level... Maybe I will help you next time when you have the");
                            data.AddText("~money.");
                            data.AddOption("Okay.~See~you.");
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You can`t create or upgrade the BP Bonus Level. Only the Clan Leader can upgrade or disband the Clan and create or upgrade the");
                        data.AddText("~BP Bonus Level.");
                        data.AddOption("I~see.");
                        data.FinalizeDialog();
                    }
                    break;
                case 5:
                    if (client.Player.MyClan == null)
                        break;
                    if (client.Player.MyClanMember.Rank == Clan.Ranks.Leader)
                    {
                        if (ServerKernel.UpdateLevelAmount.Length > client.Player.MyClan.Level)
                        {
                            data.AddText("Your current Clan Level is Level " + (byte)(client.Player.MyClan.Level + 1) + " . Do you want to spend " + ServerKernel.UpdateLevelAmount[client.Player.MyClan.Level] + " in Clan Fund to upgrade the Clan?");
                            data.AddOption("Yes.", 6);
                            data.AddOption("Not~right~now.", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                            data.AddOption("Sounds~good!");
                            data.AddAvatar(39);
                            data.FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You can`t upgrade the Clan. Only the Clan Leader can upgrade or disband the Clan, and create or upgrade the BP Bonus Level.");
                        data.AddOption("I~see.");
                        data.FinalizeDialog();
                    }
                    break;
                case 6:
                    if (client.Player.MyClan == null)
                        break;
                    if (client.Player.MyClanMember.Rank == Clan.Ranks.Leader)
                    {
                        int Money;
                        Money = ServerKernel.UpdateLevelAmount[client.Player.MyClan.Level];
                        if (client.Player.MyClan.Donation > Money)
                        {
                            client.Player.MyClan.Donation -= (int)Money;
                            client.Player.MyClan.Level++;
                            if (ServerKernel.UpdateLevelAmount.Length > client.Player.MyClan.Level)
                            {
                                data.AddText("Your current Clan Level is Level " + (byte)(client.Player.MyClan.Level + 1) + " . Do you want to spend " + ServerKernel.UpdateLevelAmount[client.Player.MyClan.Level] + " in Clan Fund to upgrade the Clan?");
                                data.AddOption("Yes.", 6);
                                data.AddOption("Not~right~now.", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You have reahced the highest BP Bonus Level and the members can share 70 percent of the Battle Power margin in the same map.");
                                data.AddOption("Sounds~good!");
                                data.AddAvatar(39);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your do not have " + Money + " silvers in you Clan.");
                            data.AddOption("Ah Ok", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You can`t upgrade the Clan. Only the Clan Leader can upgrade or disband the Clan, and create or upgrade the BP Bonus Level.");
                        data.AddOption("I~see.");
                        data.FinalizeDialog();
                    }
                    break;
                case 1:
                    data.AddText("After you reach Level 50, you can create a Clan with 500,000 silver, half of which will be the Clan Fund. You can recruit your");
                    data.AddText("~members and build your elite group! Of course, you can only be in one Clan at a time. What do you think? Are you ready to");
                    data.AddText("~start your new group?");
                    data.AddOption("Create~a~Clan~now.", 2);
                    data.AddOption("I`m~busy.", byte.MaxValue);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 2:
                    if (client.Player.MyClan == null)
                    {
                        if (client.Player.Money >= 500000)
                        {

                            if (client.Player.Level >= 50)
                            {
                                data.AddText("To create a Clan, you need to think of a fabulous name for it! Type in the name you like, but remember the name should be");
                                data.AddText("~less than 35 characters. A name is very important to your reputation. You should make it good enough so that people will");
                                data.AddText("~tremble upon the very mention of it! So what`ll it be?");
                                data.AddInput("My~Clan~Name...", 3).AddOption("Let~me~think...").AddAvatar(6)
                                    .FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You haven`t reached Level 50 and are unable to create a Clan. You should be strong enough to lead your Clan!");
                                data.AddOption("Got~it.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don`t have enough money to create a Clan. Creating a Clan needs 500,000 silver. Half of which will be the Clan Fund.");
                            data.AddText("~A Clan has to have money if you want to survive, you know. Can`t have a war without money!");
                            data.AddOption("I~see.", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You already created a Clan and are unable to create another one!");
                        data.AddOption("Okay.");
                        data.AddAvatar(39);
                        data.FinalizeDialog();
                    }
                    break;
                case 3:
                    if (client.Player.MyClan == null)
                    {
                        if (Clan.AllowCreateClan(Input))
                        {
                            client.Player.Money -= 500000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("Congratulations! You have created a Clan successfully! You should protect your Clan and fight with your Clan members for glory");
                            data.AddText("~and honor!");
                            data.AddOption("I~will.", 20);
                            data.AddAvatar(39);
                            data.FinalizeDialog();
                            new Clan().Create(client, Input, stream);
                        }
                        else
                            client.CreateBoxDialog("Failed~to~create~a~Clan.~The~name~has~been~used~or~you~haven`t~quit~a~Clan~for~at~least~a~day.");
                    }
                    else
                    {
                        data.AddText("You already created a Clan and are unable to create another one!");
                        data.AddOption("Okay.");
                        data.AddAvatar(39);
                        data.FinalizeDialog();
                    }
                    break;
                case 20:
                    data.AddText("Now you can sign up at the Clan Guide in the name of your Clan to join in the Clan War once a day. You will obtain a Normal");
                    data.AddText("~Clan Pack as a reward if you win!");
                    data.AddOption("Nice!", 21);
                    data.AddAvatar(39);
                    data.FinalizeDialog();
                    break;
                case 21:
                    data.AddText("If you can occupy the map continuously, you will get better prizes! Besides the reward you get after you win the Clan War,");
                    data.AddText("~you will get a Refined Clan Pack on the 7th day, Unique Clan Pack on the 14th day, Elite Clan Pack on the 21st day, and a");
                    data.AddText("~Super Clan Pack on the 28th day! The stronger you are, the more you can win!");
                    data.AddOption("I`ll~try~my~best!");
                    data.AddAvatar(39);
                    data.FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.GuildCreator)]
        public static void GuildCreator(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Greetings! I am the guild director, in charge of administrating and managing guilds. What business do you have with me?");
                    data.AddText("Guild leaders can post up a guild recruitment ad to recruit new blood for their guilds! Soldiers without a guild can get the latest guild recruitment information from me, and then find a good guild to join!");
                    data.AddOption("Create~a~guild", 1);
                    data.AddOption("Disband~my~guild.", 2);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.MyGuild != null)
                    {
                        data.AddText("Sorry you aready have a guild");
                        data.AddOption("Ah, Ok", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                    }
                    else
                    {
                        data.AddText("Write the name, you wana use for guild");
                        data.AddInput("Name", 3).AddAvatar(6).FinalizeDialog();
                    }
                    break;
                case 2:
                    if (client.Player.GuildRank != Flags.GuildMemberRank.GuildLeader)
                    {
                        data.AddText("Sorry you are not the Guild Leader.");
                        data.AddOption("Ah, Ok", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                    }
                    else if (client.Player.MyGuild != null && client.Player.MyGuildMember != null)
                    {
                        client.Player.MyGuild.Dismis(client, stream);
                    }
                    else
                    {
                        data.AddText("Sorry you not have guild.");
                        data.AddOption("Ah, Ok", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                    }
                    break;
                case 3:
                    if (Guild.AllowToCreate(Input))
                    {
                        if (client.Player.Level >= 90)
                        {
                            if (client.Player.Money >= 1000000)
                            {
                                if (client.Player.MyGuild == null)
                                {
                                    new Guild(client, Input, stream);
                                    break;
                                }
                                data.AddText("Sorry, you have Guild!.");
                                data.AddOption("Ah, Ok", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You do not have 1000000 silvers with you.");
                                data.AddOption("Ah, Ok", byte.MaxValue);
                                data.AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry! you need level 90 to use my options");
                            data.AddOption("Ah, Ok", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Soory,the name is used!");
                        data.AddOption("Ah, Ok", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                    }
                    break;
            }
        }

        [Npc(NpcID.LoveStone)]
        public unsafe static void LoveStone(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Fate can bring lovers together. I hope you all can get married and live happily with your lovers. What can I do for you?");
                    data.AddOption("Claim~double~EXP.", 1);
                    data.AddOption("I~want~to~get~married.", 2);
                    data.AddOption("Can~you~help~me~divorce?", 3);
                    data.AddOption("Nothing~special.", 4);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 1:
                    if (client.Player.HeavenBlessing > 0 || client.Player.VipLevel >= 6)
                    {
                        if (client.Player.BDExp == 0 || client.Player.BDExp != 10)
                        {
                            client.Player.BDExp = 1;
                            client.Player.RateExp = 2u;
                            client.Player.DExpTime = 3600u;
                            client.Player.CreateExtraExpPacket(stream);
                            client.SendSysMesage("You got double exp. time of one hour.");
                        }
                        else
                        {
                            data.AddText("Sorry , but you're claimed today double Xp!").AddOption("Ah yes.", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                    }
                    else if (client.Player.VipLevel >= 1)
                    {
                        if (client.Player.BDExp == 0 || client.Player.BDExp != 5)
                        {
                            client.Player.BDExp = 1;
                            client.Player.RateExp = 2u;
                            client.Player.DExpTime = 3600u;
                            client.Player.CreateExtraExpPacket(stream);
                            client.SendSysMesage("You got double exp. time of one hour.");
                        }
                        else
                        {
                            data.AddText("Sorry , but you're claimed today double Xp!").AddOption("Ah yes.", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("Sorry , you not have Blessing!").AddOption("Ah yes.", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                    }
                    break;
                case 3:
                    data.AddText("if you marriage left you nothing but regret and pain, then bring 3 MeteorTears,i can help you out.");
                    data.AddOption("I have made up my ming", 8).AddOption("Let me reconsider it", byte.MaxValue);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 8:
                    if (client.Inventory.Contain(1088002u, 3u, 0))
                    {
                        if (client.Player.Spouse != "None")
                        {
                            client.Inventory.Remove(1088002u, 3u, stream);
                            if (Server.GamePoll.TryGetValue(client.Player.SpouseUID, out var Spouse))
                            {
                                client.Player.Spouse = "None";
                                client.Player.SpouseUID = 0u;
                                Spouse.Player.SpouseUID = 0u;
                                Spouse.Player.Spouse = "None";
                                client.Player.SendString(stream, MsgStringPacket.StringID.Spouse, false, "None");
                                Spouse.Player.SendString(stream, MsgStringPacket.StringID.Spouse, false, "None");
                            }
                            else
                            {
                                client.ClientFlag |= ServerFlag.RemoveSpouse;
                                ServerDatabase.LoginQueue.TryEnqueue(client);
                            }
                        }
                        else
                        {
                            data.AddText("You don`t have a wife").AddOption("Ah, you right", byte.MaxValue);
                            data.AddAvatar(6).FinalizeDialog();
                        }
                    }
                    else
                    {
                        data.AddText("You don`t have 3 MeteorTears").AddOption("Ah, you right", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                    }
                    break;
                case 2:
                    data.AddText("Fate can bring lovers together. And everybody can live happily ever after... Ahhhh... What can I do for you?");
                    data.AddOption("I~want~to~get~married.", 5);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 5:
                    data.AddText("Marriage~is~the~promise~forever.~Are~you~sure~that~you~want~to~spend~the~rest~of~your~life~with~your~lover?");
                    data.AddOption("I~want~to~get~married.", 6);
                    data.AddOption("I~prefer~being~single.", byte.MaxValue);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 6:
                    data.AddText("Are~you~ready~to~propose?");
                    data.AddOption("Yeah.~I~am~ready..", 7);
                    data.AddOption("Let~me~think~it~over.", byte.MaxValue);
                    data.AddAvatar(6).FinalizeDialog();
                    break;
                case 7:
                    {
                        data.AddText("Please click on your lover to propose.");
                        data.AddOption("Okay.", byte.MaxValue);
                        data.AddAvatar(6).FinalizeDialog();
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.dwParam = 1067u;
                        actionQuery.Type = ActionType.OpenCustom;
                        actionQuery.ObjId = client.Player.UID;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 4:
                    break;
            }
        }

        [Npc(NpcID.TwinCityConductress)]
        public static void TwinCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.")
                        .AddOption("Phoenix Castle.", 1)
                        .AddOption("Ape City.", 2)
                        .AddOption("Desert City.", 3)
                        .AddOption("Bird Island.", 4)
                       .AddOption("Mine TwinCity.", 50)
                        //.AddOption("Upgrade Area.", 100)
                        .AddOption("Market.", 6)
                       .AddOption("Just~passing~by.", 255).AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 100:
                    {
                        //var GMap = Database.Server.ServerMaps[9991];
                        //ushort X = 0, Y = 0;
                        //GMap.GetRandCoord(ref X, ref Y);
                        client.Teleport(159, 053, 8250); //NorthPass
                        break;

                    }
                default:
                    {
                        if (client.Player.PKPoints < 29)
                        {
                            if (client.Player.Money >= 100)
                            {
                                client.Player.Money -= 100;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                if (Option == 50)
                                {
                                    client.Teleport(53, 399, 1002);
                                }
                                else
                                {
                                    switch (Option)
                                    {
                                        case 1: client.Teleport(958, 555, 1002); break; //phoenix castle
                                        case 2: client.Teleport(555, 957, 1002); break; //ape mountain
                                        case 3: client.Teleport(69, 473, 1002); break; //desert city
                                        case 4: client.Teleport(232, 190, 1002); break; //birdisland
                                        case 6: client.Teleport(217, 198, 1036); break; //market
                                    }
                                }
                            }
                            else
                            {
                                data.AddText("Hey! You don't have 100 gold do you?\nDon't you dare try to cheat me or I'll call the guards!")
                             .AddOption("Crazy!", 255)
                             .AddAvatar(3)
                             .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I will not help you PKPoints is higher!")
                           .AddOption("Okay...", 255)
                            .AddAvatar(3)
                           .FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [Npc(NpcID.BlackSmith)]
        public unsafe static void BlackSmith(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 32u;
                actionQuery.Type = ActionType.OpenGuiNpc;
                actionQuery.Timestamp = (int)client.ActiveNpc;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                actionQuery.dwParam3 = client.Player.Map;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.PharmacistMK)]
        public unsafe static void PharmacistMK(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 32u;
                actionQuery.Type = ActionType.OpenGuiNpc;
                actionQuery.Timestamp = (int)client.ActiveNpc;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                actionQuery.dwParam3 = client.Player.Map;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.Pharmacist)]
        public unsafe static void Pharmacist(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 32u;
                actionQuery.Type = ActionType.OpenGuiNpc;
                actionQuery.Timestamp = (int)client.ActiveNpc;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                actionQuery.dwParam3 = client.Player.Map;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.TheStorekeeper)]
        public unsafe static void TheStorekeeper(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 32u;
                actionQuery.Type = ActionType.OpenGuiNpc;
                actionQuery.Timestamp = (int)client.ActiveNpc;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                actionQuery.wParam5 = (ushort)client.Player.Map;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.Armorer)]
        public unsafe static void Armorer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 32u;
                actionQuery.Type = ActionType.OpenGuiNpc;
                actionQuery.Timestamp = (int)client.ActiveNpc;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                actionQuery.wParam5 = (ushort)client.Player.Map;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.PheonixCityConductress)]
        public static void PheonixCityConductress(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (Option == 0)
            {
                data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Twin~City", 1);
                data.AddOption("Market", 2);
                data.AddOption("Just~passing~by.", 25).AddAvatar(258).FinalizeDialog();
            }
            else if (client.Player.Money >= 100)
            {
                client.Player.Money -= 100;
                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                switch (Option)
                {
                    case 1:
                        client.Teleport(13, 376, 1011);
                        break;
                    case 2:
                        client.Teleport(217, 198, 1036);
                        break;
                }
                client.Player.Money -= 500;
                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
            }
            else
            {
                data.AddText("I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Ah yes.", byte.MaxValue).AddAvatar(258).FinalizeDialog();
            }
        }

        [Npc(NpcID.TcMapDesert)]
        public static void TcMapDesert(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (Option == 0)
            {
                data.AddText("Warning: This area contains powerful monsters starting at Level 70 \n Make sure you’re prepared before entering.\n Are you sure you want to continue?");
                data.AddOption("Yes, Enter Desert City", 1);
                data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(263).FinalizeDialog();
            }
            else if (client.Player.Money >= 100)
            {
                client.Player.Money -= 100;
                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                switch (Option)
                {
                    case 1:
                        client.Teleport(973, 668, 1000u);
                        break;
                }
            }
            else
            {
                data.AddText("I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Ah yes.", byte.MaxValue).AddAvatar(263).FinalizeDialog();
            }
        }

        [Npc(NpcID.DesertCityConductress)]
        public static void DesertCityConductress(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (Option == 0)
            {
                data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Twin~City", 1);
                data.AddOption("Mystic~Castle", 2);
                data.AddOption("Market", 3);
                data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(263).FinalizeDialog();
            }
            else if (client.Player.Money >= 100)
            {
                client.Player.Money -= 100;
                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                switch (Option)
                {
                    case 1:
                        client.Teleport(973, 668, 1000u);
                        break;
                    case 2:
                        client.Teleport(82, 321, 1000u);
                        break;
                    case 3:
                        client.Teleport(217, 198, 1036u);
                        break;
                }
            }
            else
            {
                data.AddText("I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Ah yes.", byte.MaxValue).AddAvatar(263).FinalizeDialog();
            }
        }

        [Npc(NpcID.ApeCityConductress)]
        public static void ApeCityConductress(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (Option == 0)
            {
                data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Twin~City", 1);
                data.AddOption("Market", 2);
                data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(263).FinalizeDialog();
            }
            else if (client.Player.Money >= 100)
            {
                client.Player.Money -= 100;
                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                switch (Option)
                {
                    case 1:
                        client.Teleport(378, 13, 1020u);
                        break;
                    case 2:
                        client.Teleport(217, 198, 1036u);
                        break;
                }
            }
            else
            {
                data.AddText("You do not have 100 silvers.");
                data.AddOption("Aww!", byte.MaxValue).AddAvatar(263).FinalizeDialog();
            }
        }

        [Npc(NpcID.BirdCityConductress)]
        public static void BirdCityConductress(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            if (Option == 0)
            {
                data.AddText("Where~are~you~heading~for?~I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Twin~City.", 1);
                data.AddOption("Market", 2);
                data.AddOption("Just~passing~by.", byte.MaxValue).AddAvatar(248).FinalizeDialog();
            }
            else if (client.Player.Money >= 100)
            {
                client.Player.Money -= 100;
                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                switch (Option)
                {
                    case 1:
                        client.Teleport(1015, 710, 1015u);
                        break;
                    case 2:
                        client.Teleport(217, 198, 1036u);
                        break;
                }
            }
            else
            {
                data.AddText("I~can~teleport~you~for~a~price~of~100~silver.");
                data.AddOption("Ah yes.", byte.MaxValue).AddAvatar(248).FinalizeDialog();
            }
        }

        [Npc(NpcID.BoxerConductor)]
        public static void BoxerConductor(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you want to leave just tell me when you are ready.It's free.You will be teleported in the city where in before coming here.");
                    data.AddOption("Yeah thanks.", 1);
                    data.AddOption("No,I shall stay here.", byte.MaxValue);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(15);
                    data.FinalizeDialog();
                    break;
                case 1:
                    switch (client.Player.PMap)
                    {
                        default:
                            client.Teleport(428, 378, 1002u);
                            break;
                        case 1000u:
                            client.Teleport(500, 650, 1000u);
                            break;
                        case 1020u:
                            client.Teleport(565, 562, 1020u);
                            break;
                        case 1011u:
                            client.Teleport(188, 264, 1011u);
                            break;
                        case 1015u:
                            client.Teleport(717, 571, 1015u);
                            break;
                    }
                    break;
            }
        }

        [Npc(NpcID.MarketConductress)]
        public static void MarketConductress(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Do you want to leave the market? I can teleport you for free.");
                    data.AddOption("Yeah thanks.", 1);
                    data.AddOption("No,I shall stay here.", byte.MaxValue);
                    data.AddOption("Just~passing~by.", byte.MaxValue);
                    data.AddAvatar(105);
                    data.FinalizeDialog();
                    break;
                case 1:
                    switch (client.Player.PMap)
                    {
                        default:
                            client.Teleport(441, 431, 1002u);
                            break;
                        case 1000u:
                            client.Teleport(500, 650, 1000u);
                            break;
                        case 1020u:
                            client.Teleport(565, 562, 1020u);
                            break;
                        case 1011u:
                            client.Teleport(188, 264, 1011u);
                            break;
                        case 1015u:
                            client.Teleport(717, 571, 1015u);
                            break;
                    }
                    break;
            }
        }

        [Npc(NpcID.OflineTGNpc)]
        public static void OflineTGNpc(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option != 0)
                return;
            if (client.Player.Level == 140)
            {
                client.Send(stream.OfflineTGStatsCreate(0, 0, client.Player.Level, 0L));
                return;
            }
            TimeSpan T1;
            T1 = new TimeSpan(DateTime.Now.Ticks);
            TimeSpan T2;
            T2 = new TimeSpan(client.Player.JoinOnflineTG.Ticks);
            ushort minutes;
            minutes = (ushort)(T1.TotalMinutes - T2.TotalMinutes);
            minutes = Math.Min((ushort)900, minutes);
            ulong nextExperience;
            nextExperience = client.CalcExpBall((int)minutes, out var nextlevel) * 10;
            DBLevExp LevelDBExp;
            LevelDBExp = Server.LevelInfo[DBLevExp.Sort.User][(byte)client.Player.Level];
            string exp;
            exp = ((decimal)nextExperience / (decimal)LevelDBExp.Experience).ToString().Replace(".", "");
            string aaexpp;
            aaexpp = "";
            for (int x = 0; x < exp.Length && x != 8; x++)
            {
                aaexpp += exp[x];
            }
            client.Send(stream.OfflineTGStatsCreate(minutes, (ushort)(900 - minutes), nextlevel, int.Parse(aaexpp)));
        }

        [Npc(NpcID.BlacksmithLee)]
        public unsafe static void BlacksmithLee(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            ActionQuery actionQuery;
            actionQuery = default(ActionQuery);
            actionQuery.Type = ActionType.OpenDialog;
            actionQuery.ObjId = client.Player.UID;
            actionQuery.dwParam = 425u;
            actionQuery.wParam1 = client.Player.X;
            actionQuery.wParam2 = client.Player.Y;
            ActionQuery action;
            action = actionQuery;
            client.Send(stream.ActionCreate(&action));
        }

        [Npc(NpcID.RefineryStabilizer)]
        public unsafe static void RefineryStabilizer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hey there! I can channel the power of Permanent Stones and stabilize the Refinery, which means making the temporary Refinery permanent. Permanent Stones have 10 Stabilization Points,");
                    data.AddText("~and Big Permanent Stones have 100. Different Refinery levels require different amounts of points. I can only perform the stabilization with enough of them. Are we clear? Good.");
                    data.AddText("~Do you want to stabilize the Refinery now?");
                    data.AddOption("Yup.", 1);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 1:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 448u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }

        [Npc(NpcID.PurificationStabilizer)]
        public unsafe static void PurificationStabilizer(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Have you ever heard of the ruthless Terato Dragon? It cuts open every single conqueror that wants to take his prize. His prize are items that purify your items. His affiliates, sub-kings of monsters, also drop items like that. If you have such an item, I can purify your gear with it.");
                    data.AddText("Once purified, the item must be stabilized, otherwise the purity will dissapear after several days. If you want to stabilize your items, come to me I'll see what I can do.");
                    data.AddOption("Purify my item.", 1);
                    data.AddOption("stabilize the Refinery", 3);
                    data.AddOption("Stabilize my soul.", 2);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 1:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 455u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 459u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action2;
                        action2 = actionQuery;
                        client.Send(stream.ActionCreate(&action2));
                        break;
                    }
                case 3:
                    data.AddText("Hey there! I can channel the power of Permanent Stones and stabilize the Refinery, which means making the temporary Refinery permanent. Permanent Stones have 10 Stabilization Points,");
                    data.AddText("~and Big Permanent Stones have 100. Different Refinery levels require different amounts of points. I can only perform the stabilization with enough of them. Are we clear? Good.");
                    data.AddText("~Do you want to stabilize the Refinery now?");
                    data.AddOption("Yup.", 4);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(63).FinalizeDialog();
                    break;
                case 4:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 448u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action3;
                        action3 = actionQuery;
                        client.Send(stream.ActionCreate(&action3));
                        break;
                    }
            }
        }

        [Npc(NpcID.WuxingOven)]
        public unsafe static void WuxingOven(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("I can improve the enchant of an item and I can also improve the plus of an item. Please let me know how can I help you.");
                    data.AddOption("Compose.", 1);
                    data.AddOption("Enchant.", 2);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(78).FinalizeDialog();
                    break;
                case 1:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 1u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenCustom;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 1091u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action2;
                        action2 = actionQuery;
                        client.Send(stream.ActionCreate(&action2));
                        break;
                    }

            }
        }

        [Npc(NpcID.Breeder)]
        public unsafe static void Breeder(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            ActionQuery actionQuery;
            actionQuery = default(ActionQuery);
            actionQuery.Type = ActionType.OpenDialog;
            actionQuery.ObjId = client.Player.UID;
            actionQuery.dwParam = 368u;
            actionQuery.wParam1 = client.Player.X;
            actionQuery.wParam2 = client.Player.Y;
            ActionQuery action;
            action = actionQuery;
            client.Send(stream.ActionCreate(&action));
        }

        [Npc(NpcID.Ethereal)]
        public unsafe static void Ethereal(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Hello there mate. I am here to add to your item a very precious element that will make your item more powerful and also more expensive.");
                    data.AddText("~ Each bless point ( - ) gives you 1% less damage. For -1 you need five Super tortoise gems(STG) or you can gain in through first reborn. For -3 you need one STGs, for -5 you need three STGs and for -7 you five STGs. Do you want to go on?");
                    data.AddOption("Okay let's roll.", 1);
                    //data.AddOption("TortoiseGemComposing", 2);
                    data.AddOption("I will come later. ", byte.MaxValue);
                    data.AddAvatar(27).FinalizeDialog();
                    break;
                case 1:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 426u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action;
                        action = actionQuery;
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.Type = ActionType.OpenDialog;
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.dwParam = 438u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery action2;
                        action2 = actionQuery;
                        client.Send(stream.ActionCreate(&action2));
                        break;
                    }
            }
        }

        [Npc(NpcID.GM)]
        public unsafe static void GM(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog;
            dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.Text("This~is~how~a~GM~looks~like~inside~the~game.~Notice~that~PM\u00b4s~name~will~always~include~a~[PM]~at~the~end.~If~you~do ~not~see~");
                    dialog.Text("the~[PM]~at~the~end~of~someone\u00b4s~name,~and~they~don\u00b4t~look~like~a~floating,~blue~elephant,~that~person~is~not~a~real~PM.~");
                    dialog.Text("Never~give~any~other~players~your~account~information~or~password!");
                    dialog.Option("I want to changepassword.", 43);
                    dialog.Option("Facebook page.", 1);
                    //dialog.Option("Youtube", 201);
                    //dialog.Option("Game website.", 2);
                    dialog.Option("Discord.", 200);
                    dialog.Option("Game Information.", 3);
                    //dialog.Option("Claim Gift from DSConquer[PM]", 4);
                    dialog.Option("Remove[VIP]", 100);
                    dialog.Option("Dark Mode [" + (client.Player.DarkMode ? "on" : "off") + "]", 40);
                    dialog.Option("Later.", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 43:
                    dialog.Text("Please enter your new password!");
                    dialog.AddInput("Here:", 41);
                    dialog.Option("Alright.", byte.MaxValue);
                    dialog.AddAvatar(1);
                    dialog.FinalizeDialog();
                    break;
                case 41:
                    string NewPassword = Input;
                    if (Program.NameStrCheck(NewPassword))
                    {
                        client.Player.TempNewPassword = NewPassword;
                        dialog.Text("Please insert the password again.");
                        dialog.AddInput("Here:", 42);
                        dialog.Option("Forget it.", byte.MaxValue);
                        dialog.AddAvatar(1);
                        dialog.FinalizeDialog();
                    }
                    else
                    {
                        dialog.Text("Wrong~password.~Please~enter~again.");
                        dialog.AddInput("Here:", 43);
                        dialog.Option("Alright.", byte.MaxValue);
                        dialog.AddAvatar(1);
                        dialog.FinalizeDialog();
                    }
                    break;
                case 42:
                    string ChangePassword = Input;
                    if (Program.NameStrCheck(ChangePassword))
                    {
                        if (client.Player.TempNewPassword == ChangePassword)
                        {
                            client.Player.TempNewPassword = "";
                            client.UpdatePassword(client.Player.UID, ChangePassword);
                            dialog.AddText("You have changed the password for your account successfully.If you wanna change or cancel the password, just come to me.");
                            dialog.AddOption("OK!~Thanks");
                            dialog.AddAvatar(1);
                            dialog.FinalizeDialog();
                            client.SendSysMesage("Successfully set! Please remember your new account password");
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Player, " + client.Player.Name + " has change his password to prevent illegal access!", Game.MsgServer.MsgMessage.MsgColor.red, Game.MsgServer.MsgMessage.ChatMode.Talk).GetArray(stream));
                        }
                        else
                        {
                            dialog.Text("The password doesn't match. Insert again?");
                            dialog.AddInput("Here:", 43);
                            dialog.Option("Forget it.", byte.MaxValue);
                            dialog.AddAvatar(1);
                            dialog.FinalizeDialog();
                        }
                    }
                    else
                    {
                        dialog.Text("Invalid password, please try again.");
                        dialog.AddInput("Here:", 5);
                        dialog.Option("Alright.", byte.MaxValue);
                        dialog.AddAvatar(1);
                        dialog.FinalizeDialog();
                    }
                    break;
                case 100:
                    if (client.Player.VipLevel > 0)
                    {
                        dialog.Text($"Are you sure do you want to remove your VIP[{client.Player.VipLevel}] will expire on {client.Player.ExpireVip.ToString("d/M/yyyy (H:mm)")} ?");
                        dialog.Option("Yes Please.", 110);
                        dialog.Option("Later.", byte.MaxValue);
                        dialog.AddAvatar(255).FinalizeDialog();
                    }
                    else
                    {
                        dialog.Text($"Your VIP[{client.Player.VipLevel}] will expire on {client.Player.ExpireVip.ToString("d/M/yyyy (H:mm)")} ?");
                        dialog.Option("I won't.", 110);
                        dialog.Option("Later.", byte.MaxValue);
                        dialog.AddAvatar(255).FinalizeDialog();
                    }
                    break;
                case 110:
                    client.Player.RemovVIPLevel(0, DateTime.Now.AddHours(1.0), client.Player.VipLevel, stream);
                    dialog.Text("You are no longer a VIP Player! Hope you won't regret!");
                    dialog.Option("Thank you.", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 40:
                    client.Player.DarkMode = !client.Player.DarkMode;
                    dialog.Text("Dark Mode: " + (client.Player.DarkMode ? "Enabled" : "Disabled"));
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(296).FinalizeDialog();
                    if (client.Player.DarkMode)
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.Type = ActionType.SetMapColor;
                        actionQuery.dwParam = 3289650u;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery datam;
                        datam = actionQuery;
                        client.Send(stream.ActionCreate(&datam));
                    }
                    else
                    {
                        ActionQuery actionQuery;
                        actionQuery = default(ActionQuery);
                        actionQuery.ObjId = client.Player.UID;
                        actionQuery.Type = ActionType.SetMapColor;
                        actionQuery.dwParam = client.Map.MapColor;
                        actionQuery.wParam1 = client.Player.X;
                        actionQuery.wParam2 = client.Player.Y;
                        ActionQuery datam2;
                        datam2 = actionQuery;
                        client.Send(stream.ActionCreate(&datam2));
                    }
                    break;
                case 4:
                    if (client.Player.VipClaimChance == 0 || client.Player.VipClaimChance == 1)
                    {
                        if (DateTime.Now > client.Player.ExpireVip)
                        {
                            client.Player.ExpireVip = DateTime.Now;
                            client.Player.ExpireVip = client.Player.ExpireVip.AddDays(3);
                        }
                        else
                        {
                            client.Player.ExpireVip = client.Player.ExpireVip.AddDays(3);

                            client.Player.VipLevel = 6;

                            client.Player.SendUpdate(stream, client.Player.VipLevel, MsgUpdate.DataType.VIPLevel);

                            client.Player.UpdateVip(stream);
                        }

                        client.Player.VipClaimChance = 2;
                        client.CreateBoxDialog("You claimed x3 Days VIP added to your VIP[Days]");
                    }
                    else
                    {
                        dialog.Text("Hello " + client.Player.Name + ", You already Claimed your reward, thank you for being patient. \n - DSConquer Staff");
                        dialog.Option("Oh! I see.", 255);
                        dialog.AddAvatar(296).FinalizeDialog();
                    }
                    break;
                case 111:
                    dialog.Text("You've actived Arabic language");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(296).FinalizeDialog();
                    client.Language = Translator.Language.AR;
                    break;
                case 102:
                    dialog.Text("You've actived English language");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(296).FinalizeDialog();
                    client.Language = Translator.Language.EN;
                    break;
                case 103:
                    dialog.Text("You've actived Portuguese language");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(296).FinalizeDialog();
                    client.Language = Translator.Language.PT;
                    break;
                case 104:
                    dialog.Text("You've actived French language");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(296).FinalizeDialog();
                    client.Language = Translator.Language.FR;
                    break;
                case 105:
                    dialog.Text("You've actived German language");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(296).FinalizeDialog();
                    client.Language = Translator.Language.DE;
                    break;
                case 201:
                    client.SendSysMesage("https://www.dsconquer.com/", MsgMessage.ChatMode.WebSite);
                    break;
                case 1:
                    client.SendSysMesage("https://www.facebook.com/divinesiegeconquer/", MsgMessage.ChatMode.WebSite);
                    break;
                case 200:
                    client.SendSysMesage("https://discord.gg/dSGSPGm9pK", MsgMessage.ChatMode.WebSite);
                    break;
                case 2:
                    client.SendSysMesage("https://www.dsconquer.com/", MsgMessage.ChatMode.WebSite);
                    break;
                case 3:
                    dialog.Text("Here are some FAQS.");
                    dialog.Option("Why should I play this game?", 11);

                    // dialog.Option("Server features?", 22);
                    dialog.Option("Getting CPs?", 12);
                    dialog.Option("Nobility", 13);
                    //dialog.Option("P6 Souls / Refineries(Materials)?", 14);
                    dialog.Option("DonationPoints?", 17);
                    dialog.Option("Next Page.", 250);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 250:
                    dialog.Option("What do i get for staying online?", 18);
                    dialog.Option("Leveling-up?", 19);
                    dialog.Option("OTP's Points?", 20);
                    dialog.Option("Auto Hunting", 21);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 19:
                    dialog.Text("Hello " + client.Player.Name + " Leveling is x" + ServerKernel.EXP_RATE + " Easier than before, It`s depends on your gears you sould to get a good gears to get a faster leveling up, and you can be leveling fast by using (bot)");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    client.Player.QuestGUI.SendAutoPatcher(1002u, 425, 378, 81703u);
                    break;
                case 20:
                    dialog.Text("OTP`s are a currency thats given for having the Heaving Blessing ");
                    dialog.Text("you'll get 1 point every 2 min stay online.");
                    dialog.Text($"so if you stay 15 min online you'll get {ServerKernel.STAY_ONLINE} CPs.");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 11:
                    dialog.Text("We aim to provide the players a version of the game where things were nice and balanced in our opinion. ");
                    dialog.Text("We've played Conquer for years and understand the view of the game as players,our goal is to re-write ");
                    dialog.Text("the history of Conquer before it was ruined with unnecessary features that made tons of players dislike ");
                    dialog.Text("our beloved game.Together we are unstoppable CONQUERORS!!.");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 12:
                    dialog.Text("You can make an archer and kill the monsters to get the random cps,you can also gain DragonBalls and exchange them for CPs at CPAmdmin in market.");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 13:
                    dialog.Text("Nobility works using CPs. Example : 10.000 cps is 10.000 in nobility rank. Also each Rank give additional HP.");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 17:
                    dialog.Text("DonationPoints are the in-game currency to buy items from our DonationShop. Please visit PrizeOfficer in Market to see the shop.");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 18:
                    dialog.Text("You get OnlinePoints which can be used through the OnlinePointsManager to trade for items of use, more to be added.");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 14:
                    dialog.Text("You can get Soul & Material Who Killed Boss or Treasure Thif Also you can switch Soul & Material from Souls Trader");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 21:
                    dialog.Text("You can play Auto Hunting for free by upgrading to VIP 4 using online points");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
                case 22:
                    dialog.Text("* /t/t/Normal`s Player Performance *\n");
                    dialog.Text("--------------------------------------------------------------------------------------- \n");
                    dialog.Text("     Drop rate: " + ServerKernel.CP_MONSTER_DROP_RATE[0] + " CPs\t\t  Stones: (+1,+2,+3) \n");
                    dialog.Text("     Dragon Balls\t\t  Meteors \n");
                    dialog.Text("     Activate Auto Hunting \n");
                    dialog.Text("     Letters Conquer\t\t  EXP-Balls \n");
                    dialog.Text("--------------------------------------------------------------------------------------- \n");
                    dialog.Text("* VIP`s Player Performance *\n");
                    dialog.Text("--------------------------------------------------------------------------------------- \n");
                    dialog.Text("     Drop rate: " + ServerKernel.CP_MONSTER_DROP_RATE[1] + " CPs\t\t   \n");
                    dialog.Text("     Activate Auto Hunting\t\t  Activate Auto Looting \n");
                    dialog.Text("     Activate Switch Enemies\t\t  Activate Switch Allies \n");
                    dialog.Text("--------------------------------------------------------------------------------------- \n");
                    dialog.Option("Thanks", byte.MaxValue);
                    dialog.AddAvatar(255).FinalizeDialog();
                    break;
            }
        }

        [Npc(NpcID.LeaveSpook)]
        public static void LeaveSpook(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Do you want to leave the spook map?");
                    data.AddOption("Leave.", 1);
                    data.AddOption("I`ll~think~it~over.", byte.MaxValue).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(428, 380, 1002u);
                    break;
            }
        }

        [Npc(NpcID.LeaveUpgrade)]
        public static void LeaveUpgrade(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Do you want to leave the Upgrade Map?");
                    data.AddOption("Leave.", 1);
                    data.AddOption("I`ll~think~it~over.", byte.MaxValue).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(428, 380, 1002u);
                    break;
            }

        }

        [Npc(NpcID.Tony)]
        public static void Tony(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("Here i can take u to the CpBoss.");
                    data.AddOption("Yes I Want To", 1);
                    data.AddOption("I`ll~think~it~over.", byte.MaxValue).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(49, 78, 1127);
                    break;
            }
        }

        [Npc(NpcID.GotoUpgrade)]
        public static void GotoUpgrade(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("This is the upgrade map. In this upgrade map, people can kill you while you are upgrading. Make sure your friends or at least your other character is watching your back, because things will get intense in here.");
                    data.AddOption("Yes I Want To", 1);
                    data.AddOption("I`ll~think~it~over.", byte.MaxValue).FinalizeDialog();
                    break;
                case 1:
                    client.Teleport(158, 53, 8250u);
                    break;
            }
        }
        [Npc(NpcID.GreatMerchant)]
        public unsafe static void GreatMerchant(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            new Dialog(client, stream);
            if (Option == 0)
            {
                ActionQuery actionQuery;
                actionQuery = default(ActionQuery);
                actionQuery.ObjId = client.Player.UID;
                actionQuery.dwParam = 32u;
                actionQuery.Type = ActionType.OpenGuiNpc;
                actionQuery.Timestamp = 2888;
                actionQuery.wParam1 = client.Player.X;
                actionQuery.wParam2 = client.Player.Y;
                actionQuery.dwParam3 = client.Player.Map;
                ActionQuery action;
                action = actionQuery;
                client.Send(stream.ActionCreate(&action));
            }
        }

        [Npc(NpcID.DemonBox)]
        public static void DemonBox(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720650u, 1u, 0))
                return;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                    data.AddText("~By killing the Demon, you will have a chance to get a Joy CP Pack (1380 CPs). Are you sure you want to release it now?");
                    data.AddOption("Yes!", 1);
                    data.AddOption("Wait...");
                    data.FinalizeDialog();
                    break;
                case 1:

                    ushort centerX = 46;
                    ushort centerY = 35;
                    ushort radius = 3;
                    if (client.Player.Map == 1127 &&
                        client.Player.X >= centerX - radius && client.Player.X <= centerX + radius &&
                        client.Player.Y >= centerY - radius && client.Player.Y <= centerY + radius)
                    {
                        if (client.Player.View.ContainMobInScreen("SwordMaster"))
                        {
                            client.SendSysMesage("The Demon was released! Hurry and kill it to get the rewards!");
                            break;
                        }
                        client.Inventory.Remove(720650u, 1u, stream);
                        Server.AddMapMonster(stream, client.Map, 6643u, centerX, centerY, 3, 3, 1, client.Player.DynamicID);
                        client.SendSysMesage("You opened the Demon Box and a demon was released! Hurry and kill it to get the reward!");
                    }
                    else
                        client.SendSysMesage("The Demon Box is unavailable for use in the Dungeon (46,35) .");
                    break;
            }
        }

        [Npc(NpcID.AuroraDemonBox)]
        public static void AuroraDemonBox(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720674u, 1u, 0))
                return;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you open the Aurora Demon Box, a demon will be released! After you kill it, you`ll have a chance to get a Pilgrim CP Pack (690000 CPs)! I");
                    data.AddText("~suggest you open it in a secret place to keep from being robbed. Are you sure you want to open it and release the demon now?");
                    data.AddOption("Yes!", 1);
                    data.AddOption("Wait...");
                    data.FinalizeDialog();
                    break;
                case 1:
                    ushort centerX = 196;
                    ushort centerY = 180;
                    ushort radius = 3;
                    if (client.Player.Map == 8250 &&
                        client.Player.X >= centerX - radius && client.Player.X <= centerX + radius &&
                        client.Player.Y >= centerY - radius && client.Player.Y <= centerY + radius)
                    {
                        if (client.Player.View.ContainMobInScreen("AuroraDemon"))
                        {
                            client.SendSysMesage("The Aurora Demon was released! Hurry and kill it to get the rewards!");
                            break;
                        }
                        client.Inventory.Remove(720674u, 1u, stream);
                        Server.AddMapMonster(stream, client.Map, 2438u, centerX, centerY, 3, 3, 1, client.Player.DynamicID);
                        client.SendSysMesage("You opened the Aurora Demon Box and a demon was released! Hurry and kill it to get the rewards!");
                    }
                    else
                        client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.");
                    break;
            }
        }

        [Npc(NpcID.SacredDemonBox)]
        public static void SacredDemonBox(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(722077u, 1u, 0))
                return;
            if (client.Map.ID != 1099)
            {
                client.SendSysMesage("Upgrade your house first before summoning the demon!");
                return;
            }
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("If you open the Summoning Orb, a demon will be released! After you kill it, you`ll have a chance to get a Random Reward! I");
                    data.AddText("~suggest you open it somewhere safe from prying eyes. Are you sure you want to open it and release the demon now?");
                    data.AddOption("Yes!", 1);
                    data.AddOption("Wait...");
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                    {
                        if (client.Player.View.ContainMobInScreen("CornDevil"))
                        {
                            client.SendSysMesage("The Corn Devil Demon was released! Hurry and kill it to get the rewards!");
                            break;
                        }
                        client.Inventory.Remove(722077u, 1u, stream);
                        Server.AddMapMonster(stream, client.Map, 3737u, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID);
                        Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("The Corn Devil have spawned in the " + client.Player.Name + " House ! Hurry to kill them.", Game.MsgServer.MsgMessage.MsgColor.red, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                        client.SendSysMesage("You opened the Summoning Orb and a Corn Devil Demon was released! Hurry and kill it to get the rewards!");
                    }
                    else
                        client.SendSysMesage("The Summoning Orb is unavailable for use in the cities and Market.");
                    break;
            }
        }

        [Npc(NpcID.ChaosDemonBox)]
        public static void ChaosDemonBox(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720672u, 1u, 0))
                return;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                    data.AddText("~By killing the Chaos Demon, you will have a chance to get a Nimbus CP Pack (138000 CPs). Are you sure you want to release it now?");
                    data.AddOption("Yes!", 1);
                    data.AddOption("Wait...");
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                    {
                        if (client.Player.View.ContainMobInScreen("ChaosDemon"))
                        {
                            client.SendSysMesage("The Chaos Demon was released! Hurry and kill it to get the rewards!");
                            break;
                        }
                        client.Inventory.Remove(720672u, 1u, stream);
                        Server.AddMapMonster(stream, client.Map, 2436u, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID);
                        client.SendSysMesage("You opened the Chaos Demon Box and a Chaos Demon was released! Hurry and kill it to get the rewards!");
                    }
                    else
                        client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.");
                    break;
            }
        }

        [Npc(NpcID.HeavenDemonBox)]
        public static void HeavenDemonBox(GameClient client, Packet stream, byte Option, string Input, uint id)
        {
            if (!client.Inventory.Contain(720671u, 1u, 0))
                return;
            Dialog data;
            data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    data.AddText("You should open your Demon Box in a secret place far away from the guards and other players! Do not open it at the border of the map!");
                    data.AddText("~By killing the Heaven Demon, you will have a chance to get a Frost CP Pack (69000 CPs). Are you sure you want to release it now?");
                    data.AddOption("Yes!", 1);
                    data.AddOption("Wait...");
                    data.FinalizeDialog();
                    break;
                case 1:
                    if (client.MyHouse != null && client.Player.DynamicID == client.Player.UID)
                    {
                        if (client.Player.View.ContainMobInScreen("HeavenDemon"))
                        {
                            client.SendSysMesage("The Heaven Demon was released! Hurry and kill it to get the rewards!");
                            break;
                        }
                        client.Inventory.Remove(720671u, 1u, stream);
                        Server.AddMapMonster(stream, client.Map, 2435u, client.Player.X, client.Player.Y, 3, 3, 1, client.Player.DynamicID);
                        client.SendSysMesage("You opened the Heaven Demon Box and a Heaven Demon was released! Hurry and kill it to get the rewards!");
                    }
                    else
                        client.SendSysMesage("The Demon Box is unavailable for use in the cities and Market.");
                    break;
            }
        }

        [NpcAttribute(NpcID.Flame1)]
        public static void Flame1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729960, 1, 1))
                        {
                            client.Inventory.Remove(729960, 1, stream);
                            client.Inventory.Add(stream, 729961, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 1 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(317,270)~on~the~right~of~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(317,270)~on~the~right~of~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame2)]
        public static void Flame2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729961, 1, 1))
                        {
                            client.Inventory.Remove(729961, 1, stream);
                            client.Inventory.Add(stream, 729962, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 2 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(236,291)~near~the~bridge~in~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(236,291)~near~the~bridge~in~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame3)]
        public static void Flame3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729962, 1, 1))
                        {
                            client.Inventory.Remove(729962, 1, stream);
                            client.Inventory.Add(stream, 729963, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 3 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(194,168)~near~the~right~gate~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(194,168)~near~the~right~gate~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame4)]
        public static void Flame4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729963, 1, 1))
                        {
                            client.Inventory.Remove(729963, 1, stream);
                            client.Inventory.Add(stream, 729964, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 4 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(115,53)~on~the~right~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(115,53)~on~the~right~of~the~Guild~City.").FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame5)]
        public static void Flame5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729964, 1, 1))
                        {
                            client.Inventory.Remove(729964, 1, stream);
                            client.Inventory.Add(stream, 729965, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 5 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(316,378)~on~the~left~of~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(316,378)~on~the~left~of~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame6)]
        public static void Flame6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729965, 1, 1))
                        {
                            client.Inventory.Remove(729965, 1, stream);
                            client.Inventory.Add(stream, 729966, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 6 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(136,182)~near~the~left~gate~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(136,182)~near~the~left~gate~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame7)]
        public static void Flame7(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729966, 1, 1))
                        {
                            client.Inventory.Remove(729966, 1, stream);
                            client.Inventory.Add(stream, 729967, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 7 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(38,94)~on~the~left~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(38,94)~on~the~left~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame8)]
        public static void Flame8(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729967, 1, 1))
                        {
                            client.Inventory.Remove(729967, 1, stream);
                            client.Inventory.Add(stream, 729968, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 8 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame9)]
        public static void Flame9(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (client.Inventory.Contain(729968, 1, 1))
                        {
                            client.Inventory.Remove(729968, 1, stream);
                            client.Inventory.Add(stream, 729969, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 9 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame10)]
        public static void Flame10(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                        {
                            client.SendSysMesage("You totally missed the right time.the 10th Flame Stone can`t be lit up now.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                            break;
                        }
                        if (MsgTournaments.MsgSchedules.GuildWar.FlamesQuest.ActiveFlame10)
                        {
                            if (client.Inventory.Contain(729969, 1, 1))
                            {
                                client.Inventory.Remove(729969, 1, stream);
                                client.Inventory.Add(stream, 729970, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " for lighten up the Flame 10 Stone!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                                data.AddText("Congratulation! light~up~the~Flame~Stone~(62,59)~near~the~Stone~Pole~in~the~Guild~City.").FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You cannot flame up this stone without the proper rune. light~up~the~Flame~Stone~(62,59)~near~the~Stone~Pole~in~the~Guild~City.").FinalizeDialog();
                            }
                        }
                        else
                        {
                            client.SendSysMesage("You totally missed the right time.the 10th Flame Stone can`t be lit up now.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.red);
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FlameTaoist)]
        public static void FlameTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You must have heard that the Olympic Games. I`ve been waiting for it for my entire life. There are 10 Flame Stones")
                                                      .AddText("~that I would like you to light up...You will get some rewards, of course. It really makes sense to us, ah, at least to me.")
                                                  .AddOption("Rewards?~Tell~me~more!~Come~on!", 1)
                                                  .AddOption("Can you give me a rune?", 4)
                                                  .AddOption("I~have~a~rune.~Gimme~the~reward!", 5)
                                                  .AddOption("Not~interested.", 255)
                                                  .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(729970, 1, 1))
                        {
                            if (MsgTournaments.MsgSchedules.GuildWar.Proces == MsgTournaments.ProcesType.Dead)
                            {
                                if (client.Player.Level < ServerKernel.MAX_UPLEVEL)
                                {
                                    client.Inventory.Remove(729970, 1, stream);
                                    DBLevExp nextlevel;
                                    nextlevel = Server.LevelInfo[DBLevExp.Sort.User][(byte)client.Player.Level];
                                    ulong exp;
                                    exp = nextlevel.Experience * 20 / 100uL;
                                    Role.Player player;
                                    player = client.Player;
                                    player.Experience += exp + 1;
                                    client.Player.SendUpdate(stream, (long)client.Player.Experience, MsgUpdate.DataType.Experience);
                                    if (client.Player.Experience >= nextlevel.Experience)
                                    {
                                        ushort level;
                                        level = (ushort)(client.Player.Level + 1);
                                        client.UpdateLevel(stream, level, true);
                                    }
                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations to " + client.Player.Name + " claimed the 20% Experience from FlameTaoist for lighten up the 10 Flame Stones!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                                }
                                //client.GainExpBall(6000 * 12, true, Role.Flags.ExperienceEffect.angelwing);
                            }
                            else
                            {
                                data.AddText("You cannot claim experience while guild war.")
                   .AddOption("Ahh", 255)
                   .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You cannot claim experience if you don't have a rune.")
                   .AddOption("Ahh", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        if (MsgTournaments.MsgSchedules.GuildWar.Proces != MsgTournaments.ProcesType.Dead)
                        {
                            if (!MsgTournaments.MsgSchedules.GuildWar.FlamesQuest.Registred.Contains(client.Player.UID))
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    MsgTournaments.MsgSchedules.GuildWar.FlamesQuest.Registred.Add(client.Player.UID);
                                    client.Inventory.Add(stream, 729960, 0, 0, 0, 0, Flags.Gem.NoSocket, Flags.Gem.NoSocket, true);
                                }
                                else
                                {
                                    data.AddText("There is not enough room in your inventory.")
                    .AddOption("Ah, hold on.", 255)
                    .AddAvatar(67).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You already have a rune.")
                .AddOption("Thank you.", 255)
                .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You? Wait a sec... Oh, yeah, no wonder you looked familir. Each player can carry this quest ONCE a week")
                                .AddText("only, and if you have more runes, you may as well accept the quest with Flame Taoist next week and claim your reward directly when the quest ends.")
               .AddOption("Once~a~week?!", 255)
               .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Ah, you seem very interested! Good. You are eligible to light up the flame! But, it`s not the right time. You see, the")
                                                     .AddText("~ceremony will be held till the last two hours of the Guild War. Come and sign up then.")
                                                 .AddOption("Would~you~please~give~me~more~information?", 2)
                                                 .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Yeah. I`ve prepare 10 Flame Stones in the Wind Plain and Guild Arena. When the time comes, I will give you a Jade Rune. You")
                                                      .AddText("~just take it to light up all the Flame Stones in sequence.")
                                                  .AddOption("Sure.", 255)
                                                  .AddAvatar(67).FinalizeDialog();

                        break;
                    }
            }
        }
        #region DemonExterminator
        [NpcAttribute(NpcID.MCaptain)]
        public static void MCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 20)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(39).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(39).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(39).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(39).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[1001].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(39).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(39).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(39).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 500, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(39).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BCaptain)]
        public static void BCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 10)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(44).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(44).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(44).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(44).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(44).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(44).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(44).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 500, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(44).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DCCaptain)]
        public static void DCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 10)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(10).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(10).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(10).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(10).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 300, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AMCaptain)]
        public static void AMCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 10)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(73).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(73).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(73).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();



                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(73).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(73).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(73).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 300, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PCCaptain)]
        public static void PCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 10)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(79).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(79).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(79).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(79).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(79).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(79).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(79).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 300, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(79).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(79).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TCCaptain)]
        public static void TCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.IncreaseExperience(stream, 1400, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("Good day, my friend, I`m the TC Captain, I`m in charge of the public security around")
                            .AddText(" here. It is indeed an important job, isn`t it? Well, ever talking about contributing")
                            .AddText(" a bit to the public? You'll be rewarded.")
                       .AddOption("I want to take a Quest.", 240)
                       .AddOption("i~will~think~about~this", 255)
                       .AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 240:
                    {
                        data.AddText("I have some jobs for you to do here! The Pheasants outside Twin City are becoming more")
                                                        .AddText(" and more aggressive! I want you to defeat 10 of them. This is for the safety of the people")
                                                        .AddText(" in Twin City.")
                                                   .AddOption("I want to take a Quest.", 230)
                                                   .AddOption("i~will~think~about~this", 255)
                                                   .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 233:
                    {
                        data.AddText("Good job! That is what i want! You returned peace to Twin City!")
                            .AddOption("Thank you!", 233)
                            .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 231:
                    {
                        data.AddText("There is a long way to go! You need some professional guidance to grow stronger! Find the NPC of your class")
                                                           .AddText(" in the Job center to learn more about job promotion!")
                                                      .AddOption("Job promotion 1.", 234)
                                                      .AddOption("I want to take a Daily Quest.", 230)
                                                      .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 230:
                    {
                        if (client.Player.TCCaptainTimes == 10)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.IncreaseExperience(stream, 1400, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 150, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        #endregion

        [NpcAttribute(NpcID.Norbert)]
        public static void Norbert(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721262, 5) && client.Inventory.Contain(721263, 1))
                        {
                            data.AddText("Hi, you have got the meterial i want. Do you come for the Bomb?")
                 .AddOption("Yes", 10)
                 .AddOption("Just passing by.", 255)
                 .AddAvatar(67).FinalizeDialog();

                            break;
                        }
                        data.AddText("Five~pieces~of~Saltpeter~and~one~piece~of~Sulphur~are~required~to~make~the~Bomb.~And~I~charge~a~fee~of~30,000~silvers.")
                   .AddOption("What~is~the~Bomb?", 1)
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("It`s used to blow down the guild gate! I participated in a guild war and witnessed lots of people lost their lives when attacking the gate.")
                            .AddText("~Since then, I have been working on inventing powerful bombs which can destroy the guild gate. Finally, I make it!")
                   .AddOption("Can~you~make~one~for~me?", 2)
                   .AddOption("Oh.~I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("No problem. But you know such bombs are powerful and dangerous. Whoever uses it to destroy a guild gate will be killed by the bomb, too!")
                  .AddOption("Thanks.~I~need~it~badly.", 3)
                  .AddOption("Then~forget~it.", 255)
                  .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Good. You`re going to collect 5 Saltpeter and a Sulphur. Besides, you`ll need to pay 30,000 Silver as fees.")
                   .AddOption("Where~do~I~get~the~materials?", 4)
                   .AddOption("I`ll~give~up.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("You~can~get~Saltpeter~from~my~friend~OldQuarrier~in~Ape~City~and~get~Sulphur~from~the~Bandits~nearby.")
                   .AddOption("Okay,~I`ll~be~back~soon.", 255)
                   .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(721262, 5) && client.Inventory.Contain(721263, 1))
                        {
                            client.Inventory.Remove(721262, 5, stream);
                            client.Inventory.Remove(721263, 1, stream);
                            client.Inventory.Add(stream, 721261);
                            data.AddText("You can take the Bomb away. Remember that you`ll be killed once you use it to destroy the guild gate!")
                   .AddOption("I see. Thanks for the remind.", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.OldQuarrier)]
        public static void OldQuarrier(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Let me guess. It`s Norbert who asked you to come here. Am I right?")
                  .AddOption("Yeah,~I~need~a~Saltpeter.", 1)
                  .AddOption("Nope.", 2)
                  .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.Inventory.Add(stream, 721262);
                            data.AddText("My~pleasure.~Here~you~are.")
             .AddOption("Thank~you.", 255)
             .AddAvatar(91).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Please make 1 more space in your inventory.")
              .AddOption("Let me check.", 255)
              .AddAvatar(91).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        data.AddText("Are~you~coming~for~Saltpeter?~Since~Norbert~invented~Bomb,~I~have~been~kept~busy~with~supplying~Saltpeter~for~him.")
                            .AddOption("What~is~the~Bomb?", 3)
                            .AddOption("Sorry~to~bother~you.", 255)
                            .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("It~is~powerful~and~used~to~bomb~out~City~Gate.~If~you`re~interested~in~it,~you~can~visit~Norbert~ for the details. He lives in~the~small~village~of~the~Maple Forest")
                             .AddOption("I~see.", 255)
                             .AddAvatar(91).FinalizeDialog();

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.SiegeNpc)]
        public static unsafe void SiegeNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        {
                            client.ActiveNpc = 55170u;
                            ActionQuery actionQuery;
                            actionQuery = default(ActionQuery);
                            actionQuery.ObjId = client.Player.UID;
                            actionQuery.dwParam = 32u;
                            actionQuery.Type = ActionType.OpenGuiNpc;
                            actionQuery.Timestamp = (int)client.ActiveNpc;
                            actionQuery.wParam1 = client.Player.X;
                            actionQuery.wParam2 = client.Player.Y;
                            actionQuery.wParam5 = (ushort)client.Player.Map;
                            ActionQuery action;
                            action = actionQuery;
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }

                    }

            }
        }

        [NpcAttribute(NpcID.CityWarTC)]
        public static unsafe void CityWarTC(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            uint CitywarTC;
            CitywarTC = ISchedule.Schedules[ISchedule.EventID.CitywarTC].StartMinute;
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Prepare your guild for the ultimate City wars!");
                        dialog.AddText("\n# ======================================================= #.");
                        dialog.AddText($"\n Event Schedule : Everyday a single city at ({ISchedule.Schedules[ISchedule.EventID.CitywarTC].StartHour}:{ISchedule.Schedules[ISchedule.EventID.CitywarTC].StartMinute} - {ISchedule.Schedules[ISchedule.EventID.CitywarTC].EndHour}:{ISchedule.Schedules[ISchedule.EventID.CitywarTC].EndMinute})");
                        dialog.AddText("\n# ======================================================= #.");
                        dialog.AddText("\n Event Reward : 5,000,000 Silver");
                        dialog.AddText("\n               5xDragonBall | 2xMoonbox | 1x999Tulips"); //| 1x999Roses | 1x999Orchids
                        dialog.AddText("\n               1x999Roses | 1x999Orchids | 1x999Tulips"); //| 1x999Roses | 1x999Orchids
                        dialog.AddText("\n               2xMegaMetsPack | 1xCleanWater | 1xEmerald"); //| 1x999Roses | 1x999Orchids
                        dialog.AddText("\n# ======================================================= #.");
                        dialog.AddOption("CitywarTC (" + MsgSchedules.CitywarTC.Proces + ")", (byte)TournamentType.CitywarTC);
                        dialog.AddOption("Rewards", 1);
                        dialog.AddOption("I will come later. ", byte.MaxValue);
                        dialog.AddAvatar(77);
                        dialog.FinalizeDialog();
                        return;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(25))
                        {
                            dialog.AddText("------------------------------------------------------\n")
                                            .AddText("There`s not enough space in your inventory\n")
                                            .AddText("you need (25) free space in your inventory\n")
                                            .AddText("------------------------------------------------------")
                                            .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                            return;
                        }
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.CitywarTC.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.CitywarTC.Proces == MsgTournaments.ProcesType.Dead)
                        {

                            if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.CitywarTC.Winner.LeaderReward > 0
                                    && !MsgTournaments.MsgSchedules.CitywarTC.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgTournaments.MsgSchedules.CitywarTC.RewardLeader.Add(client.Player.UID);
                                MsgTournaments.MsgSchedules.CitywarTC.Winner.LeaderReward -= 1;
                                client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
                                client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
                                client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
                                client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
                                client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
                                client.Inventory.Add(stream, 720547, 5, 0, 0, 0);//MegaMetsPack x2
                                client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
                                client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
                                client.Player.Money += 10000000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                string Rank = "";
                                if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
                                else Rank = "LeaderSpouse";
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgCitywarTC.CitywarTCScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the TwinCity War.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }
                            else
                            {
                                dialog.AddText("Just the GuildLeader can claim the reward!")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Your~guild~has~not~dominated~guild~area..")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.CityWarPC)]
        public static unsafe void CityWarPC(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            uint CitywarTC;
            CitywarTC = ISchedule.Schedules[ISchedule.EventID.CitywarPC].StartMinute;
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Prepare your guild for the ultimate City wars!");
                        dialog.AddText("\n# ======================================================= #.");
                        dialog.AddText($"\n Event Schedule : Everyday a single city at ({ISchedule.Schedules[ISchedule.EventID.CitywarPC].StartHour}:{ISchedule.Schedules[ISchedule.EventID.CitywarPC].StartMinute} - {ISchedule.Schedules[ISchedule.EventID.CitywarPC].EndHour}:{ISchedule.Schedules[ISchedule.EventID.CitywarPC].EndMinute})");
                        dialog.AddText("\n# ======================================================= #.");
                        dialog.AddText("\n Event Reward : 5,000,000 Silver");
                        dialog.AddText("\n               5xDragonBall | 2xMoonbox | 1x999Tulips"); //| 1x999Roses | 1x999Orchids
                        dialog.AddText("\n               1x999Roses | 1x999Orchids | 1x999Tulips"); //| 1x999Roses | 1x999Orchids
                        dialog.AddText("\n               2xMegaMetsPack | 1xCleanWater | 1xEmerald"); //| 1x999Roses | 1x999Orchids
                        dialog.AddText("\n# ======================================================= #.");
                        dialog.AddOption("CitywarPC (" + MsgSchedules.CitywarPC.Proces + ")", (byte)TournamentType.CitywarPC);
                        dialog.AddOption("Rewards", 1);
                        dialog.AddOption("I will come later. ", byte.MaxValue);
                        dialog.AddAvatar(77);
                        dialog.FinalizeDialog();
                        return;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(25))
                        {
                            dialog.AddText("------------------------------------------------------\n")
                                            .AddText("There`s not enough space in your inventory\n")
                                            .AddText("you need (25) free space in your inventory\n")
                                            .AddText("------------------------------------------------------")
                                            .AddOption("I~see.", 255).AddAvatar(53).FinalizeDialog();
                            return;
                        }
                        if (client.Player.GuildID == MsgTournaments.MsgSchedules.CitywarPC.Winner.GuildID && client.Player.MyGuild != null && MsgTournaments.MsgSchedules.CitywarPC.Proces == MsgTournaments.ProcesType.Dead)
                        {

                            if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.LeaderSpouse) && MsgTournaments.MsgSchedules.CitywarPC.Winner.LeaderReward > 0
                                    && !MsgTournaments.MsgSchedules.CitywarPC.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgTournaments.MsgSchedules.CitywarPC.RewardLeader.Add(client.Player.UID);
                                MsgTournaments.MsgSchedules.CitywarPC.Winner.LeaderReward -= 1;
                                client.Inventory.Add(stream, 1088000, 5, 0, 0, 0);//DragonBall x5
                                client.Inventory.Add(stream, 721080, 2, 0, 0, 0);//Moonbox x2
                                client.Inventory.Add(stream, 754099, 1, 0, 0, 0);//999Tulips x1
                                client.Inventory.Add(stream, 753099, 1, 0, 0, 0);//999Orchids x1
                                client.Inventory.Add(stream, 751099, 1, 0, 0, 0);//999RedRoses x1
                                client.Inventory.Add(stream, 720547, 5, 0, 0, 0);//MegaMetsPack x2
                                client.Inventory.Add(stream, 721258, 2, 0, 0, 0);//CleanWater x2
                                client.Inventory.Add(stream, 1080001, 3, 0, 0, 0);//Emerald x2 & x2 UpgradeToken
                                client.Player.Money += 10000000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                                string Rank = "";
                                if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) Rank = "GuildLeader";
                                else Rank = "LeaderSpouse";
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , " + Rank + " from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgCitywarTC.CitywarTCScrore.ConquerPointsReward.ToString() + " ConquerMoney for the domination the PhoenixCity War.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }
                            else
                            {
                                dialog.AddText("Just the GuildLeader can claim the reward!")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Your~guild~has~not~dominated~guild~area..")
                        .AddOption("Ok~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
    }
}